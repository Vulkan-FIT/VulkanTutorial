#pragma once

#include <cstdint>
#include <stdlib.h>
#include <string.h>
#include <utility>


namespace vk {

// foward declarations
struct ExtensionProperties;
template<typename Type> class Vector;
struct InstanceCreateInfo;
struct DeviceCreateInfo;
enum class Result;


// handle types
// author: PCJohn (peciva at fit.vut.cz)
using Instance = struct Instance_T*;
using Device = struct Device_T*;
using PhysicalDevice = struct PhysicalDevice_T*;


// public Vulkan variables
// author: PCJohn (peciva at fit.vut.cz)
namespace detail {
	extern void* _library;
	extern Instance _instance;
	extern Device _device;
	extern uint32_t _instanceVersion;
}

inline void* library()  { return detail::_library; }
inline Instance instance()  { return detail::_instance; }
inline Device device()  { return detail::_device; }
inline uint32_t enumerateInstanceVersion()  { return detail::_instanceVersion; }


// initialization and cleanUp functions
// author: PCJohn (peciva at fit.vut.cz)
void loadLib_throw();
Result loadLib_noThrow() noexcept;
inline void loadLib()  { loadLib_throw(); }

void loadLib_throw(const char* libPath);  // or const std::filesystem::path& libPath if import std
Result loadLib_noThrow(const char* libPath) noexcept;  // or const std::filesystem::path& libPath if import std
inline void loadLib(const char* libPath)  { loadLib_throw(libPath); }  // or const std::filesystem::path& libPath if import std

void initInstance_throw(const InstanceCreateInfo& createInfo);
Result initInstance_noThrow(const InstanceCreateInfo& createInfo) noexcept;
inline void initInstance(const InstanceCreateInfo& createInfo)  { initInstance_throw(createInfo); }
void initInstance(Instance instance) noexcept;

void initDevice_throw(PhysicalDevice pd, const DeviceCreateInfo& createInfo);
Result initDevice_noThrow(PhysicalDevice pd, const DeviceCreateInfo& createInfo) noexcept;
inline void initDevice(PhysicalDevice pd, const DeviceCreateInfo& createInfo)  { initDevice_throw(pd, createInfo); }
void initDevice(Device device) noexcept;

template<typename T> inline T getInstanceProcAddr(const char* name) noexcept;
template<typename T> inline T getDeviceProcAddr(const char* name) noexcept;
bool isExtensionSupported(const Vector<ExtensionProperties>& extensionList, const char* extensionName) noexcept;
void destroyDevice() noexcept;
void destroyInstance() noexcept;
void unloadLib() noexcept;
void cleanUp() noexcept;


// enums
// author: PCJohn (peciva at fit.vut.cz)
enum class Result
{
	eSuccess                                     = 0,
	eNotReady                                    = 1,
	eTimeout                                     = 2,
	eEventSet                                    = 3,
	eEventReset                                  = 4,
	eIncomplete                                  = 5,
	eErrorOutOfHostMemory                        = -1,
	eErrorOutOfDeviceMemory                      = -2,
	eErrorInitializationFailed                   = -3,
	eErrorDeviceLost                             = -4,
	eErrorMemoryMapFailed                        = -5,
	eErrorLayerNotPresent                        = -6,
	eErrorExtensionNotPresent                    = -7,
	eErrorFeatureNotPresent                      = -8,
	eErrorIncompatibleDriver                     = -9,
	eErrorTooManyObjects                         = -10,
	eErrorFormatNotSupported                     = -11,
	eErrorFragmentedPool                         = -12,
	eErrorUnknown                                = -13,
	eErrorOutOfPoolMemory                        = -1000069000,
	eErrorOutOfPoolMemoryKHR                     = eErrorOutOfPoolMemory,
	eErrorInvalidExternalHandle                  = -1000072003,
	eErrorInvalidExternalHandleKHR               = eErrorInvalidExternalHandle,
	eErrorFragmentation                          = -1000161000,
	eErrorFragmentationEXT                       = eErrorFragmentation,
	eErrorInvalidOpaqueCaptureAddress            = -1000257000,
	eErrorInvalidDeviceAddressEXT                = eErrorInvalidOpaqueCaptureAddress,
	eErrorInvalidOpaqueCaptureAddressKHR         = eErrorInvalidOpaqueCaptureAddress,
	ePipelineCompileRequired                     = 1000297000,
	eErrorPipelineCompileRequiredEXT             = ePipelineCompileRequired,
	ePipelineCompileRequiredEXT                  = ePipelineCompileRequired,
	eErrorSurfaceLostKHR                         = -1000000000,
	eErrorNativeWindowInUseKHR                   = -1000000001,
	eSuboptimalKHR                               = 1000001003,
	eErrorOutOfDateKHR                           = -1000001004,
	eErrorIncompatibleDisplayKHR                 = -1000003001,
	eErrorValidationFailedEXT                    = -1000011001,
	eErrorInvalidShaderNV                        = -1000012000,
	eErrorImageUsageNotSupportedKHR              = -1000023000,
	eErrorVideoPictureLayoutNotSupportedKHR      = -1000023001,
	eErrorVideoProfileOperationNotSupportedKHR   = -1000023002,
	eErrorVideoProfileFormatNotSupportedKHR      = -1000023003,
	eErrorVideoProfileCodecNotSupportedKHR       = -1000023004,
	eErrorVideoStdVersionNotSupportedKHR         = -1000023005,
	eErrorInvalidDrmFormatModifierPlaneLayoutEXT = -1000158000,
	eErrorNotPermittedKHR                        = -1000174001,
	eErrorNotPermittedEXT                        = eErrorNotPermittedKHR,
#if defined(VK_USE_PLATFORM_WIN32_KHR)
	eErrorFullScreenExclusiveModeLostEXT = -1000255000,
#endif
	eThreadIdleKHR                     = 1000268000,
	eThreadDoneKHR                     = 1000268001,
	eOperationDeferredKHR              = 1000268002,
	eOperationNotDeferredKHR           = 1000268003,
	eErrorInvalidVideoStdParametersKHR = -1000299000,
	eErrorCompressionExhaustedEXT      = -1000338000,
	eIncompatibleShaderBinaryEXT       = 1000482000,
	eErrorIncompatibleShaderBinaryEXT  = eIncompatibleShaderBinaryEXT,
};

enum class Format {
	eUndefined = 0,
	R4G4UnormPack8 = 1,
	VK_FORMAT_R4G4B4A4_UNORM_PACK16 = 2,
	VK_FORMAT_B4G4R4A4_UNORM_PACK16 = 3,
	VK_FORMAT_R5G6B5_UNORM_PACK16 = 4,
	VK_FORMAT_B5G6R5_UNORM_PACK16 = 5,
	VK_FORMAT_R5G5B5A1_UNORM_PACK16 = 6,
	VK_FORMAT_B5G5R5A1_UNORM_PACK16 = 7,
	VK_FORMAT_A1R5G5B5_UNORM_PACK16 = 8,
	VK_FORMAT_R8_UNORM = 9,
	VK_FORMAT_R8_SNORM = 10,
	VK_FORMAT_R8_USCALED = 11,
	VK_FORMAT_R8_SSCALED = 12,
	VK_FORMAT_R8_UINT = 13,
	VK_FORMAT_R8_SINT = 14,
	VK_FORMAT_R8_SRGB = 15,
	VK_FORMAT_R8G8_UNORM = 16,
	VK_FORMAT_R8G8_SNORM = 17,
	VK_FORMAT_R8G8_USCALED = 18,
	VK_FORMAT_R8G8_SSCALED = 19,
	VK_FORMAT_R8G8_UINT = 20,
	VK_FORMAT_R8G8_SINT = 21,
	VK_FORMAT_R8G8_SRGB = 22,
	VK_FORMAT_R8G8B8_UNORM = 23,
	VK_FORMAT_R8G8B8_SNORM = 24,
	VK_FORMAT_R8G8B8_USCALED = 25,
	VK_FORMAT_R8G8B8_SSCALED = 26,
	VK_FORMAT_R8G8B8_UINT = 27,
	VK_FORMAT_R8G8B8_SINT = 28,
	VK_FORMAT_R8G8B8_SRGB = 29,
	VK_FORMAT_B8G8R8_UNORM = 30,
	VK_FORMAT_B8G8R8_SNORM = 31,
	VK_FORMAT_B8G8R8_USCALED = 32,
	VK_FORMAT_B8G8R8_SSCALED = 33,
	VK_FORMAT_B8G8R8_UINT = 34,
	VK_FORMAT_B8G8R8_SINT = 35,
	VK_FORMAT_B8G8R8_SRGB = 36,
	eR8G8B8A8Unorm = 37,
	VK_FORMAT_R8G8B8A8_SNORM = 38,
	VK_FORMAT_R8G8B8A8_USCALED = 39,
	VK_FORMAT_R8G8B8A8_SSCALED = 40,
	VK_FORMAT_R8G8B8A8_UINT = 41,
	VK_FORMAT_R8G8B8A8_SINT = 42,
	eR8G8B8A8Srgb = 43,
	VK_FORMAT_B8G8R8A8_UNORM = 44,
	VK_FORMAT_B8G8R8A8_SNORM = 45,
	VK_FORMAT_B8G8R8A8_USCALED = 46,
	VK_FORMAT_B8G8R8A8_SSCALED = 47,
	VK_FORMAT_B8G8R8A8_UINT = 48,
	VK_FORMAT_B8G8R8A8_SINT = 49,
	VK_FORMAT_B8G8R8A8_SRGB = 50,
	VK_FORMAT_A8B8G8R8_UNORM_PACK32 = 51,
	VK_FORMAT_A8B8G8R8_SNORM_PACK32 = 52,
	VK_FORMAT_A8B8G8R8_USCALED_PACK32 = 53,
	VK_FORMAT_A8B8G8R8_SSCALED_PACK32 = 54,
	VK_FORMAT_A8B8G8R8_UINT_PACK32 = 55,
	VK_FORMAT_A8B8G8R8_SINT_PACK32 = 56,
	VK_FORMAT_A8B8G8R8_SRGB_PACK32 = 57,
	VK_FORMAT_A2R10G10B10_UNORM_PACK32 = 58,
	VK_FORMAT_A2R10G10B10_SNORM_PACK32 = 59,
	VK_FORMAT_A2R10G10B10_USCALED_PACK32 = 60,
	VK_FORMAT_A2R10G10B10_SSCALED_PACK32 = 61,
	VK_FORMAT_A2R10G10B10_UINT_PACK32 = 62,
	VK_FORMAT_A2R10G10B10_SINT_PACK32 = 63,
	VK_FORMAT_A2B10G10R10_UNORM_PACK32 = 64,
	VK_FORMAT_A2B10G10R10_SNORM_PACK32 = 65,
	VK_FORMAT_A2B10G10R10_USCALED_PACK32 = 66,
	VK_FORMAT_A2B10G10R10_SSCALED_PACK32 = 67,
	VK_FORMAT_A2B10G10R10_UINT_PACK32 = 68,
	VK_FORMAT_A2B10G10R10_SINT_PACK32 = 69,
	VK_FORMAT_R16_UNORM = 70,
	VK_FORMAT_R16_SNORM = 71,
	VK_FORMAT_R16_USCALED = 72,
	VK_FORMAT_R16_SSCALED = 73,
	VK_FORMAT_R16_UINT = 74,
	VK_FORMAT_R16_SINT = 75,
	VK_FORMAT_R16_SFLOAT = 76,
	VK_FORMAT_R16G16_UNORM = 77,
	VK_FORMAT_R16G16_SNORM = 78,
	VK_FORMAT_R16G16_USCALED = 79,
	VK_FORMAT_R16G16_SSCALED = 80,
	VK_FORMAT_R16G16_UINT = 81,
	VK_FORMAT_R16G16_SINT = 82,
	VK_FORMAT_R16G16_SFLOAT = 83,
	VK_FORMAT_R16G16B16_UNORM = 84,
	VK_FORMAT_R16G16B16_SNORM = 85,
	VK_FORMAT_R16G16B16_USCALED = 86,
	VK_FORMAT_R16G16B16_SSCALED = 87,
	VK_FORMAT_R16G16B16_UINT = 88,
	VK_FORMAT_R16G16B16_SINT = 89,
	VK_FORMAT_R16G16B16_SFLOAT = 90,
	VK_FORMAT_R16G16B16A16_UNORM = 91,
	VK_FORMAT_R16G16B16A16_SNORM = 92,
	VK_FORMAT_R16G16B16A16_USCALED = 93,
	VK_FORMAT_R16G16B16A16_SSCALED = 94,
	VK_FORMAT_R16G16B16A16_UINT = 95,
	VK_FORMAT_R16G16B16A16_SINT = 96,
	VK_FORMAT_R16G16B16A16_SFLOAT = 97,
	VK_FORMAT_R32_UINT = 98,
	VK_FORMAT_R32_SINT = 99,
	VK_FORMAT_R32_SFLOAT = 100,
	VK_FORMAT_R32G32_UINT = 101,
	VK_FORMAT_R32G32_SINT = 102,
	VK_FORMAT_R32G32_SFLOAT = 103,
	VK_FORMAT_R32G32B32_UINT = 104,
	VK_FORMAT_R32G32B32_SINT = 105,
	VK_FORMAT_R32G32B32_SFLOAT = 106,
	VK_FORMAT_R32G32B32A32_UINT = 107,
	VK_FORMAT_R32G32B32A32_SINT = 108,
	VK_FORMAT_R32G32B32A32_SFLOAT = 109,
	VK_FORMAT_R64_UINT = 110,
	VK_FORMAT_R64_SINT = 111,
	VK_FORMAT_R64_SFLOAT = 112,
	VK_FORMAT_R64G64_UINT = 113,
	VK_FORMAT_R64G64_SINT = 114,
	VK_FORMAT_R64G64_SFLOAT = 115,
	VK_FORMAT_R64G64B64_UINT = 116,
	VK_FORMAT_R64G64B64_SINT = 117,
	VK_FORMAT_R64G64B64_SFLOAT = 118,
	VK_FORMAT_R64G64B64A64_UINT = 119,
	VK_FORMAT_R64G64B64A64_SINT = 120,
	VK_FORMAT_R64G64B64A64_SFLOAT = 121,
	VK_FORMAT_B10G11R11_UFLOAT_PACK32 = 122,
	VK_FORMAT_E5B9G9R9_UFLOAT_PACK32 = 123,
	VK_FORMAT_D16_UNORM = 124,
	VK_FORMAT_X8_D24_UNORM_PACK32 = 125,
	VK_FORMAT_D32_SFLOAT = 126,
	VK_FORMAT_S8_UINT = 127,
	VK_FORMAT_D16_UNORM_S8_UINT = 128,
	VK_FORMAT_D24_UNORM_S8_UINT = 129,
	VK_FORMAT_D32_SFLOAT_S8_UINT = 130,
	VK_FORMAT_BC1_RGB_UNORM_BLOCK = 131,
	VK_FORMAT_BC1_RGB_SRGB_BLOCK = 132,
	VK_FORMAT_BC1_RGBA_UNORM_BLOCK = 133,
	VK_FORMAT_BC1_RGBA_SRGB_BLOCK = 134,
	VK_FORMAT_BC2_UNORM_BLOCK = 135,
	VK_FORMAT_BC2_SRGB_BLOCK = 136,
	VK_FORMAT_BC3_UNORM_BLOCK = 137,
	VK_FORMAT_BC3_SRGB_BLOCK = 138,
	VK_FORMAT_BC4_UNORM_BLOCK = 139,
	VK_FORMAT_BC4_SNORM_BLOCK = 140,
	VK_FORMAT_BC5_UNORM_BLOCK = 141,
	VK_FORMAT_BC5_SNORM_BLOCK = 142,
	VK_FORMAT_BC6H_UFLOAT_BLOCK = 143,
	VK_FORMAT_BC6H_SFLOAT_BLOCK = 144,
	VK_FORMAT_BC7_UNORM_BLOCK = 145,
	VK_FORMAT_BC7_SRGB_BLOCK = 146,
	VK_FORMAT_ETC2_R8G8B8_UNORM_BLOCK = 147,
	VK_FORMAT_ETC2_R8G8B8_SRGB_BLOCK = 148,
	VK_FORMAT_ETC2_R8G8B8A1_UNORM_BLOCK = 149,
	VK_FORMAT_ETC2_R8G8B8A1_SRGB_BLOCK = 150,
	VK_FORMAT_ETC2_R8G8B8A8_UNORM_BLOCK = 151,
	VK_FORMAT_ETC2_R8G8B8A8_SRGB_BLOCK = 152,
	VK_FORMAT_EAC_R11_UNORM_BLOCK = 153,
	VK_FORMAT_EAC_R11_SNORM_BLOCK = 154,
	VK_FORMAT_EAC_R11G11_UNORM_BLOCK = 155,
	VK_FORMAT_EAC_R11G11_SNORM_BLOCK = 156,
	VK_FORMAT_ASTC_4x4_UNORM_BLOCK = 157,
	VK_FORMAT_ASTC_4x4_SRGB_BLOCK = 158,
	VK_FORMAT_ASTC_5x4_UNORM_BLOCK = 159,
	VK_FORMAT_ASTC_5x4_SRGB_BLOCK = 160,
	VK_FORMAT_ASTC_5x5_UNORM_BLOCK = 161,
	VK_FORMAT_ASTC_5x5_SRGB_BLOCK = 162,
	VK_FORMAT_ASTC_6x5_UNORM_BLOCK = 163,
	VK_FORMAT_ASTC_6x5_SRGB_BLOCK = 164,
	VK_FORMAT_ASTC_6x6_UNORM_BLOCK = 165,
	VK_FORMAT_ASTC_6x6_SRGB_BLOCK = 166,
	VK_FORMAT_ASTC_8x5_UNORM_BLOCK = 167,
	VK_FORMAT_ASTC_8x5_SRGB_BLOCK = 168,
	VK_FORMAT_ASTC_8x6_UNORM_BLOCK = 169,
	VK_FORMAT_ASTC_8x6_SRGB_BLOCK = 170,
	VK_FORMAT_ASTC_8x8_UNORM_BLOCK = 171,
	VK_FORMAT_ASTC_8x8_SRGB_BLOCK = 172,
	VK_FORMAT_ASTC_10x5_UNORM_BLOCK = 173,
	VK_FORMAT_ASTC_10x5_SRGB_BLOCK = 174,
	VK_FORMAT_ASTC_10x6_UNORM_BLOCK = 175,
	VK_FORMAT_ASTC_10x6_SRGB_BLOCK = 176,
	VK_FORMAT_ASTC_10x8_UNORM_BLOCK = 177,
	VK_FORMAT_ASTC_10x8_SRGB_BLOCK = 178,
	VK_FORMAT_ASTC_10x10_UNORM_BLOCK = 179,
	VK_FORMAT_ASTC_10x10_SRGB_BLOCK = 180,
	VK_FORMAT_ASTC_12x10_UNORM_BLOCK = 181,
	VK_FORMAT_ASTC_12x10_SRGB_BLOCK = 182,
	VK_FORMAT_ASTC_12x12_UNORM_BLOCK = 183,
	VK_FORMAT_ASTC_12x12_SRGB_BLOCK = 184,
	VK_FORMAT_G8B8G8R8_422_UNORM = 1000156000,
	VK_FORMAT_B8G8R8G8_422_UNORM = 1000156001,
	VK_FORMAT_G8_B8_R8_3PLANE_420_UNORM = 1000156002,
	VK_FORMAT_G8_B8R8_2PLANE_420_UNORM = 1000156003,
	VK_FORMAT_G8_B8_R8_3PLANE_422_UNORM = 1000156004,
	VK_FORMAT_G8_B8R8_2PLANE_422_UNORM = 1000156005,
	VK_FORMAT_G8_B8_R8_3PLANE_444_UNORM = 1000156006,
	VK_FORMAT_R10X6_UNORM_PACK16 = 1000156007,
	VK_FORMAT_R10X6G10X6_UNORM_2PACK16 = 1000156008,
	VK_FORMAT_R10X6G10X6B10X6A10X6_UNORM_4PACK16 = 1000156009,
	VK_FORMAT_G10X6B10X6G10X6R10X6_422_UNORM_4PACK16 = 1000156010,
	VK_FORMAT_B10X6G10X6R10X6G10X6_422_UNORM_4PACK16 = 1000156011,
	VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_420_UNORM_3PACK16 = 1000156012,
	VK_FORMAT_G10X6_B10X6R10X6_2PLANE_420_UNORM_3PACK16 = 1000156013,
	VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_422_UNORM_3PACK16 = 1000156014,
	VK_FORMAT_G10X6_B10X6R10X6_2PLANE_422_UNORM_3PACK16 = 1000156015,
	VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_444_UNORM_3PACK16 = 1000156016,
	VK_FORMAT_R12X4_UNORM_PACK16 = 1000156017,
	VK_FORMAT_R12X4G12X4_UNORM_2PACK16 = 1000156018,
	VK_FORMAT_R12X4G12X4B12X4A12X4_UNORM_4PACK16 = 1000156019,
	VK_FORMAT_G12X4B12X4G12X4R12X4_422_UNORM_4PACK16 = 1000156020,
	VK_FORMAT_B12X4G12X4R12X4G12X4_422_UNORM_4PACK16 = 1000156021,
	VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_420_UNORM_3PACK16 = 1000156022,
	VK_FORMAT_G12X4_B12X4R12X4_2PLANE_420_UNORM_3PACK16 = 1000156023,
	VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_422_UNORM_3PACK16 = 1000156024,
	VK_FORMAT_G12X4_B12X4R12X4_2PLANE_422_UNORM_3PACK16 = 1000156025,
	VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_444_UNORM_3PACK16 = 1000156026,
	VK_FORMAT_G16B16G16R16_422_UNORM = 1000156027,
	VK_FORMAT_B16G16R16G16_422_UNORM = 1000156028,
	VK_FORMAT_G16_B16_R16_3PLANE_420_UNORM = 1000156029,
	VK_FORMAT_G16_B16R16_2PLANE_420_UNORM = 1000156030,
	VK_FORMAT_G16_B16_R16_3PLANE_422_UNORM = 1000156031,
	VK_FORMAT_G16_B16R16_2PLANE_422_UNORM = 1000156032,
	VK_FORMAT_G16_B16_R16_3PLANE_444_UNORM = 1000156033,
	VK_FORMAT_G8_B8R8_2PLANE_444_UNORM = 1000330000,
	VK_FORMAT_G10X6_B10X6R10X6_2PLANE_444_UNORM_3PACK16 = 1000330001,
	VK_FORMAT_G12X4_B12X4R12X4_2PLANE_444_UNORM_3PACK16 = 1000330002,
	VK_FORMAT_G16_B16R16_2PLANE_444_UNORM = 1000330003,
	VK_FORMAT_A4R4G4B4_UNORM_PACK16 = 1000340000,
	VK_FORMAT_A4B4G4R4_UNORM_PACK16 = 1000340001,
	VK_FORMAT_ASTC_4x4_SFLOAT_BLOCK = 1000066000,
	VK_FORMAT_ASTC_5x4_SFLOAT_BLOCK = 1000066001,
	VK_FORMAT_ASTC_5x5_SFLOAT_BLOCK = 1000066002,
	VK_FORMAT_ASTC_6x5_SFLOAT_BLOCK = 1000066003,
	VK_FORMAT_ASTC_6x6_SFLOAT_BLOCK = 1000066004,
	VK_FORMAT_ASTC_8x5_SFLOAT_BLOCK = 1000066005,
	VK_FORMAT_ASTC_8x6_SFLOAT_BLOCK = 1000066006,
	VK_FORMAT_ASTC_8x8_SFLOAT_BLOCK = 1000066007,
	VK_FORMAT_ASTC_10x5_SFLOAT_BLOCK = 1000066008,
	VK_FORMAT_ASTC_10x6_SFLOAT_BLOCK = 1000066009,
	VK_FORMAT_ASTC_10x8_SFLOAT_BLOCK = 1000066010,
	VK_FORMAT_ASTC_10x10_SFLOAT_BLOCK = 1000066011,
	VK_FORMAT_ASTC_12x10_SFLOAT_BLOCK = 1000066012,
	VK_FORMAT_ASTC_12x12_SFLOAT_BLOCK = 1000066013,
	VK_FORMAT_PVRTC1_2BPP_UNORM_BLOCK_IMG = 1000054000,
	VK_FORMAT_PVRTC1_4BPP_UNORM_BLOCK_IMG = 1000054001,
	VK_FORMAT_PVRTC2_2BPP_UNORM_BLOCK_IMG = 1000054002,
	VK_FORMAT_PVRTC2_4BPP_UNORM_BLOCK_IMG = 1000054003,
	VK_FORMAT_PVRTC1_2BPP_SRGB_BLOCK_IMG = 1000054004,
	VK_FORMAT_PVRTC1_4BPP_SRGB_BLOCK_IMG = 1000054005,
	VK_FORMAT_PVRTC2_2BPP_SRGB_BLOCK_IMG = 1000054006,
	VK_FORMAT_PVRTC2_4BPP_SRGB_BLOCK_IMG = 1000054007,
	VK_FORMAT_R16G16_SFIXED5_NV = 1000464000,
	VK_FORMAT_A1B5G5R5_UNORM_PACK16_KHR = 1000470000,
	VK_FORMAT_A8_UNORM_KHR = 1000470001,
	VK_FORMAT_ASTC_4x4_SFLOAT_BLOCK_EXT = VK_FORMAT_ASTC_4x4_SFLOAT_BLOCK,
	VK_FORMAT_ASTC_5x4_SFLOAT_BLOCK_EXT = VK_FORMAT_ASTC_5x4_SFLOAT_BLOCK,
	VK_FORMAT_ASTC_5x5_SFLOAT_BLOCK_EXT = VK_FORMAT_ASTC_5x5_SFLOAT_BLOCK,
	VK_FORMAT_ASTC_6x5_SFLOAT_BLOCK_EXT = VK_FORMAT_ASTC_6x5_SFLOAT_BLOCK,
	VK_FORMAT_ASTC_6x6_SFLOAT_BLOCK_EXT = VK_FORMAT_ASTC_6x6_SFLOAT_BLOCK,
	VK_FORMAT_ASTC_8x5_SFLOAT_BLOCK_EXT = VK_FORMAT_ASTC_8x5_SFLOAT_BLOCK,
	VK_FORMAT_ASTC_8x6_SFLOAT_BLOCK_EXT = VK_FORMAT_ASTC_8x6_SFLOAT_BLOCK,
	VK_FORMAT_ASTC_8x8_SFLOAT_BLOCK_EXT = VK_FORMAT_ASTC_8x8_SFLOAT_BLOCK,
	VK_FORMAT_ASTC_10x5_SFLOAT_BLOCK_EXT = VK_FORMAT_ASTC_10x5_SFLOAT_BLOCK,
	VK_FORMAT_ASTC_10x6_SFLOAT_BLOCK_EXT = VK_FORMAT_ASTC_10x6_SFLOAT_BLOCK,
	VK_FORMAT_ASTC_10x8_SFLOAT_BLOCK_EXT = VK_FORMAT_ASTC_10x8_SFLOAT_BLOCK,
	VK_FORMAT_ASTC_10x10_SFLOAT_BLOCK_EXT = VK_FORMAT_ASTC_10x10_SFLOAT_BLOCK,
	VK_FORMAT_ASTC_12x10_SFLOAT_BLOCK_EXT = VK_FORMAT_ASTC_12x10_SFLOAT_BLOCK,
	VK_FORMAT_ASTC_12x12_SFLOAT_BLOCK_EXT = VK_FORMAT_ASTC_12x12_SFLOAT_BLOCK,
	VK_FORMAT_G8B8G8R8_422_UNORM_KHR = VK_FORMAT_G8B8G8R8_422_UNORM,
	VK_FORMAT_B8G8R8G8_422_UNORM_KHR = VK_FORMAT_B8G8R8G8_422_UNORM,
	VK_FORMAT_G8_B8_R8_3PLANE_420_UNORM_KHR = VK_FORMAT_G8_B8_R8_3PLANE_420_UNORM,
	VK_FORMAT_G8_B8R8_2PLANE_420_UNORM_KHR = VK_FORMAT_G8_B8R8_2PLANE_420_UNORM,
	VK_FORMAT_G8_B8_R8_3PLANE_422_UNORM_KHR = VK_FORMAT_G8_B8_R8_3PLANE_422_UNORM,
	VK_FORMAT_G8_B8R8_2PLANE_422_UNORM_KHR = VK_FORMAT_G8_B8R8_2PLANE_422_UNORM,
	VK_FORMAT_G8_B8_R8_3PLANE_444_UNORM_KHR = VK_FORMAT_G8_B8_R8_3PLANE_444_UNORM,
	VK_FORMAT_R10X6_UNORM_PACK16_KHR = VK_FORMAT_R10X6_UNORM_PACK16,
	VK_FORMAT_R10X6G10X6_UNORM_2PACK16_KHR = VK_FORMAT_R10X6G10X6_UNORM_2PACK16,
	VK_FORMAT_R10X6G10X6B10X6A10X6_UNORM_4PACK16_KHR = VK_FORMAT_R10X6G10X6B10X6A10X6_UNORM_4PACK16,
	VK_FORMAT_G10X6B10X6G10X6R10X6_422_UNORM_4PACK16_KHR = VK_FORMAT_G10X6B10X6G10X6R10X6_422_UNORM_4PACK16,
	VK_FORMAT_B10X6G10X6R10X6G10X6_422_UNORM_4PACK16_KHR = VK_FORMAT_B10X6G10X6R10X6G10X6_422_UNORM_4PACK16,
	VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_420_UNORM_3PACK16_KHR = VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_420_UNORM_3PACK16,
	VK_FORMAT_G10X6_B10X6R10X6_2PLANE_420_UNORM_3PACK16_KHR = VK_FORMAT_G10X6_B10X6R10X6_2PLANE_420_UNORM_3PACK16,
	VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_422_UNORM_3PACK16_KHR = VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_422_UNORM_3PACK16,
	VK_FORMAT_G10X6_B10X6R10X6_2PLANE_422_UNORM_3PACK16_KHR = VK_FORMAT_G10X6_B10X6R10X6_2PLANE_422_UNORM_3PACK16,
	VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_444_UNORM_3PACK16_KHR = VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_444_UNORM_3PACK16,
	VK_FORMAT_R12X4_UNORM_PACK16_KHR = VK_FORMAT_R12X4_UNORM_PACK16,
	VK_FORMAT_R12X4G12X4_UNORM_2PACK16_KHR = VK_FORMAT_R12X4G12X4_UNORM_2PACK16,
	VK_FORMAT_R12X4G12X4B12X4A12X4_UNORM_4PACK16_KHR = VK_FORMAT_R12X4G12X4B12X4A12X4_UNORM_4PACK16,
	VK_FORMAT_G12X4B12X4G12X4R12X4_422_UNORM_4PACK16_KHR = VK_FORMAT_G12X4B12X4G12X4R12X4_422_UNORM_4PACK16,
	VK_FORMAT_B12X4G12X4R12X4G12X4_422_UNORM_4PACK16_KHR = VK_FORMAT_B12X4G12X4R12X4G12X4_422_UNORM_4PACK16,
	VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_420_UNORM_3PACK16_KHR = VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_420_UNORM_3PACK16,
	VK_FORMAT_G12X4_B12X4R12X4_2PLANE_420_UNORM_3PACK16_KHR = VK_FORMAT_G12X4_B12X4R12X4_2PLANE_420_UNORM_3PACK16,
	VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_422_UNORM_3PACK16_KHR = VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_422_UNORM_3PACK16,
	VK_FORMAT_G12X4_B12X4R12X4_2PLANE_422_UNORM_3PACK16_KHR = VK_FORMAT_G12X4_B12X4R12X4_2PLANE_422_UNORM_3PACK16,
	VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_444_UNORM_3PACK16_KHR = VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_444_UNORM_3PACK16,
	VK_FORMAT_G16B16G16R16_422_UNORM_KHR = VK_FORMAT_G16B16G16R16_422_UNORM,
	VK_FORMAT_B16G16R16G16_422_UNORM_KHR = VK_FORMAT_B16G16R16G16_422_UNORM,
	VK_FORMAT_G16_B16_R16_3PLANE_420_UNORM_KHR = VK_FORMAT_G16_B16_R16_3PLANE_420_UNORM,
	VK_FORMAT_G16_B16R16_2PLANE_420_UNORM_KHR = VK_FORMAT_G16_B16R16_2PLANE_420_UNORM,
	VK_FORMAT_G16_B16_R16_3PLANE_422_UNORM_KHR = VK_FORMAT_G16_B16_R16_3PLANE_422_UNORM,
	VK_FORMAT_G16_B16R16_2PLANE_422_UNORM_KHR = VK_FORMAT_G16_B16R16_2PLANE_422_UNORM,
	VK_FORMAT_G16_B16_R16_3PLANE_444_UNORM_KHR = VK_FORMAT_G16_B16_R16_3PLANE_444_UNORM,
	VK_FORMAT_G8_B8R8_2PLANE_444_UNORM_EXT = VK_FORMAT_G8_B8R8_2PLANE_444_UNORM,
	VK_FORMAT_G10X6_B10X6R10X6_2PLANE_444_UNORM_3PACK16_EXT = VK_FORMAT_G10X6_B10X6R10X6_2PLANE_444_UNORM_3PACK16,
	VK_FORMAT_G12X4_B12X4R12X4_2PLANE_444_UNORM_3PACK16_EXT = VK_FORMAT_G12X4_B12X4R12X4_2PLANE_444_UNORM_3PACK16,
	VK_FORMAT_G16_B16R16_2PLANE_444_UNORM_EXT = VK_FORMAT_G16_B16R16_2PLANE_444_UNORM,
	VK_FORMAT_A4R4G4B4_UNORM_PACK16_EXT = VK_FORMAT_A4R4G4B4_UNORM_PACK16,
	VK_FORMAT_A4B4G4R4_UNORM_PACK16_EXT = VK_FORMAT_A4B4G4R4_UNORM_PACK16,
	VK_FORMAT_R16G16_S10_5_NV = VK_FORMAT_R16G16_SFIXED5_NV,
	VK_FORMAT_MAX_ENUM = 0x7FFFFFFF
};

enum class ImageTiling {
	VK_IMAGE_TILING_OPTIMAL = 0,
	VK_IMAGE_TILING_LINEAR = 1,
	VK_IMAGE_TILING_DRM_FORMAT_MODIFIER_EXT = 1000158000,
	VK_IMAGE_TILING_MAX_ENUM = 0x7FFFFFFF
};

enum class ImageType {
	VK_IMAGE_TYPE_1D = 0,
	VK_IMAGE_TYPE_2D = 1,
	VK_IMAGE_TYPE_3D = 2,
	VK_IMAGE_TYPE_MAX_ENUM = 0x7FFFFFFF
};

enum class StructureType {
	eApplicationInfo = 0,
	eInstanceCreateInfo = 1,
	eDeviceQueueCreateInfo = 2,
	eDeviceCreateInfo = 3,
	STRUCTURE_TYPE_SUBMIT_INFO = 4,
	STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO = 5,
	STRUCTURE_TYPE_MAPPED_MEMORY_RANGE = 6,
	STRUCTURE_TYPE_BIND_SPARSE_INFO = 7,
	STRUCTURE_TYPE_FENCE_CREATE_INFO = 8,
	STRUCTURE_TYPE_SEMAPHORE_CREATE_INFO = 9,
	STRUCTURE_TYPE_EVENT_CREATE_INFO = 10,
	STRUCTURE_TYPE_QUERY_POOL_CREATE_INFO = 11,
	STRUCTURE_TYPE_BUFFER_CREATE_INFO = 12,
	STRUCTURE_TYPE_BUFFER_VIEW_CREATE_INFO = 13,
	STRUCTURE_TYPE_IMAGE_CREATE_INFO = 14,
	STRUCTURE_TYPE_IMAGE_VIEW_CREATE_INFO = 15,
	STRUCTURE_TYPE_SHADER_MODULE_CREATE_INFO = 16,
	STRUCTURE_TYPE_PIPELINE_CACHE_CREATE_INFO = 17,
	STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_CREATE_INFO = 18,
	STRUCTURE_TYPE_PIPELINE_VERTEX_INPUT_STATE_CREATE_INFO = 19,
	STRUCTURE_TYPE_PIPELINE_INPUT_ASSEMBLY_STATE_CREATE_INFO = 20,
	STRUCTURE_TYPE_PIPELINE_TESSELLATION_STATE_CREATE_INFO = 21,
	STRUCTURE_TYPE_PIPELINE_VIEWPORT_STATE_CREATE_INFO = 22,
	STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_CREATE_INFO = 23,
	STRUCTURE_TYPE_PIPELINE_MULTISAMPLE_STATE_CREATE_INFO = 24,
	STRUCTURE_TYPE_PIPELINE_DEPTH_STENCIL_STATE_CREATE_INFO = 25,
	STRUCTURE_TYPE_PIPELINE_COLOR_BLEND_STATE_CREATE_INFO = 26,
	STRUCTURE_TYPE_PIPELINE_DYNAMIC_STATE_CREATE_INFO = 27,
	STRUCTURE_TYPE_GRAPHICS_PIPELINE_CREATE_INFO = 28,
	STRUCTURE_TYPE_COMPUTE_PIPELINE_CREATE_INFO = 29,
	STRUCTURE_TYPE_PIPELINE_LAYOUT_CREATE_INFO = 30,
	STRUCTURE_TYPE_SAMPLER_CREATE_INFO = 31,
	STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_CREATE_INFO = 32,
	STRUCTURE_TYPE_DESCRIPTOR_POOL_CREATE_INFO = 33,
	STRUCTURE_TYPE_DESCRIPTOR_SET_ALLOCATE_INFO = 34,
	STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET = 35,
	STRUCTURE_TYPE_COPY_DESCRIPTOR_SET = 36,
	STRUCTURE_TYPE_FRAMEBUFFER_CREATE_INFO = 37,
	STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO = 38,
	STRUCTURE_TYPE_COMMAND_POOL_CREATE_INFO = 39,
	STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO = 40,
	STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_INFO = 41,
	STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO = 42,
	STRUCTURE_TYPE_RENDER_PASS_BEGIN_INFO = 43,
	STRUCTURE_TYPE_BUFFER_MEMORY_BARRIER = 44,
	STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER = 45,
	STRUCTURE_TYPE_MEMORY_BARRIER = 46,
	STRUCTURE_TYPE_LOADER_INSTANCE_CREATE_INFO = 47,
	STRUCTURE_TYPE_LOADER_DEVICE_CREATE_INFO = 48,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_PROPERTIES = 1000094000,
	STRUCTURE_TYPE_BIND_BUFFER_MEMORY_INFO = 1000157000,
	STRUCTURE_TYPE_BIND_IMAGE_MEMORY_INFO = 1000157001,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_16BIT_STORAGE_FEATURES = 1000083000,
	STRUCTURE_TYPE_MEMORY_DEDICATED_REQUIREMENTS = 1000127000,
	STRUCTURE_TYPE_MEMORY_DEDICATED_ALLOCATE_INFO = 1000127001,
	STRUCTURE_TYPE_MEMORY_ALLOCATE_FLAGS_INFO = 1000060000,
	STRUCTURE_TYPE_DEVICE_GROUP_RENDER_PASS_BEGIN_INFO = 1000060003,
	STRUCTURE_TYPE_DEVICE_GROUP_COMMAND_BUFFER_BEGIN_INFO = 1000060004,
	STRUCTURE_TYPE_DEVICE_GROUP_SUBMIT_INFO = 1000060005,
	STRUCTURE_TYPE_DEVICE_GROUP_BIND_SPARSE_INFO = 1000060006,
	STRUCTURE_TYPE_BIND_BUFFER_MEMORY_DEVICE_GROUP_INFO = 1000060013,
	STRUCTURE_TYPE_BIND_IMAGE_MEMORY_DEVICE_GROUP_INFO = 1000060014,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_GROUP_PROPERTIES = 1000070000,
	STRUCTURE_TYPE_DEVICE_GROUP_DEVICE_CREATE_INFO = 1000070001,
	STRUCTURE_TYPE_BUFFER_MEMORY_REQUIREMENTS_INFO_2 = 1000146000,
	STRUCTURE_TYPE_IMAGE_MEMORY_REQUIREMENTS_INFO_2 = 1000146001,
	STRUCTURE_TYPE_IMAGE_SPARSE_MEMORY_REQUIREMENTS_INFO_2 = 1000146002,
	STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2 = 1000146003,
	STRUCTURE_TYPE_SPARSE_IMAGE_MEMORY_REQUIREMENTS_2 = 1000146004,
	ePhysicalDeviceFeatures2 = 1000059000,
	ePhysicalDeviceProperties2 = 1000059001,
	STRUCTURE_TYPE_FORMAT_PROPERTIES_2 = 1000059002,
	STRUCTURE_TYPE_IMAGE_FORMAT_PROPERTIES_2 = 1000059003,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_FORMAT_INFO_2 = 1000059004,
	eQueueFamilyProperties2 = 1000059005,
	ePhysicalDeviceMemoryProperties2 = 1000059006,
	STRUCTURE_TYPE_SPARSE_IMAGE_FORMAT_PROPERTIES_2 = 1000059007,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_SPARSE_IMAGE_FORMAT_INFO_2 = 1000059008,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_POINT_CLIPPING_PROPERTIES = 1000117000,
	STRUCTURE_TYPE_RENDER_PASS_INPUT_ATTACHMENT_ASPECT_CREATE_INFO = 1000117001,
	STRUCTURE_TYPE_IMAGE_VIEW_USAGE_CREATE_INFO = 1000117002,
	STRUCTURE_TYPE_PIPELINE_TESSELLATION_DOMAIN_ORIGIN_STATE_CREATE_INFO = 1000117003,
	STRUCTURE_TYPE_RENDER_PASS_MULTIVIEW_CREATE_INFO = 1000053000,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_FEATURES = 1000053001,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PROPERTIES = 1000053002,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_VARIABLE_POINTERS_FEATURES = 1000120000,
	STRUCTURE_TYPE_PROTECTED_SUBMIT_INFO = 1000145000,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_PROTECTED_MEMORY_FEATURES = 1000145001,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_PROTECTED_MEMORY_PROPERTIES = 1000145002,
	STRUCTURE_TYPE_DEVICE_QUEUE_INFO_2 = 1000145003,
	STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_CREATE_INFO = 1000156000,
	STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_INFO = 1000156001,
	STRUCTURE_TYPE_BIND_IMAGE_PLANE_MEMORY_INFO = 1000156002,
	STRUCTURE_TYPE_IMAGE_PLANE_MEMORY_REQUIREMENTS_INFO = 1000156003,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_YCBCR_CONVERSION_FEATURES = 1000156004,
	STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_IMAGE_FORMAT_PROPERTIES = 1000156005,
	STRUCTURE_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_CREATE_INFO = 1000085000,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_IMAGE_FORMAT_INFO = 1000071000,
	STRUCTURE_TYPE_EXTERNAL_IMAGE_FORMAT_PROPERTIES = 1000071001,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_BUFFER_INFO = 1000071002,
	STRUCTURE_TYPE_EXTERNAL_BUFFER_PROPERTIES = 1000071003,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_ID_PROPERTIES = 1000071004,
	STRUCTURE_TYPE_EXTERNAL_MEMORY_BUFFER_CREATE_INFO = 1000072000,
	STRUCTURE_TYPE_EXTERNAL_MEMORY_IMAGE_CREATE_INFO = 1000072001,
	STRUCTURE_TYPE_EXPORT_MEMORY_ALLOCATE_INFO = 1000072002,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_FENCE_INFO = 1000112000,
	STRUCTURE_TYPE_EXTERNAL_FENCE_PROPERTIES = 1000112001,
	STRUCTURE_TYPE_EXPORT_FENCE_CREATE_INFO = 1000113000,
	STRUCTURE_TYPE_EXPORT_SEMAPHORE_CREATE_INFO = 1000077000,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_SEMAPHORE_INFO = 1000076000,
	STRUCTURE_TYPE_EXTERNAL_SEMAPHORE_PROPERTIES = 1000076001,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_3_PROPERTIES = 1000168000,
	STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_SUPPORT = 1000168001,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_DRAW_PARAMETERS_FEATURES = 1000063000,
	ePhysicalDeviceVulkan11Features = 49,
	ePhysicalDeviceVulkan11Properties = 50,
	ePhysicalDeviceVulkan12Features = 51,
	ePhysicalDeviceVulkan12Properties = 52,
	STRUCTURE_TYPE_IMAGE_FORMAT_LIST_CREATE_INFO = 1000147000,
	STRUCTURE_TYPE_ATTACHMENT_DESCRIPTION_2 = 1000109000,
	STRUCTURE_TYPE_ATTACHMENT_REFERENCE_2 = 1000109001,
	STRUCTURE_TYPE_SUBPASS_DESCRIPTION_2 = 1000109002,
	STRUCTURE_TYPE_SUBPASS_DEPENDENCY_2 = 1000109003,
	STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO_2 = 1000109004,
	STRUCTURE_TYPE_SUBPASS_BEGIN_INFO = 1000109005,
	STRUCTURE_TYPE_SUBPASS_END_INFO = 1000109006,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_8BIT_STORAGE_FEATURES = 1000177000,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_DRIVER_PROPERTIES = 1000196000,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_ATOMIC_INT64_FEATURES = 1000180000,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_FLOAT16_INT8_FEATURES = 1000082000,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_FLOAT_CONTROLS_PROPERTIES = 1000197000,
	STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_BINDING_FLAGS_CREATE_INFO = 1000161000,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_FEATURES = 1000161001,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_PROPERTIES = 1000161002,
	STRUCTURE_TYPE_DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_ALLOCATE_INFO = 1000161003,
	STRUCTURE_TYPE_DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_LAYOUT_SUPPORT = 1000161004,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_STENCIL_RESOLVE_PROPERTIES = 1000199000,
	STRUCTURE_TYPE_SUBPASS_DESCRIPTION_DEPTH_STENCIL_RESOLVE = 1000199001,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_SCALAR_BLOCK_LAYOUT_FEATURES = 1000221000,
	STRUCTURE_TYPE_IMAGE_STENCIL_USAGE_CREATE_INFO = 1000246000,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_FILTER_MINMAX_PROPERTIES = 1000130000,
	STRUCTURE_TYPE_SAMPLER_REDUCTION_MODE_CREATE_INFO = 1000130001,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_MEMORY_MODEL_FEATURES = 1000211000,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGELESS_FRAMEBUFFER_FEATURES = 1000108000,
	STRUCTURE_TYPE_FRAMEBUFFER_ATTACHMENTS_CREATE_INFO = 1000108001,
	STRUCTURE_TYPE_FRAMEBUFFER_ATTACHMENT_IMAGE_INFO = 1000108002,
	STRUCTURE_TYPE_RENDER_PASS_ATTACHMENT_BEGIN_INFO = 1000108003,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_UNIFORM_BUFFER_STANDARD_LAYOUT_FEATURES = 1000253000,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SUBGROUP_EXTENDED_TYPES_FEATURES = 1000175000,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_SEPARATE_DEPTH_STENCIL_LAYOUTS_FEATURES = 1000241000,
	STRUCTURE_TYPE_ATTACHMENT_REFERENCE_STENCIL_LAYOUT = 1000241001,
	STRUCTURE_TYPE_ATTACHMENT_DESCRIPTION_STENCIL_LAYOUT = 1000241002,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_HOST_QUERY_RESET_FEATURES = 1000261000,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_TIMELINE_SEMAPHORE_FEATURES = 1000207000,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_TIMELINE_SEMAPHORE_PROPERTIES = 1000207001,
	STRUCTURE_TYPE_SEMAPHORE_TYPE_CREATE_INFO = 1000207002,
	STRUCTURE_TYPE_TIMELINE_SEMAPHORE_SUBMIT_INFO = 1000207003,
	STRUCTURE_TYPE_SEMAPHORE_WAIT_INFO = 1000207004,
	STRUCTURE_TYPE_SEMAPHORE_SIGNAL_INFO = 1000207005,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_BUFFER_DEVICE_ADDRESS_FEATURES = 1000257000,
	STRUCTURE_TYPE_BUFFER_DEVICE_ADDRESS_INFO = 1000244001,
	STRUCTURE_TYPE_BUFFER_OPAQUE_CAPTURE_ADDRESS_CREATE_INFO = 1000257002,
	STRUCTURE_TYPE_MEMORY_OPAQUE_CAPTURE_ADDRESS_ALLOCATE_INFO = 1000257003,
	STRUCTURE_TYPE_DEVICE_MEMORY_OPAQUE_CAPTURE_ADDRESS_INFO = 1000257004,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_3_FEATURES = 53,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_3_PROPERTIES = 54,
	STRUCTURE_TYPE_PIPELINE_CREATION_FEEDBACK_CREATE_INFO = 1000192000,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_TERMINATE_INVOCATION_FEATURES = 1000215000,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_TOOL_PROPERTIES = 1000245000,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_DEMOTE_TO_HELPER_INVOCATION_FEATURES = 1000276000,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_PRIVATE_DATA_FEATURES = 1000295000,
	STRUCTURE_TYPE_DEVICE_PRIVATE_DATA_CREATE_INFO = 1000295001,
	STRUCTURE_TYPE_PRIVATE_DATA_SLOT_CREATE_INFO = 1000295002,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_CREATION_CACHE_CONTROL_FEATURES = 1000297000,
	STRUCTURE_TYPE_MEMORY_BARRIER_2 = 1000314000,
	STRUCTURE_TYPE_BUFFER_MEMORY_BARRIER_2 = 1000314001,
	STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER_2 = 1000314002,
	STRUCTURE_TYPE_DEPENDENCY_INFO = 1000314003,
	STRUCTURE_TYPE_SUBMIT_INFO_2 = 1000314004,
	STRUCTURE_TYPE_SEMAPHORE_SUBMIT_INFO = 1000314005,
	STRUCTURE_TYPE_COMMAND_BUFFER_SUBMIT_INFO = 1000314006,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_SYNCHRONIZATION_2_FEATURES = 1000314007,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_ZERO_INITIALIZE_WORKGROUP_MEMORY_FEATURES = 1000325000,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_ROBUSTNESS_FEATURES = 1000335000,
	STRUCTURE_TYPE_COPY_BUFFER_INFO_2 = 1000337000,
	STRUCTURE_TYPE_COPY_IMAGE_INFO_2 = 1000337001,
	STRUCTURE_TYPE_COPY_BUFFER_TO_IMAGE_INFO_2 = 1000337002,
	STRUCTURE_TYPE_COPY_IMAGE_TO_BUFFER_INFO_2 = 1000337003,
	STRUCTURE_TYPE_BLIT_IMAGE_INFO_2 = 1000337004,
	STRUCTURE_TYPE_RESOLVE_IMAGE_INFO_2 = 1000337005,
	STRUCTURE_TYPE_BUFFER_COPY_2 = 1000337006,
	STRUCTURE_TYPE_IMAGE_COPY_2 = 1000337007,
	STRUCTURE_TYPE_IMAGE_BLIT_2 = 1000337008,
	STRUCTURE_TYPE_BUFFER_IMAGE_COPY_2 = 1000337009,
	STRUCTURE_TYPE_IMAGE_RESOLVE_2 = 1000337010,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_SIZE_CONTROL_PROPERTIES = 1000225000,
	STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_REQUIRED_SUBGROUP_SIZE_CREATE_INFO = 1000225001,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_SIZE_CONTROL_FEATURES = 1000225002,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_FEATURES = 1000138000,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_PROPERTIES = 1000138001,
	STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET_INLINE_UNIFORM_BLOCK = 1000138002,
	STRUCTURE_TYPE_DESCRIPTOR_POOL_INLINE_UNIFORM_BLOCK_CREATE_INFO = 1000138003,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_TEXTURE_COMPRESSION_ASTC_HDR_FEATURES = 1000066000,
	STRUCTURE_TYPE_RENDERING_INFO = 1000044000,
	STRUCTURE_TYPE_RENDERING_ATTACHMENT_INFO = 1000044001,
	STRUCTURE_TYPE_PIPELINE_RENDERING_CREATE_INFO = 1000044002,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_DYNAMIC_RENDERING_FEATURES = 1000044003,
	STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_RENDERING_INFO = 1000044004,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_INTEGER_DOT_PRODUCT_FEATURES = 1000280000,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_INTEGER_DOT_PRODUCT_PROPERTIES = 1000280001,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_TEXEL_BUFFER_ALIGNMENT_PROPERTIES = 1000281001,
	STRUCTURE_TYPE_FORMAT_PROPERTIES_3 = 1000360000,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_4_FEATURES = 1000413000,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_4_PROPERTIES = 1000413001,
	STRUCTURE_TYPE_DEVICE_BUFFER_MEMORY_REQUIREMENTS = 1000413002,
	STRUCTURE_TYPE_DEVICE_IMAGE_MEMORY_REQUIREMENTS = 1000413003,
	STRUCTURE_TYPE_SWAPCHAIN_CREATE_INFO_KHR = 1000001000,
	STRUCTURE_TYPE_PRESENT_INFO_KHR = 1000001001,
	STRUCTURE_TYPE_DEVICE_GROUP_PRESENT_CAPABILITIES_KHR = 1000060007,
	STRUCTURE_TYPE_IMAGE_SWAPCHAIN_CREATE_INFO_KHR = 1000060008,
	STRUCTURE_TYPE_BIND_IMAGE_MEMORY_SWAPCHAIN_INFO_KHR = 1000060009,
	STRUCTURE_TYPE_ACQUIRE_NEXT_IMAGE_INFO_KHR = 1000060010,
	STRUCTURE_TYPE_DEVICE_GROUP_PRESENT_INFO_KHR = 1000060011,
	STRUCTURE_TYPE_DEVICE_GROUP_SWAPCHAIN_CREATE_INFO_KHR = 1000060012,
	STRUCTURE_TYPE_DISPLAY_MODE_CREATE_INFO_KHR = 1000002000,
	STRUCTURE_TYPE_DISPLAY_SURFACE_CREATE_INFO_KHR = 1000002001,
	STRUCTURE_TYPE_DISPLAY_PRESENT_INFO_KHR = 1000003000,
	STRUCTURE_TYPE_XLIB_SURFACE_CREATE_INFO_KHR = 1000004000,
	STRUCTURE_TYPE_XCB_SURFACE_CREATE_INFO_KHR = 1000005000,
	STRUCTURE_TYPE_WAYLAND_SURFACE_CREATE_INFO_KHR = 1000006000,
	STRUCTURE_TYPE_ANDROID_SURFACE_CREATE_INFO_KHR = 1000008000,
	STRUCTURE_TYPE_WIN32_SURFACE_CREATE_INFO_KHR = 1000009000,
	STRUCTURE_TYPE_DEBUG_REPORT_CALLBACK_CREATE_INFO_EXT = 1000011000,
	STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_RASTERIZATION_ORDER_AMD = 1000018000,
	STRUCTURE_TYPE_DEBUG_MARKER_OBJECT_NAME_INFO_EXT = 1000022000,
	STRUCTURE_TYPE_DEBUG_MARKER_OBJECT_TAG_INFO_EXT = 1000022001,
	STRUCTURE_TYPE_DEBUG_MARKER_MARKER_INFO_EXT = 1000022002,
	STRUCTURE_TYPE_VIDEO_PROFILE_INFO_KHR = 1000023000,
	STRUCTURE_TYPE_VIDEO_CAPABILITIES_KHR = 1000023001,
	STRUCTURE_TYPE_VIDEO_PICTURE_RESOURCE_INFO_KHR = 1000023002,
	STRUCTURE_TYPE_VIDEO_SESSION_MEMORY_REQUIREMENTS_KHR = 1000023003,
	STRUCTURE_TYPE_BIND_VIDEO_SESSION_MEMORY_INFO_KHR = 1000023004,
	STRUCTURE_TYPE_VIDEO_SESSION_CREATE_INFO_KHR = 1000023005,
	STRUCTURE_TYPE_VIDEO_SESSION_PARAMETERS_CREATE_INFO_KHR = 1000023006,
	STRUCTURE_TYPE_VIDEO_SESSION_PARAMETERS_UPDATE_INFO_KHR = 1000023007,
	STRUCTURE_TYPE_VIDEO_BEGIN_CODING_INFO_KHR = 1000023008,
	STRUCTURE_TYPE_VIDEO_END_CODING_INFO_KHR = 1000023009,
	STRUCTURE_TYPE_VIDEO_CODING_CONTROL_INFO_KHR = 1000023010,
	STRUCTURE_TYPE_VIDEO_REFERENCE_SLOT_INFO_KHR = 1000023011,
	eQueueFamilyVideoPropertiesKHR = 1000023012,
	STRUCTURE_TYPE_VIDEO_PROFILE_LIST_INFO_KHR = 1000023013,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_VIDEO_FORMAT_INFO_KHR = 1000023014,
	STRUCTURE_TYPE_VIDEO_FORMAT_PROPERTIES_KHR = 1000023015,
	STRUCTURE_TYPE_QUEUE_FAMILY_QUERY_RESULT_STATUS_PROPERTIES_KHR = 1000023016,
	STRUCTURE_TYPE_VIDEO_DECODE_INFO_KHR = 1000024000,
	STRUCTURE_TYPE_VIDEO_DECODE_CAPABILITIES_KHR = 1000024001,
	STRUCTURE_TYPE_VIDEO_DECODE_USAGE_INFO_KHR = 1000024002,
	STRUCTURE_TYPE_DEDICATED_ALLOCATION_IMAGE_CREATE_INFO_NV = 1000026000,
	STRUCTURE_TYPE_DEDICATED_ALLOCATION_BUFFER_CREATE_INFO_NV = 1000026001,
	STRUCTURE_TYPE_DEDICATED_ALLOCATION_MEMORY_ALLOCATE_INFO_NV = 1000026002,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_TRANSFORM_FEEDBACK_FEATURES_EXT = 1000028000,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_TRANSFORM_FEEDBACK_PROPERTIES_EXT = 1000028001,
	STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_STREAM_CREATE_INFO_EXT = 1000028002,
	STRUCTURE_TYPE_CU_MODULE_CREATE_INFO_NVX = 1000029000,
	STRUCTURE_TYPE_CU_FUNCTION_CREATE_INFO_NVX = 1000029001,
	STRUCTURE_TYPE_CU_LAUNCH_INFO_NVX = 1000029002,
	STRUCTURE_TYPE_IMAGE_VIEW_HANDLE_INFO_NVX = 1000030000,
	STRUCTURE_TYPE_IMAGE_VIEW_ADDRESS_PROPERTIES_NVX = 1000030001,
	STRUCTURE_TYPE_VIDEO_ENCODE_H264_CAPABILITIES_KHR = 1000038000,
	STRUCTURE_TYPE_VIDEO_ENCODE_H264_SESSION_PARAMETERS_CREATE_INFO_KHR = 1000038001,
	STRUCTURE_TYPE_VIDEO_ENCODE_H264_SESSION_PARAMETERS_ADD_INFO_KHR = 1000038002,
	STRUCTURE_TYPE_VIDEO_ENCODE_H264_PICTURE_INFO_KHR = 1000038003,
	STRUCTURE_TYPE_VIDEO_ENCODE_H264_DPB_SLOT_INFO_KHR = 1000038004,
	STRUCTURE_TYPE_VIDEO_ENCODE_H264_NALU_SLICE_INFO_KHR = 1000038005,
	STRUCTURE_TYPE_VIDEO_ENCODE_H264_GOP_REMAINING_FRAME_INFO_KHR = 1000038006,
	STRUCTURE_TYPE_VIDEO_ENCODE_H264_PROFILE_INFO_KHR = 1000038007,
	STRUCTURE_TYPE_VIDEO_ENCODE_H264_RATE_CONTROL_INFO_KHR = 1000038008,
	STRUCTURE_TYPE_VIDEO_ENCODE_H264_RATE_CONTROL_LAYER_INFO_KHR = 1000038009,
	STRUCTURE_TYPE_VIDEO_ENCODE_H264_SESSION_CREATE_INFO_KHR = 1000038010,
	STRUCTURE_TYPE_VIDEO_ENCODE_H264_QUALITY_LEVEL_PROPERTIES_KHR = 1000038011,
	STRUCTURE_TYPE_VIDEO_ENCODE_H264_SESSION_PARAMETERS_GET_INFO_KHR = 1000038012,
	STRUCTURE_TYPE_VIDEO_ENCODE_H264_SESSION_PARAMETERS_FEEDBACK_INFO_KHR = 1000038013,
	STRUCTURE_TYPE_VIDEO_ENCODE_H265_CAPABILITIES_KHR = 1000039000,
	STRUCTURE_TYPE_VIDEO_ENCODE_H265_SESSION_PARAMETERS_CREATE_INFO_KHR = 1000039001,
	STRUCTURE_TYPE_VIDEO_ENCODE_H265_SESSION_PARAMETERS_ADD_INFO_KHR = 1000039002,
	STRUCTURE_TYPE_VIDEO_ENCODE_H265_PICTURE_INFO_KHR = 1000039003,
	STRUCTURE_TYPE_VIDEO_ENCODE_H265_DPB_SLOT_INFO_KHR = 1000039004,
	STRUCTURE_TYPE_VIDEO_ENCODE_H265_NALU_SLICE_SEGMENT_INFO_KHR = 1000039005,
	STRUCTURE_TYPE_VIDEO_ENCODE_H265_GOP_REMAINING_FRAME_INFO_KHR = 1000039006,
	STRUCTURE_TYPE_VIDEO_ENCODE_H265_PROFILE_INFO_KHR = 1000039007,
	STRUCTURE_TYPE_VIDEO_ENCODE_H265_RATE_CONTROL_INFO_KHR = 1000039009,
	STRUCTURE_TYPE_VIDEO_ENCODE_H265_RATE_CONTROL_LAYER_INFO_KHR = 1000039010,
	STRUCTURE_TYPE_VIDEO_ENCODE_H265_SESSION_CREATE_INFO_KHR = 1000039011,
	STRUCTURE_TYPE_VIDEO_ENCODE_H265_QUALITY_LEVEL_PROPERTIES_KHR = 1000039012,
	STRUCTURE_TYPE_VIDEO_ENCODE_H265_SESSION_PARAMETERS_GET_INFO_KHR = 1000039013,
	STRUCTURE_TYPE_VIDEO_ENCODE_H265_SESSION_PARAMETERS_FEEDBACK_INFO_KHR = 1000039014,
	STRUCTURE_TYPE_VIDEO_DECODE_H264_CAPABILITIES_KHR = 1000040000,
	STRUCTURE_TYPE_VIDEO_DECODE_H264_PICTURE_INFO_KHR = 1000040001,
	STRUCTURE_TYPE_VIDEO_DECODE_H264_PROFILE_INFO_KHR = 1000040003,
	STRUCTURE_TYPE_VIDEO_DECODE_H264_SESSION_PARAMETERS_CREATE_INFO_KHR = 1000040004,
	STRUCTURE_TYPE_VIDEO_DECODE_H264_SESSION_PARAMETERS_ADD_INFO_KHR = 1000040005,
	STRUCTURE_TYPE_VIDEO_DECODE_H264_DPB_SLOT_INFO_KHR = 1000040006,
	STRUCTURE_TYPE_TEXTURE_LOD_GATHER_FORMAT_PROPERTIES_AMD = 1000041000,
	STRUCTURE_TYPE_RENDERING_FRAGMENT_SHADING_RATE_ATTACHMENT_INFO_KHR = 1000044006,
	STRUCTURE_TYPE_RENDERING_FRAGMENT_DENSITY_MAP_ATTACHMENT_INFO_EXT = 1000044007,
	STRUCTURE_TYPE_ATTACHMENT_SAMPLE_COUNT_INFO_AMD = 1000044008,
	STRUCTURE_TYPE_MULTIVIEW_PER_VIEW_ATTRIBUTES_INFO_NVX = 1000044009,
	STRUCTURE_TYPE_STREAM_DESCRIPTOR_SURFACE_CREATE_INFO_GGP = 1000049000,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_CORNER_SAMPLED_IMAGE_FEATURES_NV = 1000050000,
	STRUCTURE_TYPE_EXTERNAL_MEMORY_IMAGE_CREATE_INFO_NV = 1000056000,
	STRUCTURE_TYPE_EXPORT_MEMORY_ALLOCATE_INFO_NV = 1000056001,
	STRUCTURE_TYPE_IMPORT_MEMORY_WIN32_HANDLE_INFO_NV = 1000057000,
	STRUCTURE_TYPE_EXPORT_MEMORY_WIN32_HANDLE_INFO_NV = 1000057001,
	STRUCTURE_TYPE_WIN32_KEYED_MUTEX_ACQUIRE_RELEASE_INFO_NV = 1000058000,
	STRUCTURE_TYPE_VALIDATION_FLAGS_EXT = 1000061000,
	STRUCTURE_TYPE_VI_SURFACE_CREATE_INFO_NN = 1000062000,
	STRUCTURE_TYPE_IMAGE_VIEW_ASTC_DECODE_MODE_EXT = 1000067000,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_ASTC_DECODE_FEATURES_EXT = 1000067001,
	STRUCTURE_TYPE_PIPELINE_ROBUSTNESS_CREATE_INFO_EXT = 1000068000,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_ROBUSTNESS_FEATURES_EXT = 1000068001,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_ROBUSTNESS_PROPERTIES_EXT = 1000068002,
	STRUCTURE_TYPE_IMPORT_MEMORY_WIN32_HANDLE_INFO_KHR = 1000073000,
	STRUCTURE_TYPE_EXPORT_MEMORY_WIN32_HANDLE_INFO_KHR = 1000073001,
	STRUCTURE_TYPE_MEMORY_WIN32_HANDLE_PROPERTIES_KHR = 1000073002,
	STRUCTURE_TYPE_MEMORY_GET_WIN32_HANDLE_INFO_KHR = 1000073003,
	STRUCTURE_TYPE_IMPORT_MEMORY_FD_INFO_KHR = 1000074000,
	STRUCTURE_TYPE_MEMORY_FD_PROPERTIES_KHR = 1000074001,
	STRUCTURE_TYPE_MEMORY_GET_FD_INFO_KHR = 1000074002,
	STRUCTURE_TYPE_WIN32_KEYED_MUTEX_ACQUIRE_RELEASE_INFO_KHR = 1000075000,
	STRUCTURE_TYPE_IMPORT_SEMAPHORE_WIN32_HANDLE_INFO_KHR = 1000078000,
	STRUCTURE_TYPE_EXPORT_SEMAPHORE_WIN32_HANDLE_INFO_KHR = 1000078001,
	STRUCTURE_TYPE_D3D12_FENCE_SUBMIT_INFO_KHR = 1000078002,
	STRUCTURE_TYPE_SEMAPHORE_GET_WIN32_HANDLE_INFO_KHR = 1000078003,
	STRUCTURE_TYPE_IMPORT_SEMAPHORE_FD_INFO_KHR = 1000079000,
	STRUCTURE_TYPE_SEMAPHORE_GET_FD_INFO_KHR = 1000079001,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_PUSH_DESCRIPTOR_PROPERTIES_KHR = 1000080000,
	STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_CONDITIONAL_RENDERING_INFO_EXT = 1000081000,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_CONDITIONAL_RENDERING_FEATURES_EXT = 1000081001,
	STRUCTURE_TYPE_CONDITIONAL_RENDERING_BEGIN_INFO_EXT = 1000081002,
	STRUCTURE_TYPE_PRESENT_REGIONS_KHR = 1000084000,
	STRUCTURE_TYPE_PIPELINE_VIEWPORT_W_SCALING_STATE_CREATE_INFO_NV = 1000087000,
	STRUCTURE_TYPE_SURFACE_CAPABILITIES_2_EXT = 1000090000,
	STRUCTURE_TYPE_DISPLAY_POWER_INFO_EXT = 1000091000,
	STRUCTURE_TYPE_DEVICE_EVENT_INFO_EXT = 1000091001,
	STRUCTURE_TYPE_DISPLAY_EVENT_INFO_EXT = 1000091002,
	STRUCTURE_TYPE_SWAPCHAIN_COUNTER_CREATE_INFO_EXT = 1000091003,
	STRUCTURE_TYPE_PRESENT_TIMES_INFO_GOOGLE = 1000092000,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PER_VIEW_ATTRIBUTES_PROPERTIES_NVX = 1000097000,
	STRUCTURE_TYPE_PIPELINE_VIEWPORT_SWIZZLE_STATE_CREATE_INFO_NV = 1000098000,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_DISCARD_RECTANGLE_PROPERTIES_EXT = 1000099000,
	STRUCTURE_TYPE_PIPELINE_DISCARD_RECTANGLE_STATE_CREATE_INFO_EXT = 1000099001,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_CONSERVATIVE_RASTERIZATION_PROPERTIES_EXT = 1000101000,
	STRUCTURE_TYPE_PIPELINE_RASTERIZATION_CONSERVATIVE_STATE_CREATE_INFO_EXT = 1000101001,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_CLIP_ENABLE_FEATURES_EXT = 1000102000,
	STRUCTURE_TYPE_PIPELINE_RASTERIZATION_DEPTH_CLIP_STATE_CREATE_INFO_EXT = 1000102001,
	STRUCTURE_TYPE_HDR_METADATA_EXT = 1000105000,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_RELAXED_LINE_RASTERIZATION_FEATURES_IMG = 1000110000,
	STRUCTURE_TYPE_SHARED_PRESENT_SURFACE_CAPABILITIES_KHR = 1000111000,
	STRUCTURE_TYPE_IMPORT_FENCE_WIN32_HANDLE_INFO_KHR = 1000114000,
	STRUCTURE_TYPE_EXPORT_FENCE_WIN32_HANDLE_INFO_KHR = 1000114001,
	STRUCTURE_TYPE_FENCE_GET_WIN32_HANDLE_INFO_KHR = 1000114002,
	STRUCTURE_TYPE_IMPORT_FENCE_FD_INFO_KHR = 1000115000,
	STRUCTURE_TYPE_FENCE_GET_FD_INFO_KHR = 1000115001,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_PERFORMANCE_QUERY_FEATURES_KHR = 1000116000,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_PERFORMANCE_QUERY_PROPERTIES_KHR = 1000116001,
	STRUCTURE_TYPE_QUERY_POOL_PERFORMANCE_CREATE_INFO_KHR = 1000116002,
	STRUCTURE_TYPE_PERFORMANCE_QUERY_SUBMIT_INFO_KHR = 1000116003,
	STRUCTURE_TYPE_ACQUIRE_PROFILING_LOCK_INFO_KHR = 1000116004,
	STRUCTURE_TYPE_PERFORMANCE_COUNTER_KHR = 1000116005,
	STRUCTURE_TYPE_PERFORMANCE_COUNTER_DESCRIPTION_KHR = 1000116006,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_SURFACE_INFO_2_KHR = 1000119000,
	STRUCTURE_TYPE_SURFACE_CAPABILITIES_2_KHR = 1000119001,
	STRUCTURE_TYPE_SURFACE_FORMAT_2_KHR = 1000119002,
	STRUCTURE_TYPE_DISPLAY_PROPERTIES_2_KHR = 1000121000,
	STRUCTURE_TYPE_DISPLAY_PLANE_PROPERTIES_2_KHR = 1000121001,
	STRUCTURE_TYPE_DISPLAY_MODE_PROPERTIES_2_KHR = 1000121002,
	STRUCTURE_TYPE_DISPLAY_PLANE_INFO_2_KHR = 1000121003,
	STRUCTURE_TYPE_DISPLAY_PLANE_CAPABILITIES_2_KHR = 1000121004,
	STRUCTURE_TYPE_IOS_SURFACE_CREATE_INFO_MVK = 1000122000,
	STRUCTURE_TYPE_MACOS_SURFACE_CREATE_INFO_MVK = 1000123000,
	STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT = 1000128000,
	STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_TAG_INFO_EXT = 1000128001,
	STRUCTURE_TYPE_DEBUG_UTILS_LABEL_EXT = 1000128002,
	STRUCTURE_TYPE_DEBUG_UTILS_MESSENGER_CALLBACK_DATA_EXT = 1000128003,
	STRUCTURE_TYPE_DEBUG_UTILS_MESSENGER_CREATE_INFO_EXT = 1000128004,
	STRUCTURE_TYPE_ANDROID_HARDWARE_BUFFER_USAGE_ANDROID = 1000129000,
	STRUCTURE_TYPE_ANDROID_HARDWARE_BUFFER_PROPERTIES_ANDROID = 1000129001,
	STRUCTURE_TYPE_ANDROID_HARDWARE_BUFFER_FORMAT_PROPERTIES_ANDROID = 1000129002,
	STRUCTURE_TYPE_IMPORT_ANDROID_HARDWARE_BUFFER_INFO_ANDROID = 1000129003,
	STRUCTURE_TYPE_MEMORY_GET_ANDROID_HARDWARE_BUFFER_INFO_ANDROID = 1000129004,
	STRUCTURE_TYPE_EXTERNAL_FORMAT_ANDROID = 1000129005,
	STRUCTURE_TYPE_ANDROID_HARDWARE_BUFFER_FORMAT_PROPERTIES_2_ANDROID = 1000129006,
#ifdef VK_ENABLE_BETA_EXTENSIONS
	STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_ENQUEUE_FEATURES_AMDX = 1000134000,
#endif
#ifdef VK_ENABLE_BETA_EXTENSIONS
	STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_ENQUEUE_PROPERTIES_AMDX = 1000134001,
#endif
#ifdef VK_ENABLE_BETA_EXTENSIONS
	STRUCTURE_TYPE_EXECUTION_GRAPH_PIPELINE_SCRATCH_SIZE_AMDX = 1000134002,
#endif
#ifdef VK_ENABLE_BETA_EXTENSIONS
	STRUCTURE_TYPE_EXECUTION_GRAPH_PIPELINE_CREATE_INFO_AMDX = 1000134003,
#endif
#ifdef VK_ENABLE_BETA_EXTENSIONS
	STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_NODE_CREATE_INFO_AMDX = 1000134004,
#endif
	STRUCTURE_TYPE_SAMPLE_LOCATIONS_INFO_EXT = 1000143000,
	STRUCTURE_TYPE_RENDER_PASS_SAMPLE_LOCATIONS_BEGIN_INFO_EXT = 1000143001,
	STRUCTURE_TYPE_PIPELINE_SAMPLE_LOCATIONS_STATE_CREATE_INFO_EXT = 1000143002,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLE_LOCATIONS_PROPERTIES_EXT = 1000143003,
	STRUCTURE_TYPE_MULTISAMPLE_PROPERTIES_EXT = 1000143004,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_BLEND_OPERATION_ADVANCED_FEATURES_EXT = 1000148000,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_BLEND_OPERATION_ADVANCED_PROPERTIES_EXT = 1000148001,
	STRUCTURE_TYPE_PIPELINE_COLOR_BLEND_ADVANCED_STATE_CREATE_INFO_EXT = 1000148002,
	STRUCTURE_TYPE_PIPELINE_COVERAGE_TO_COLOR_STATE_CREATE_INFO_NV = 1000149000,
	STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET_ACCELERATION_STRUCTURE_KHR = 1000150007,
	STRUCTURE_TYPE_ACCELERATION_STRUCTURE_BUILD_GEOMETRY_INFO_KHR = 1000150000,
	STRUCTURE_TYPE_ACCELERATION_STRUCTURE_DEVICE_ADDRESS_INFO_KHR = 1000150002,
	STRUCTURE_TYPE_ACCELERATION_STRUCTURE_GEOMETRY_AABBS_DATA_KHR = 1000150003,
	STRUCTURE_TYPE_ACCELERATION_STRUCTURE_GEOMETRY_INSTANCES_DATA_KHR = 1000150004,
	STRUCTURE_TYPE_ACCELERATION_STRUCTURE_GEOMETRY_TRIANGLES_DATA_KHR = 1000150005,
	STRUCTURE_TYPE_ACCELERATION_STRUCTURE_GEOMETRY_KHR = 1000150006,
	STRUCTURE_TYPE_ACCELERATION_STRUCTURE_VERSION_INFO_KHR = 1000150009,
	STRUCTURE_TYPE_COPY_ACCELERATION_STRUCTURE_INFO_KHR = 1000150010,
	STRUCTURE_TYPE_COPY_ACCELERATION_STRUCTURE_TO_MEMORY_INFO_KHR = 1000150011,
	STRUCTURE_TYPE_COPY_MEMORY_TO_ACCELERATION_STRUCTURE_INFO_KHR = 1000150012,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_ACCELERATION_STRUCTURE_FEATURES_KHR = 1000150013,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_ACCELERATION_STRUCTURE_PROPERTIES_KHR = 1000150014,
	STRUCTURE_TYPE_ACCELERATION_STRUCTURE_CREATE_INFO_KHR = 1000150017,
	STRUCTURE_TYPE_ACCELERATION_STRUCTURE_BUILD_SIZES_INFO_KHR = 1000150020,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_PIPELINE_FEATURES_KHR = 1000347000,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_PIPELINE_PROPERTIES_KHR = 1000347001,
	STRUCTURE_TYPE_RAY_TRACING_PIPELINE_CREATE_INFO_KHR = 1000150015,
	STRUCTURE_TYPE_RAY_TRACING_SHADER_GROUP_CREATE_INFO_KHR = 1000150016,
	STRUCTURE_TYPE_RAY_TRACING_PIPELINE_INTERFACE_CREATE_INFO_KHR = 1000150018,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_QUERY_FEATURES_KHR = 1000348013,
	STRUCTURE_TYPE_PIPELINE_COVERAGE_MODULATION_STATE_CREATE_INFO_NV = 1000152000,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SM_BUILTINS_FEATURES_NV = 1000154000,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SM_BUILTINS_PROPERTIES_NV = 1000154001,
	STRUCTURE_TYPE_DRM_FORMAT_MODIFIER_PROPERTIES_LIST_EXT = 1000158000,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_DRM_FORMAT_MODIFIER_INFO_EXT = 1000158002,
	STRUCTURE_TYPE_IMAGE_DRM_FORMAT_MODIFIER_LIST_CREATE_INFO_EXT = 1000158003,
	STRUCTURE_TYPE_IMAGE_DRM_FORMAT_MODIFIER_EXPLICIT_CREATE_INFO_EXT = 1000158004,
	STRUCTURE_TYPE_IMAGE_DRM_FORMAT_MODIFIER_PROPERTIES_EXT = 1000158005,
	STRUCTURE_TYPE_DRM_FORMAT_MODIFIER_PROPERTIES_LIST_2_EXT = 1000158006,
	STRUCTURE_TYPE_VALIDATION_CACHE_CREATE_INFO_EXT = 1000160000,
	STRUCTURE_TYPE_SHADER_MODULE_VALIDATION_CACHE_CREATE_INFO_EXT = 1000160001,
#ifdef VK_ENABLE_BETA_EXTENSIONS
	STRUCTURE_TYPE_PHYSICAL_DEVICE_PORTABILITY_SUBSET_FEATURES_KHR = 1000163000,
#endif
#ifdef VK_ENABLE_BETA_EXTENSIONS
	STRUCTURE_TYPE_PHYSICAL_DEVICE_PORTABILITY_SUBSET_PROPERTIES_KHR = 1000163001,
#endif
	STRUCTURE_TYPE_PIPELINE_VIEWPORT_SHADING_RATE_IMAGE_STATE_CREATE_INFO_NV = 1000164000,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADING_RATE_IMAGE_FEATURES_NV = 1000164001,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADING_RATE_IMAGE_PROPERTIES_NV = 1000164002,
	STRUCTURE_TYPE_PIPELINE_VIEWPORT_COARSE_SAMPLE_ORDER_STATE_CREATE_INFO_NV = 1000164005,
	STRUCTURE_TYPE_RAY_TRACING_PIPELINE_CREATE_INFO_NV = 1000165000,
	STRUCTURE_TYPE_ACCELERATION_STRUCTURE_CREATE_INFO_NV = 1000165001,
	STRUCTURE_TYPE_GEOMETRY_NV = 1000165003,
	STRUCTURE_TYPE_GEOMETRY_TRIANGLES_NV = 1000165004,
	STRUCTURE_TYPE_GEOMETRY_AABB_NV = 1000165005,
	STRUCTURE_TYPE_BIND_ACCELERATION_STRUCTURE_MEMORY_INFO_NV = 1000165006,
	STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET_ACCELERATION_STRUCTURE_NV = 1000165007,
	STRUCTURE_TYPE_ACCELERATION_STRUCTURE_MEMORY_REQUIREMENTS_INFO_NV = 1000165008,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_PROPERTIES_NV = 1000165009,
	STRUCTURE_TYPE_RAY_TRACING_SHADER_GROUP_CREATE_INFO_NV = 1000165011,
	STRUCTURE_TYPE_ACCELERATION_STRUCTURE_INFO_NV = 1000165012,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_REPRESENTATIVE_FRAGMENT_TEST_FEATURES_NV = 1000166000,
	STRUCTURE_TYPE_PIPELINE_REPRESENTATIVE_FRAGMENT_TEST_STATE_CREATE_INFO_NV = 1000166001,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_VIEW_IMAGE_FORMAT_INFO_EXT = 1000170000,
	STRUCTURE_TYPE_FILTER_CUBIC_IMAGE_VIEW_IMAGE_FORMAT_PROPERTIES_EXT = 1000170001,
	STRUCTURE_TYPE_IMPORT_MEMORY_HOST_POINTER_INFO_EXT = 1000178000,
	STRUCTURE_TYPE_MEMORY_HOST_POINTER_PROPERTIES_EXT = 1000178001,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_MEMORY_HOST_PROPERTIES_EXT = 1000178002,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_CLOCK_FEATURES_KHR = 1000181000,
	STRUCTURE_TYPE_PIPELINE_COMPILER_CONTROL_CREATE_INFO_AMD = 1000183000,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_CORE_PROPERTIES_AMD = 1000185000,
	STRUCTURE_TYPE_VIDEO_DECODE_H265_CAPABILITIES_KHR = 1000187000,
	STRUCTURE_TYPE_VIDEO_DECODE_H265_SESSION_PARAMETERS_CREATE_INFO_KHR = 1000187001,
	STRUCTURE_TYPE_VIDEO_DECODE_H265_SESSION_PARAMETERS_ADD_INFO_KHR = 1000187002,
	STRUCTURE_TYPE_VIDEO_DECODE_H265_PROFILE_INFO_KHR = 1000187003,
	STRUCTURE_TYPE_VIDEO_DECODE_H265_PICTURE_INFO_KHR = 1000187004,
	STRUCTURE_TYPE_VIDEO_DECODE_H265_DPB_SLOT_INFO_KHR = 1000187005,
	STRUCTURE_TYPE_DEVICE_QUEUE_GLOBAL_PRIORITY_CREATE_INFO_KHR = 1000174000,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_GLOBAL_PRIORITY_QUERY_FEATURES_KHR = 1000388000,
	STRUCTURE_TYPE_QUEUE_FAMILY_GLOBAL_PRIORITY_PROPERTIES_KHR = 1000388001,
	STRUCTURE_TYPE_DEVICE_MEMORY_OVERALLOCATION_CREATE_INFO_AMD = 1000189000,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_VERTEX_ATTRIBUTE_DIVISOR_PROPERTIES_EXT = 1000190000,
	STRUCTURE_TYPE_PRESENT_FRAME_TOKEN_GGP = 1000191000,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_COMPUTE_SHADER_DERIVATIVES_FEATURES_NV = 1000201000,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_MESH_SHADER_FEATURES_NV = 1000202000,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_MESH_SHADER_PROPERTIES_NV = 1000202001,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_IMAGE_FOOTPRINT_FEATURES_NV = 1000204000,
	STRUCTURE_TYPE_PIPELINE_VIEWPORT_EXCLUSIVE_SCISSOR_STATE_CREATE_INFO_NV = 1000205000,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_EXCLUSIVE_SCISSOR_FEATURES_NV = 1000205002,
	STRUCTURE_TYPE_CHECKPOINT_DATA_NV = 1000206000,
	STRUCTURE_TYPE_QUEUE_FAMILY_CHECKPOINT_PROPERTIES_NV = 1000206001,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_INTEGER_FUNCTIONS_2_FEATURES_INTEL = 1000209000,
	STRUCTURE_TYPE_QUERY_POOL_PERFORMANCE_QUERY_CREATE_INFO_INTEL = 1000210000,
	STRUCTURE_TYPE_INITIALIZE_PERFORMANCE_API_INFO_INTEL = 1000210001,
	STRUCTURE_TYPE_PERFORMANCE_MARKER_INFO_INTEL = 1000210002,
	STRUCTURE_TYPE_PERFORMANCE_STREAM_MARKER_INFO_INTEL = 1000210003,
	STRUCTURE_TYPE_PERFORMANCE_OVERRIDE_INFO_INTEL = 1000210004,
	STRUCTURE_TYPE_PERFORMANCE_CONFIGURATION_ACQUIRE_INFO_INTEL = 1000210005,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_PCI_BUS_INFO_PROPERTIES_EXT = 1000212000,
	STRUCTURE_TYPE_DISPLAY_NATIVE_HDR_SURFACE_CAPABILITIES_AMD = 1000213000,
	STRUCTURE_TYPE_SWAPCHAIN_DISPLAY_NATIVE_HDR_CREATE_INFO_AMD = 1000213001,
	STRUCTURE_TYPE_IMAGEPIPE_SURFACE_CREATE_INFO_FUCHSIA = 1000214000,
	STRUCTURE_TYPE_METAL_SURFACE_CREATE_INFO_EXT = 1000217000,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_FEATURES_EXT = 1000218000,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_PROPERTIES_EXT = 1000218001,
	STRUCTURE_TYPE_RENDER_PASS_FRAGMENT_DENSITY_MAP_CREATE_INFO_EXT = 1000218002,
	STRUCTURE_TYPE_FRAGMENT_SHADING_RATE_ATTACHMENT_INFO_KHR = 1000226000,
	STRUCTURE_TYPE_PIPELINE_FRAGMENT_SHADING_RATE_STATE_CREATE_INFO_KHR = 1000226001,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_PROPERTIES_KHR = 1000226002,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_FEATURES_KHR = 1000226003,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_KHR = 1000226004,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_CORE_PROPERTIES_2_AMD = 1000227000,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_COHERENT_MEMORY_FEATURES_AMD = 1000229000,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_DYNAMIC_RENDERING_LOCAL_READ_FEATURES_KHR = 1000232000,
	STRUCTURE_TYPE_RENDERING_ATTACHMENT_LOCATION_INFO_KHR = 1000232001,
	STRUCTURE_TYPE_RENDERING_INPUT_ATTACHMENT_INDEX_INFO_KHR = 1000232002,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_IMAGE_ATOMIC_INT64_FEATURES_EXT = 1000234000,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_QUAD_CONTROL_FEATURES_KHR = 1000235000,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_BUDGET_PROPERTIES_EXT = 1000237000,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_PRIORITY_FEATURES_EXT = 1000238000,
	STRUCTURE_TYPE_MEMORY_PRIORITY_ALLOCATE_INFO_EXT = 1000238001,
	STRUCTURE_TYPE_SURFACE_PROTECTED_CAPABILITIES_KHR = 1000239000,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_DEDICATED_ALLOCATION_IMAGE_ALIASING_FEATURES_NV = 1000240000,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_BUFFER_DEVICE_ADDRESS_FEATURES_EXT = 1000244000,
	STRUCTURE_TYPE_BUFFER_DEVICE_ADDRESS_CREATE_INFO_EXT = 1000244002,
	STRUCTURE_TYPE_VALIDATION_FEATURES_EXT = 1000247000,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_PRESENT_WAIT_FEATURES_KHR = 1000248000,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_COOPERATIVE_MATRIX_FEATURES_NV = 1000249000,
	STRUCTURE_TYPE_COOPERATIVE_MATRIX_PROPERTIES_NV = 1000249001,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_COOPERATIVE_MATRIX_PROPERTIES_NV = 1000249002,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_COVERAGE_REDUCTION_MODE_FEATURES_NV = 1000250000,
	STRUCTURE_TYPE_PIPELINE_COVERAGE_REDUCTION_STATE_CREATE_INFO_NV = 1000250001,
	STRUCTURE_TYPE_FRAMEBUFFER_MIXED_SAMPLES_COMBINATION_NV = 1000250002,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADER_INTERLOCK_FEATURES_EXT = 1000251000,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_YCBCR_IMAGE_ARRAYS_FEATURES_EXT = 1000252000,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_PROVOKING_VERTEX_FEATURES_EXT = 1000254000,
	STRUCTURE_TYPE_PIPELINE_RASTERIZATION_PROVOKING_VERTEX_STATE_CREATE_INFO_EXT = 1000254001,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_PROVOKING_VERTEX_PROPERTIES_EXT = 1000254002,
	STRUCTURE_TYPE_SURFACE_FULL_SCREEN_EXCLUSIVE_INFO_EXT = 1000255000,
	STRUCTURE_TYPE_SURFACE_CAPABILITIES_FULL_SCREEN_EXCLUSIVE_EXT = 1000255002,
	STRUCTURE_TYPE_SURFACE_FULL_SCREEN_EXCLUSIVE_WIN32_INFO_EXT = 1000255001,
	STRUCTURE_TYPE_HEADLESS_SURFACE_CREATE_INFO_EXT = 1000256000,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_ATOMIC_FLOAT_FEATURES_EXT = 1000260000,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTENDED_DYNAMIC_STATE_FEATURES_EXT = 1000267000,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_EXECUTABLE_PROPERTIES_FEATURES_KHR = 1000269000,
	STRUCTURE_TYPE_PIPELINE_INFO_KHR = 1000269001,
	STRUCTURE_TYPE_PIPELINE_EXECUTABLE_PROPERTIES_KHR = 1000269002,
	STRUCTURE_TYPE_PIPELINE_EXECUTABLE_INFO_KHR = 1000269003,
	STRUCTURE_TYPE_PIPELINE_EXECUTABLE_STATISTIC_KHR = 1000269004,
	STRUCTURE_TYPE_PIPELINE_EXECUTABLE_INTERNAL_REPRESENTATION_KHR = 1000269005,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_HOST_IMAGE_COPY_FEATURES_EXT = 1000270000,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_HOST_IMAGE_COPY_PROPERTIES_EXT = 1000270001,
	STRUCTURE_TYPE_MEMORY_TO_IMAGE_COPY_EXT = 1000270002,
	STRUCTURE_TYPE_IMAGE_TO_MEMORY_COPY_EXT = 1000270003,
	STRUCTURE_TYPE_COPY_IMAGE_TO_MEMORY_INFO_EXT = 1000270004,
	STRUCTURE_TYPE_COPY_MEMORY_TO_IMAGE_INFO_EXT = 1000270005,
	STRUCTURE_TYPE_HOST_IMAGE_LAYOUT_TRANSITION_INFO_EXT = 1000270006,
	STRUCTURE_TYPE_COPY_IMAGE_TO_IMAGE_INFO_EXT = 1000270007,
	STRUCTURE_TYPE_SUBRESOURCE_HOST_MEMCPY_SIZE_EXT = 1000270008,
	STRUCTURE_TYPE_HOST_IMAGE_COPY_DEVICE_PERFORMANCE_QUERY_EXT = 1000270009,
	STRUCTURE_TYPE_MEMORY_MAP_INFO_KHR = 1000271000,
	STRUCTURE_TYPE_MEMORY_UNMAP_INFO_KHR = 1000271001,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_MAP_MEMORY_PLACED_FEATURES_EXT = 1000272000,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_MAP_MEMORY_PLACED_PROPERTIES_EXT = 1000272001,
	STRUCTURE_TYPE_MEMORY_MAP_PLACED_INFO_EXT = 1000272002,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_ATOMIC_FLOAT_2_FEATURES_EXT = 1000273000,
	STRUCTURE_TYPE_SURFACE_PRESENT_MODE_EXT = 1000274000,
	STRUCTURE_TYPE_SURFACE_PRESENT_SCALING_CAPABILITIES_EXT = 1000274001,
	STRUCTURE_TYPE_SURFACE_PRESENT_MODE_COMPATIBILITY_EXT = 1000274002,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_SWAPCHAIN_MAINTENANCE_1_FEATURES_EXT = 1000275000,
	STRUCTURE_TYPE_SWAPCHAIN_PRESENT_FENCE_INFO_EXT = 1000275001,
	STRUCTURE_TYPE_SWAPCHAIN_PRESENT_MODES_CREATE_INFO_EXT = 1000275002,
	STRUCTURE_TYPE_SWAPCHAIN_PRESENT_MODE_INFO_EXT = 1000275003,
	STRUCTURE_TYPE_SWAPCHAIN_PRESENT_SCALING_CREATE_INFO_EXT = 1000275004,
	STRUCTURE_TYPE_RELEASE_SWAPCHAIN_IMAGES_INFO_EXT = 1000275005,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_DEVICE_GENERATED_COMMANDS_PROPERTIES_NV = 1000277000,
	STRUCTURE_TYPE_GRAPHICS_SHADER_GROUP_CREATE_INFO_NV = 1000277001,
	STRUCTURE_TYPE_GRAPHICS_PIPELINE_SHADER_GROUPS_CREATE_INFO_NV = 1000277002,
	STRUCTURE_TYPE_INDIRECT_COMMANDS_LAYOUT_TOKEN_NV = 1000277003,
	STRUCTURE_TYPE_INDIRECT_COMMANDS_LAYOUT_CREATE_INFO_NV = 1000277004,
	STRUCTURE_TYPE_GENERATED_COMMANDS_INFO_NV = 1000277005,
	STRUCTURE_TYPE_GENERATED_COMMANDS_MEMORY_REQUIREMENTS_INFO_NV = 1000277006,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_DEVICE_GENERATED_COMMANDS_FEATURES_NV = 1000277007,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_INHERITED_VIEWPORT_SCISSOR_FEATURES_NV = 1000278000,
	STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_VIEWPORT_SCISSOR_INFO_NV = 1000278001,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_TEXEL_BUFFER_ALIGNMENT_FEATURES_EXT = 1000281000,
	STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_RENDER_PASS_TRANSFORM_INFO_QCOM = 1000282000,
	STRUCTURE_TYPE_RENDER_PASS_TRANSFORM_BEGIN_INFO_QCOM = 1000282001,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_BIAS_CONTROL_FEATURES_EXT = 1000283000,
	STRUCTURE_TYPE_DEPTH_BIAS_INFO_EXT = 1000283001,
	STRUCTURE_TYPE_DEPTH_BIAS_REPRESENTATION_INFO_EXT = 1000283002,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_DEVICE_MEMORY_REPORT_FEATURES_EXT = 1000284000,
	STRUCTURE_TYPE_DEVICE_DEVICE_MEMORY_REPORT_CREATE_INFO_EXT = 1000284001,
	STRUCTURE_TYPE_DEVICE_MEMORY_REPORT_CALLBACK_DATA_EXT = 1000284002,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_ROBUSTNESS_2_FEATURES_EXT = 1000286000,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_ROBUSTNESS_2_PROPERTIES_EXT = 1000286001,
	STRUCTURE_TYPE_SAMPLER_CUSTOM_BORDER_COLOR_CREATE_INFO_EXT = 1000287000,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_CUSTOM_BORDER_COLOR_PROPERTIES_EXT = 1000287001,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_CUSTOM_BORDER_COLOR_FEATURES_EXT = 1000287002,
	STRUCTURE_TYPE_PIPELINE_LIBRARY_CREATE_INFO_KHR = 1000290000,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_PRESENT_BARRIER_FEATURES_NV = 1000292000,
	STRUCTURE_TYPE_SURFACE_CAPABILITIES_PRESENT_BARRIER_NV = 1000292001,
	STRUCTURE_TYPE_SWAPCHAIN_PRESENT_BARRIER_CREATE_INFO_NV = 1000292002,
	STRUCTURE_TYPE_PRESENT_ID_KHR = 1000294000,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_PRESENT_ID_FEATURES_KHR = 1000294001,
	STRUCTURE_TYPE_VIDEO_ENCODE_INFO_KHR = 1000299000,
	STRUCTURE_TYPE_VIDEO_ENCODE_RATE_CONTROL_INFO_KHR = 1000299001,
	STRUCTURE_TYPE_VIDEO_ENCODE_RATE_CONTROL_LAYER_INFO_KHR = 1000299002,
	STRUCTURE_TYPE_VIDEO_ENCODE_CAPABILITIES_KHR = 1000299003,
	STRUCTURE_TYPE_VIDEO_ENCODE_USAGE_INFO_KHR = 1000299004,
	STRUCTURE_TYPE_QUERY_POOL_VIDEO_ENCODE_FEEDBACK_CREATE_INFO_KHR = 1000299005,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_VIDEO_ENCODE_QUALITY_LEVEL_INFO_KHR = 1000299006,
	STRUCTURE_TYPE_VIDEO_ENCODE_QUALITY_LEVEL_PROPERTIES_KHR = 1000299007,
	STRUCTURE_TYPE_VIDEO_ENCODE_QUALITY_LEVEL_INFO_KHR = 1000299008,
	STRUCTURE_TYPE_VIDEO_ENCODE_SESSION_PARAMETERS_GET_INFO_KHR = 1000299009,
	STRUCTURE_TYPE_VIDEO_ENCODE_SESSION_PARAMETERS_FEEDBACK_INFO_KHR = 1000299010,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_DIAGNOSTICS_CONFIG_FEATURES_NV = 1000300000,
	STRUCTURE_TYPE_DEVICE_DIAGNOSTICS_CONFIG_CREATE_INFO_NV = 1000300001,
	STRUCTURE_TYPE_CUDA_MODULE_CREATE_INFO_NV = 1000307000,
	STRUCTURE_TYPE_CUDA_FUNCTION_CREATE_INFO_NV = 1000307001,
	STRUCTURE_TYPE_CUDA_LAUNCH_INFO_NV = 1000307002,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_CUDA_KERNEL_LAUNCH_FEATURES_NV = 1000307003,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_CUDA_KERNEL_LAUNCH_PROPERTIES_NV = 1000307004,
	STRUCTURE_TYPE_QUERY_LOW_LATENCY_SUPPORT_NV = 1000310000,
	STRUCTURE_TYPE_EXPORT_METAL_OBJECT_CREATE_INFO_EXT = 1000311000,
	STRUCTURE_TYPE_EXPORT_METAL_OBJECTS_INFO_EXT = 1000311001,
	STRUCTURE_TYPE_EXPORT_METAL_DEVICE_INFO_EXT = 1000311002,
	STRUCTURE_TYPE_EXPORT_METAL_COMMAND_QUEUE_INFO_EXT = 1000311003,
	STRUCTURE_TYPE_EXPORT_METAL_BUFFER_INFO_EXT = 1000311004,
	STRUCTURE_TYPE_IMPORT_METAL_BUFFER_INFO_EXT = 1000311005,
	STRUCTURE_TYPE_EXPORT_METAL_TEXTURE_INFO_EXT = 1000311006,
	STRUCTURE_TYPE_IMPORT_METAL_TEXTURE_INFO_EXT = 1000311007,
	STRUCTURE_TYPE_EXPORT_METAL_IO_SURFACE_INFO_EXT = 1000311008,
	STRUCTURE_TYPE_IMPORT_METAL_IO_SURFACE_INFO_EXT = 1000311009,
	STRUCTURE_TYPE_EXPORT_METAL_SHARED_EVENT_INFO_EXT = 1000311010,
	STRUCTURE_TYPE_IMPORT_METAL_SHARED_EVENT_INFO_EXT = 1000311011,
	STRUCTURE_TYPE_QUEUE_FAMILY_CHECKPOINT_PROPERTIES_2_NV = 1000314008,
	STRUCTURE_TYPE_CHECKPOINT_DATA_2_NV = 1000314009,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_BUFFER_PROPERTIES_EXT = 1000316000,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_BUFFER_DENSITY_MAP_PROPERTIES_EXT = 1000316001,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_BUFFER_FEATURES_EXT = 1000316002,
	STRUCTURE_TYPE_DESCRIPTOR_ADDRESS_INFO_EXT = 1000316003,
	STRUCTURE_TYPE_DESCRIPTOR_GET_INFO_EXT = 1000316004,
	STRUCTURE_TYPE_BUFFER_CAPTURE_DESCRIPTOR_DATA_INFO_EXT = 1000316005,
	STRUCTURE_TYPE_IMAGE_CAPTURE_DESCRIPTOR_DATA_INFO_EXT = 1000316006,
	STRUCTURE_TYPE_IMAGE_VIEW_CAPTURE_DESCRIPTOR_DATA_INFO_EXT = 1000316007,
	STRUCTURE_TYPE_SAMPLER_CAPTURE_DESCRIPTOR_DATA_INFO_EXT = 1000316008,
	STRUCTURE_TYPE_OPAQUE_CAPTURE_DESCRIPTOR_DATA_CREATE_INFO_EXT = 1000316010,
	STRUCTURE_TYPE_DESCRIPTOR_BUFFER_BINDING_INFO_EXT = 1000316011,
	STRUCTURE_TYPE_DESCRIPTOR_BUFFER_BINDING_PUSH_DESCRIPTOR_BUFFER_HANDLE_EXT = 1000316012,
	STRUCTURE_TYPE_ACCELERATION_STRUCTURE_CAPTURE_DESCRIPTOR_DATA_INFO_EXT = 1000316009,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_GRAPHICS_PIPELINE_LIBRARY_FEATURES_EXT = 1000320000,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_GRAPHICS_PIPELINE_LIBRARY_PROPERTIES_EXT = 1000320001,
	STRUCTURE_TYPE_GRAPHICS_PIPELINE_LIBRARY_CREATE_INFO_EXT = 1000320002,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_EARLY_AND_LATE_FRAGMENT_TESTS_FEATURES_AMD = 1000321000,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADER_BARYCENTRIC_FEATURES_KHR = 1000203000,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADER_BARYCENTRIC_PROPERTIES_KHR = 1000322000,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SUBGROUP_UNIFORM_CONTROL_FLOW_FEATURES_KHR = 1000323000,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_ENUMS_PROPERTIES_NV = 1000326000,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_ENUMS_FEATURES_NV = 1000326001,
	STRUCTURE_TYPE_PIPELINE_FRAGMENT_SHADING_RATE_ENUM_STATE_CREATE_INFO_NV = 1000326002,
	STRUCTURE_TYPE_ACCELERATION_STRUCTURE_GEOMETRY_MOTION_TRIANGLES_DATA_NV = 1000327000,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_MOTION_BLUR_FEATURES_NV = 1000327001,
	STRUCTURE_TYPE_ACCELERATION_STRUCTURE_MOTION_INFO_NV = 1000327002,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_MESH_SHADER_FEATURES_EXT = 1000328000,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_MESH_SHADER_PROPERTIES_EXT = 1000328001,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_YCBCR_2_PLANE_444_FORMATS_FEATURES_EXT = 1000330000,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_2_FEATURES_EXT = 1000332000,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_2_PROPERTIES_EXT = 1000332001,
	STRUCTURE_TYPE_COPY_COMMAND_TRANSFORM_INFO_QCOM = 1000333000,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_WORKGROUP_MEMORY_EXPLICIT_LAYOUT_FEATURES_KHR = 1000336000,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_COMPRESSION_CONTROL_FEATURES_EXT = 1000338000,
	STRUCTURE_TYPE_IMAGE_COMPRESSION_CONTROL_EXT = 1000338001,
	STRUCTURE_TYPE_IMAGE_COMPRESSION_PROPERTIES_EXT = 1000338004,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_ATTACHMENT_FEEDBACK_LOOP_LAYOUT_FEATURES_EXT = 1000339000,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_4444_FORMATS_FEATURES_EXT = 1000340000,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_FAULT_FEATURES_EXT = 1000341000,
	STRUCTURE_TYPE_DEVICE_FAULT_COUNTS_EXT = 1000341001,
	STRUCTURE_TYPE_DEVICE_FAULT_INFO_EXT = 1000341002,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_RGBA10X6_FORMATS_FEATURES_EXT = 1000344000,
	STRUCTURE_TYPE_DIRECTFB_SURFACE_CREATE_INFO_EXT = 1000346000,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_VERTEX_INPUT_DYNAMIC_STATE_FEATURES_EXT = 1000352000,
	STRUCTURE_TYPE_VERTEX_INPUT_BINDING_DESCRIPTION_2_EXT = 1000352001,
	STRUCTURE_TYPE_VERTEX_INPUT_ATTRIBUTE_DESCRIPTION_2_EXT = 1000352002,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_DRM_PROPERTIES_EXT = 1000353000,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_ADDRESS_BINDING_REPORT_FEATURES_EXT = 1000354000,
	STRUCTURE_TYPE_DEVICE_ADDRESS_BINDING_CALLBACK_DATA_EXT = 1000354001,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_CLIP_CONTROL_FEATURES_EXT = 1000355000,
	STRUCTURE_TYPE_PIPELINE_VIEWPORT_DEPTH_CLIP_CONTROL_CREATE_INFO_EXT = 1000355001,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_PRIMITIVE_TOPOLOGY_LIST_RESTART_FEATURES_EXT = 1000356000,
	STRUCTURE_TYPE_IMPORT_MEMORY_ZIRCON_HANDLE_INFO_FUCHSIA = 1000364000,
	STRUCTURE_TYPE_MEMORY_ZIRCON_HANDLE_PROPERTIES_FUCHSIA = 1000364001,
	STRUCTURE_TYPE_MEMORY_GET_ZIRCON_HANDLE_INFO_FUCHSIA = 1000364002,
	STRUCTURE_TYPE_IMPORT_SEMAPHORE_ZIRCON_HANDLE_INFO_FUCHSIA = 1000365000,
	STRUCTURE_TYPE_SEMAPHORE_GET_ZIRCON_HANDLE_INFO_FUCHSIA = 1000365001,
	STRUCTURE_TYPE_BUFFER_COLLECTION_CREATE_INFO_FUCHSIA = 1000366000,
	STRUCTURE_TYPE_IMPORT_MEMORY_BUFFER_COLLECTION_FUCHSIA = 1000366001,
	STRUCTURE_TYPE_BUFFER_COLLECTION_IMAGE_CREATE_INFO_FUCHSIA = 1000366002,
	STRUCTURE_TYPE_BUFFER_COLLECTION_PROPERTIES_FUCHSIA = 1000366003,
	STRUCTURE_TYPE_BUFFER_CONSTRAINTS_INFO_FUCHSIA = 1000366004,
	STRUCTURE_TYPE_BUFFER_COLLECTION_BUFFER_CREATE_INFO_FUCHSIA = 1000366005,
	STRUCTURE_TYPE_IMAGE_CONSTRAINTS_INFO_FUCHSIA = 1000366006,
	STRUCTURE_TYPE_IMAGE_FORMAT_CONSTRAINTS_INFO_FUCHSIA = 1000366007,
	STRUCTURE_TYPE_SYSMEM_COLOR_SPACE_FUCHSIA = 1000366008,
	STRUCTURE_TYPE_BUFFER_COLLECTION_CONSTRAINTS_INFO_FUCHSIA = 1000366009,
	STRUCTURE_TYPE_SUBPASS_SHADING_PIPELINE_CREATE_INFO_HUAWEI = 1000369000,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBPASS_SHADING_FEATURES_HUAWEI = 1000369001,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBPASS_SHADING_PROPERTIES_HUAWEI = 1000369002,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_INVOCATION_MASK_FEATURES_HUAWEI = 1000370000,
	STRUCTURE_TYPE_MEMORY_GET_REMOTE_ADDRESS_INFO_NV = 1000371000,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_MEMORY_RDMA_FEATURES_NV = 1000371001,
	STRUCTURE_TYPE_PIPELINE_PROPERTIES_IDENTIFIER_EXT = 1000372000,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_PROPERTIES_FEATURES_EXT = 1000372001,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAME_BOUNDARY_FEATURES_EXT = 1000375000,
	STRUCTURE_TYPE_FRAME_BOUNDARY_EXT = 1000375001,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTISAMPLED_RENDER_TO_SINGLE_SAMPLED_FEATURES_EXT = 1000376000,
	STRUCTURE_TYPE_SUBPASS_RESOLVE_PERFORMANCE_QUERY_EXT = 1000376001,
	STRUCTURE_TYPE_MULTISAMPLED_RENDER_TO_SINGLE_SAMPLED_INFO_EXT = 1000376002,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTENDED_DYNAMIC_STATE_2_FEATURES_EXT = 1000377000,
	STRUCTURE_TYPE_SCREEN_SURFACE_CREATE_INFO_QNX = 1000378000,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_COLOR_WRITE_ENABLE_FEATURES_EXT = 1000381000,
	STRUCTURE_TYPE_PIPELINE_COLOR_WRITE_CREATE_INFO_EXT = 1000381001,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_PRIMITIVES_GENERATED_QUERY_FEATURES_EXT = 1000382000,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_MAINTENANCE_1_FEATURES_KHR = 1000386000,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_VIEW_MIN_LOD_FEATURES_EXT = 1000391000,
	STRUCTURE_TYPE_IMAGE_VIEW_MIN_LOD_CREATE_INFO_EXT = 1000391001,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTI_DRAW_FEATURES_EXT = 1000392000,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTI_DRAW_PROPERTIES_EXT = 1000392001,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_2D_VIEW_OF_3D_FEATURES_EXT = 1000393000,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_TILE_IMAGE_FEATURES_EXT = 1000395000,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_TILE_IMAGE_PROPERTIES_EXT = 1000395001,
	STRUCTURE_TYPE_MICROMAP_BUILD_INFO_EXT = 1000396000,
	STRUCTURE_TYPE_MICROMAP_VERSION_INFO_EXT = 1000396001,
	STRUCTURE_TYPE_COPY_MICROMAP_INFO_EXT = 1000396002,
	STRUCTURE_TYPE_COPY_MICROMAP_TO_MEMORY_INFO_EXT = 1000396003,
	STRUCTURE_TYPE_COPY_MEMORY_TO_MICROMAP_INFO_EXT = 1000396004,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_OPACITY_MICROMAP_FEATURES_EXT = 1000396005,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_OPACITY_MICROMAP_PROPERTIES_EXT = 1000396006,
	STRUCTURE_TYPE_MICROMAP_CREATE_INFO_EXT = 1000396007,
	STRUCTURE_TYPE_MICROMAP_BUILD_SIZES_INFO_EXT = 1000396008,
	STRUCTURE_TYPE_ACCELERATION_STRUCTURE_TRIANGLES_OPACITY_MICROMAP_EXT = 1000396009,
#ifdef VK_ENABLE_BETA_EXTENSIONS
	STRUCTURE_TYPE_PHYSICAL_DEVICE_DISPLACEMENT_MICROMAP_FEATURES_NV = 1000397000,
#endif
#ifdef VK_ENABLE_BETA_EXTENSIONS
	STRUCTURE_TYPE_PHYSICAL_DEVICE_DISPLACEMENT_MICROMAP_PROPERTIES_NV = 1000397001,
#endif
#ifdef VK_ENABLE_BETA_EXTENSIONS
	STRUCTURE_TYPE_ACCELERATION_STRUCTURE_TRIANGLES_DISPLACEMENT_MICROMAP_NV = 1000397002,
#endif
	STRUCTURE_TYPE_PHYSICAL_DEVICE_CLUSTER_CULLING_SHADER_FEATURES_HUAWEI = 1000404000,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_CLUSTER_CULLING_SHADER_PROPERTIES_HUAWEI = 1000404001,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_CLUSTER_CULLING_SHADER_VRS_FEATURES_HUAWEI = 1000404002,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_BORDER_COLOR_SWIZZLE_FEATURES_EXT = 1000411000,
	STRUCTURE_TYPE_SAMPLER_BORDER_COLOR_COMPONENT_MAPPING_CREATE_INFO_EXT = 1000411001,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_PAGEABLE_DEVICE_LOCAL_MEMORY_FEATURES_EXT = 1000412000,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_CORE_PROPERTIES_ARM = 1000415000,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SUBGROUP_ROTATE_FEATURES_KHR = 1000416000,
	STRUCTURE_TYPE_DEVICE_QUEUE_SHADER_CORE_CONTROL_CREATE_INFO_ARM = 1000417000,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_SCHEDULING_CONTROLS_FEATURES_ARM = 1000417001,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_SCHEDULING_CONTROLS_PROPERTIES_ARM = 1000417002,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_SLICED_VIEW_OF_3D_FEATURES_EXT = 1000418000,
	STRUCTURE_TYPE_IMAGE_VIEW_SLICED_CREATE_INFO_EXT = 1000418001,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_SET_HOST_MAPPING_FEATURES_VALVE = 1000420000,
	STRUCTURE_TYPE_DESCRIPTOR_SET_BINDING_REFERENCE_VALVE = 1000420001,
	STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_HOST_MAPPING_INFO_VALVE = 1000420002,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_CLAMP_ZERO_ONE_FEATURES_EXT = 1000421000,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_NON_SEAMLESS_CUBE_MAP_FEATURES_EXT = 1000422000,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_RENDER_PASS_STRIPED_FEATURES_ARM = 1000424000,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_RENDER_PASS_STRIPED_PROPERTIES_ARM = 1000424001,
	STRUCTURE_TYPE_RENDER_PASS_STRIPE_BEGIN_INFO_ARM = 1000424002,
	STRUCTURE_TYPE_RENDER_PASS_STRIPE_INFO_ARM = 1000424003,
	STRUCTURE_TYPE_RENDER_PASS_STRIPE_SUBMIT_INFO_ARM = 1000424004,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_OFFSET_FEATURES_QCOM = 1000425000,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_OFFSET_PROPERTIES_QCOM = 1000425001,
	STRUCTURE_TYPE_SUBPASS_FRAGMENT_DENSITY_MAP_OFFSET_END_INFO_QCOM = 1000425002,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_COPY_MEMORY_INDIRECT_FEATURES_NV = 1000426000,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_COPY_MEMORY_INDIRECT_PROPERTIES_NV = 1000426001,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_DECOMPRESSION_FEATURES_NV = 1000427000,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_DECOMPRESSION_PROPERTIES_NV = 1000427001,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_DEVICE_GENERATED_COMMANDS_COMPUTE_FEATURES_NV = 1000428000,
	STRUCTURE_TYPE_COMPUTE_PIPELINE_INDIRECT_BUFFER_INFO_NV = 1000428001,
	STRUCTURE_TYPE_PIPELINE_INDIRECT_DEVICE_ADDRESS_INFO_NV = 1000428002,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_LINEAR_COLOR_ATTACHMENT_FEATURES_NV = 1000430000,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_MAXIMAL_RECONVERGENCE_FEATURES_KHR = 1000434000,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_COMPRESSION_CONTROL_SWAPCHAIN_FEATURES_EXT = 1000437000,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_PROCESSING_FEATURES_QCOM = 1000440000,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_PROCESSING_PROPERTIES_QCOM = 1000440001,
	STRUCTURE_TYPE_IMAGE_VIEW_SAMPLE_WEIGHT_CREATE_INFO_QCOM = 1000440002,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_NESTED_COMMAND_BUFFER_FEATURES_EXT = 1000451000,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_NESTED_COMMAND_BUFFER_PROPERTIES_EXT = 1000451001,
	STRUCTURE_TYPE_EXTERNAL_MEMORY_ACQUIRE_UNMODIFIED_EXT = 1000453000,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTENDED_DYNAMIC_STATE_3_FEATURES_EXT = 1000455000,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTENDED_DYNAMIC_STATE_3_PROPERTIES_EXT = 1000455001,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBPASS_MERGE_FEEDBACK_FEATURES_EXT = 1000458000,
	STRUCTURE_TYPE_RENDER_PASS_CREATION_CONTROL_EXT = 1000458001,
	STRUCTURE_TYPE_RENDER_PASS_CREATION_FEEDBACK_CREATE_INFO_EXT = 1000458002,
	STRUCTURE_TYPE_RENDER_PASS_SUBPASS_FEEDBACK_CREATE_INFO_EXT = 1000458003,
	STRUCTURE_TYPE_DIRECT_DRIVER_LOADING_INFO_LUNARG = 1000459000,
	STRUCTURE_TYPE_DIRECT_DRIVER_LOADING_LIST_LUNARG = 1000459001,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_MODULE_IDENTIFIER_FEATURES_EXT = 1000462000,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_MODULE_IDENTIFIER_PROPERTIES_EXT = 1000462001,
	STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_MODULE_IDENTIFIER_CREATE_INFO_EXT = 1000462002,
	STRUCTURE_TYPE_SHADER_MODULE_IDENTIFIER_EXT = 1000462003,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_RASTERIZATION_ORDER_ATTACHMENT_ACCESS_FEATURES_EXT = 1000342000,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_OPTICAL_FLOW_FEATURES_NV = 1000464000,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_OPTICAL_FLOW_PROPERTIES_NV = 1000464001,
	STRUCTURE_TYPE_OPTICAL_FLOW_IMAGE_FORMAT_INFO_NV = 1000464002,
	STRUCTURE_TYPE_OPTICAL_FLOW_IMAGE_FORMAT_PROPERTIES_NV = 1000464003,
	STRUCTURE_TYPE_OPTICAL_FLOW_SESSION_CREATE_INFO_NV = 1000464004,
	STRUCTURE_TYPE_OPTICAL_FLOW_EXECUTE_INFO_NV = 1000464005,
	STRUCTURE_TYPE_OPTICAL_FLOW_SESSION_CREATE_PRIVATE_DATA_INFO_NV = 1000464010,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_LEGACY_DITHERING_FEATURES_EXT = 1000465000,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_PROTECTED_ACCESS_FEATURES_EXT = 1000466000,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_FORMAT_RESOLVE_FEATURES_ANDROID = 1000468000,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_FORMAT_RESOLVE_PROPERTIES_ANDROID = 1000468001,
	STRUCTURE_TYPE_ANDROID_HARDWARE_BUFFER_FORMAT_RESOLVE_PROPERTIES_ANDROID = 1000468002,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_5_FEATURES_KHR = 1000470000,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_5_PROPERTIES_KHR = 1000470001,
	STRUCTURE_TYPE_RENDERING_AREA_INFO_KHR = 1000470003,
	STRUCTURE_TYPE_DEVICE_IMAGE_SUBRESOURCE_INFO_KHR = 1000470004,
	STRUCTURE_TYPE_SUBRESOURCE_LAYOUT_2_KHR = 1000338002,
	STRUCTURE_TYPE_IMAGE_SUBRESOURCE_2_KHR = 1000338003,
	STRUCTURE_TYPE_PIPELINE_CREATE_FLAGS_2_CREATE_INFO_KHR = 1000470005,
	STRUCTURE_TYPE_BUFFER_USAGE_FLAGS_2_CREATE_INFO_KHR = 1000470006,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_POSITION_FETCH_FEATURES_KHR = 1000481000,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_OBJECT_FEATURES_EXT = 1000482000,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_OBJECT_PROPERTIES_EXT = 1000482001,
	STRUCTURE_TYPE_SHADER_CREATE_INFO_EXT = 1000482002,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_TILE_PROPERTIES_FEATURES_QCOM = 1000484000,
	STRUCTURE_TYPE_TILE_PROPERTIES_QCOM = 1000484001,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_AMIGO_PROFILING_FEATURES_SEC = 1000485000,
	STRUCTURE_TYPE_AMIGO_PROFILING_SUBMIT_INFO_SEC = 1000485001,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PER_VIEW_VIEWPORTS_FEATURES_QCOM = 1000488000,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_INVOCATION_REORDER_FEATURES_NV = 1000490000,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_INVOCATION_REORDER_PROPERTIES_NV = 1000490001,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTENDED_SPARSE_ADDRESS_SPACE_FEATURES_NV = 1000492000,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTENDED_SPARSE_ADDRESS_SPACE_PROPERTIES_NV = 1000492001,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_MUTABLE_DESCRIPTOR_TYPE_FEATURES_EXT = 1000351000,
	STRUCTURE_TYPE_MUTABLE_DESCRIPTOR_TYPE_CREATE_INFO_EXT = 1000351002,
	STRUCTURE_TYPE_LAYER_SETTINGS_CREATE_INFO_EXT = 1000496000,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_CORE_BUILTINS_FEATURES_ARM = 1000497000,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_CORE_BUILTINS_PROPERTIES_ARM = 1000497001,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_LIBRARY_GROUP_HANDLES_FEATURES_EXT = 1000498000,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_DYNAMIC_RENDERING_UNUSED_ATTACHMENTS_FEATURES_EXT = 1000499000,
	STRUCTURE_TYPE_LATENCY_SLEEP_MODE_INFO_NV = 1000505000,
	STRUCTURE_TYPE_LATENCY_SLEEP_INFO_NV = 1000505001,
	STRUCTURE_TYPE_SET_LATENCY_MARKER_INFO_NV = 1000505002,
	STRUCTURE_TYPE_GET_LATENCY_MARKER_INFO_NV = 1000505003,
	STRUCTURE_TYPE_LATENCY_TIMINGS_FRAME_REPORT_NV = 1000505004,
	STRUCTURE_TYPE_LATENCY_SUBMISSION_PRESENT_ID_NV = 1000505005,
	STRUCTURE_TYPE_OUT_OF_BAND_QUEUE_TYPE_INFO_NV = 1000505006,
	STRUCTURE_TYPE_SWAPCHAIN_LATENCY_CREATE_INFO_NV = 1000505007,
	STRUCTURE_TYPE_LATENCY_SURFACE_CAPABILITIES_NV = 1000505008,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_COOPERATIVE_MATRIX_FEATURES_KHR = 1000506000,
	STRUCTURE_TYPE_COOPERATIVE_MATRIX_PROPERTIES_KHR = 1000506001,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_COOPERATIVE_MATRIX_PROPERTIES_KHR = 1000506002,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PER_VIEW_RENDER_AREAS_FEATURES_QCOM = 1000510000,
	STRUCTURE_TYPE_MULTIVIEW_PER_VIEW_RENDER_AREAS_RENDER_PASS_BEGIN_INFO_QCOM = 1000510001,
	STRUCTURE_TYPE_VIDEO_DECODE_AV1_CAPABILITIES_KHR = 1000512000,
	STRUCTURE_TYPE_VIDEO_DECODE_AV1_PICTURE_INFO_KHR = 1000512001,
	STRUCTURE_TYPE_VIDEO_DECODE_AV1_PROFILE_INFO_KHR = 1000512003,
	STRUCTURE_TYPE_VIDEO_DECODE_AV1_SESSION_PARAMETERS_CREATE_INFO_KHR = 1000512004,
	STRUCTURE_TYPE_VIDEO_DECODE_AV1_DPB_SLOT_INFO_KHR = 1000512005,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_VIDEO_MAINTENANCE_1_FEATURES_KHR = 1000515000,
	STRUCTURE_TYPE_VIDEO_INLINE_QUERY_INFO_KHR = 1000515001,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_PER_STAGE_DESCRIPTOR_SET_FEATURES_NV = 1000516000,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_PROCESSING_2_FEATURES_QCOM = 1000518000,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_PROCESSING_2_PROPERTIES_QCOM = 1000518001,
	STRUCTURE_TYPE_SAMPLER_BLOCK_MATCH_WINDOW_CREATE_INFO_QCOM = 1000518002,
	STRUCTURE_TYPE_SAMPLER_CUBIC_WEIGHTS_CREATE_INFO_QCOM = 1000519000,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_CUBIC_WEIGHTS_FEATURES_QCOM = 1000519001,
	STRUCTURE_TYPE_BLIT_IMAGE_CUBIC_WEIGHTS_INFO_QCOM = 1000519002,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_YCBCR_DEGAMMA_FEATURES_QCOM = 1000520000,
	STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_YCBCR_DEGAMMA_CREATE_INFO_QCOM = 1000520001,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_CUBIC_CLAMP_FEATURES_QCOM = 1000521000,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_ATTACHMENT_FEEDBACK_LOOP_DYNAMIC_STATE_FEATURES_EXT = 1000524000,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_VERTEX_ATTRIBUTE_DIVISOR_PROPERTIES_KHR = 1000525000,
	STRUCTURE_TYPE_PIPELINE_VERTEX_INPUT_DIVISOR_STATE_CREATE_INFO_KHR = 1000190001,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_VERTEX_ATTRIBUTE_DIVISOR_FEATURES_KHR = 1000190002,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_FLOAT_CONTROLS_2_FEATURES_KHR = 1000528000,
	STRUCTURE_TYPE_SCREEN_BUFFER_PROPERTIES_QNX = 1000529000,
	STRUCTURE_TYPE_SCREEN_BUFFER_FORMAT_PROPERTIES_QNX = 1000529001,
	STRUCTURE_TYPE_IMPORT_SCREEN_BUFFER_INFO_QNX = 1000529002,
	STRUCTURE_TYPE_EXTERNAL_FORMAT_QNX = 1000529003,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_MEMORY_SCREEN_BUFFER_FEATURES_QNX = 1000529004,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_LAYERED_DRIVER_PROPERTIES_MSFT = 1000530000,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_INDEX_TYPE_UINT8_FEATURES_KHR = 1000265000,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_LINE_RASTERIZATION_FEATURES_KHR = 1000259000,
	STRUCTURE_TYPE_PIPELINE_RASTERIZATION_LINE_STATE_CREATE_INFO_KHR = 1000259001,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_LINE_RASTERIZATION_PROPERTIES_KHR = 1000259002,
	STRUCTURE_TYPE_CALIBRATED_TIMESTAMP_INFO_KHR = 1000184000,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_EXPECT_ASSUME_FEATURES_KHR = 1000544000,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_6_FEATURES_KHR = 1000545000,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_6_PROPERTIES_KHR = 1000545001,
	STRUCTURE_TYPE_BIND_MEMORY_STATUS_KHR = 1000545002,
	STRUCTURE_TYPE_BIND_DESCRIPTOR_SETS_INFO_KHR = 1000545003,
	STRUCTURE_TYPE_PUSH_CONSTANTS_INFO_KHR = 1000545004,
	STRUCTURE_TYPE_PUSH_DESCRIPTOR_SET_INFO_KHR = 1000545005,
	STRUCTURE_TYPE_PUSH_DESCRIPTOR_SET_WITH_TEMPLATE_INFO_KHR = 1000545006,
	STRUCTURE_TYPE_SET_DESCRIPTOR_BUFFER_OFFSETS_INFO_EXT = 1000545007,
	STRUCTURE_TYPE_BIND_DESCRIPTOR_BUFFER_EMBEDDED_SAMPLERS_INFO_EXT = 1000545008,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_POOL_OVERALLOCATION_FEATURES_NV = 1000546000,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_RAW_ACCESS_CHAINS_FEATURES_NV = 1000555000,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_ATOMIC_FLOAT16_VECTOR_FEATURES_NV = 1000563000,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_VALIDATION_FEATURES_NV = 1000568000,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_VARIABLE_POINTER_FEATURES = STRUCTURE_TYPE_PHYSICAL_DEVICE_VARIABLE_POINTERS_FEATURES,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_DRAW_PARAMETER_FEATURES = STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_DRAW_PARAMETERS_FEATURES,
	STRUCTURE_TYPE_DEBUG_REPORT_CREATE_INFO_EXT = STRUCTURE_TYPE_DEBUG_REPORT_CALLBACK_CREATE_INFO_EXT,
	STRUCTURE_TYPE_RENDERING_INFO_KHR = STRUCTURE_TYPE_RENDERING_INFO,
	STRUCTURE_TYPE_RENDERING_ATTACHMENT_INFO_KHR = STRUCTURE_TYPE_RENDERING_ATTACHMENT_INFO,
	STRUCTURE_TYPE_PIPELINE_RENDERING_CREATE_INFO_KHR = STRUCTURE_TYPE_PIPELINE_RENDERING_CREATE_INFO,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_DYNAMIC_RENDERING_FEATURES_KHR = STRUCTURE_TYPE_PHYSICAL_DEVICE_DYNAMIC_RENDERING_FEATURES,
	STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_RENDERING_INFO_KHR = STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_RENDERING_INFO,
	STRUCTURE_TYPE_ATTACHMENT_SAMPLE_COUNT_INFO_NV = STRUCTURE_TYPE_ATTACHMENT_SAMPLE_COUNT_INFO_AMD,
	STRUCTURE_TYPE_RENDER_PASS_MULTIVIEW_CREATE_INFO_KHR = STRUCTURE_TYPE_RENDER_PASS_MULTIVIEW_CREATE_INFO,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_FEATURES_KHR = STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_FEATURES,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PROPERTIES_KHR = STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PROPERTIES,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_FEATURES_2_KHR = ePhysicalDeviceFeatures2,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_PROPERTIES_2_KHR = ePhysicalDeviceProperties2,
	STRUCTURE_TYPE_FORMAT_PROPERTIES_2_KHR = STRUCTURE_TYPE_FORMAT_PROPERTIES_2,
	STRUCTURE_TYPE_IMAGE_FORMAT_PROPERTIES_2_KHR = STRUCTURE_TYPE_IMAGE_FORMAT_PROPERTIES_2,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_FORMAT_INFO_2_KHR = STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_FORMAT_INFO_2,
	STRUCTURE_TYPE_QUEUE_FAMILY_PROPERTIES_2_KHR = eQueueFamilyProperties2,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_PROPERTIES_2_KHR = ePhysicalDeviceMemoryProperties2,
	STRUCTURE_TYPE_SPARSE_IMAGE_FORMAT_PROPERTIES_2_KHR = STRUCTURE_TYPE_SPARSE_IMAGE_FORMAT_PROPERTIES_2,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_SPARSE_IMAGE_FORMAT_INFO_2_KHR = STRUCTURE_TYPE_PHYSICAL_DEVICE_SPARSE_IMAGE_FORMAT_INFO_2,
	STRUCTURE_TYPE_MEMORY_ALLOCATE_FLAGS_INFO_KHR = STRUCTURE_TYPE_MEMORY_ALLOCATE_FLAGS_INFO,
	STRUCTURE_TYPE_DEVICE_GROUP_RENDER_PASS_BEGIN_INFO_KHR = STRUCTURE_TYPE_DEVICE_GROUP_RENDER_PASS_BEGIN_INFO,
	STRUCTURE_TYPE_DEVICE_GROUP_COMMAND_BUFFER_BEGIN_INFO_KHR = STRUCTURE_TYPE_DEVICE_GROUP_COMMAND_BUFFER_BEGIN_INFO,
	STRUCTURE_TYPE_DEVICE_GROUP_SUBMIT_INFO_KHR = STRUCTURE_TYPE_DEVICE_GROUP_SUBMIT_INFO,
	STRUCTURE_TYPE_DEVICE_GROUP_BIND_SPARSE_INFO_KHR = STRUCTURE_TYPE_DEVICE_GROUP_BIND_SPARSE_INFO,
	STRUCTURE_TYPE_BIND_BUFFER_MEMORY_DEVICE_GROUP_INFO_KHR = STRUCTURE_TYPE_BIND_BUFFER_MEMORY_DEVICE_GROUP_INFO,
	STRUCTURE_TYPE_BIND_IMAGE_MEMORY_DEVICE_GROUP_INFO_KHR = STRUCTURE_TYPE_BIND_IMAGE_MEMORY_DEVICE_GROUP_INFO,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_TEXTURE_COMPRESSION_ASTC_HDR_FEATURES_EXT = STRUCTURE_TYPE_PHYSICAL_DEVICE_TEXTURE_COMPRESSION_ASTC_HDR_FEATURES,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_GROUP_PROPERTIES_KHR = STRUCTURE_TYPE_PHYSICAL_DEVICE_GROUP_PROPERTIES,
	STRUCTURE_TYPE_DEVICE_GROUP_DEVICE_CREATE_INFO_KHR = STRUCTURE_TYPE_DEVICE_GROUP_DEVICE_CREATE_INFO,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_IMAGE_FORMAT_INFO_KHR = STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_IMAGE_FORMAT_INFO,
	STRUCTURE_TYPE_EXTERNAL_IMAGE_FORMAT_PROPERTIES_KHR = STRUCTURE_TYPE_EXTERNAL_IMAGE_FORMAT_PROPERTIES,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_BUFFER_INFO_KHR = STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_BUFFER_INFO,
	STRUCTURE_TYPE_EXTERNAL_BUFFER_PROPERTIES_KHR = STRUCTURE_TYPE_EXTERNAL_BUFFER_PROPERTIES,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_ID_PROPERTIES_KHR = STRUCTURE_TYPE_PHYSICAL_DEVICE_ID_PROPERTIES,
	STRUCTURE_TYPE_EXTERNAL_MEMORY_BUFFER_CREATE_INFO_KHR = STRUCTURE_TYPE_EXTERNAL_MEMORY_BUFFER_CREATE_INFO,
	STRUCTURE_TYPE_EXTERNAL_MEMORY_IMAGE_CREATE_INFO_KHR = STRUCTURE_TYPE_EXTERNAL_MEMORY_IMAGE_CREATE_INFO,
	STRUCTURE_TYPE_EXPORT_MEMORY_ALLOCATE_INFO_KHR = STRUCTURE_TYPE_EXPORT_MEMORY_ALLOCATE_INFO,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_SEMAPHORE_INFO_KHR = STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_SEMAPHORE_INFO,
	STRUCTURE_TYPE_EXTERNAL_SEMAPHORE_PROPERTIES_KHR = STRUCTURE_TYPE_EXTERNAL_SEMAPHORE_PROPERTIES,
	STRUCTURE_TYPE_EXPORT_SEMAPHORE_CREATE_INFO_KHR = STRUCTURE_TYPE_EXPORT_SEMAPHORE_CREATE_INFO,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_FLOAT16_INT8_FEATURES_KHR = STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_FLOAT16_INT8_FEATURES,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_FLOAT16_INT8_FEATURES_KHR = STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_FLOAT16_INT8_FEATURES,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_16BIT_STORAGE_FEATURES_KHR = STRUCTURE_TYPE_PHYSICAL_DEVICE_16BIT_STORAGE_FEATURES,
	STRUCTURE_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_CREATE_INFO_KHR = STRUCTURE_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_CREATE_INFO,
	STRUCTURE_TYPE_SURFACE_CAPABILITIES2_EXT = STRUCTURE_TYPE_SURFACE_CAPABILITIES_2_EXT,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGELESS_FRAMEBUFFER_FEATURES_KHR = STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGELESS_FRAMEBUFFER_FEATURES,
	STRUCTURE_TYPE_FRAMEBUFFER_ATTACHMENTS_CREATE_INFO_KHR = STRUCTURE_TYPE_FRAMEBUFFER_ATTACHMENTS_CREATE_INFO,
	STRUCTURE_TYPE_FRAMEBUFFER_ATTACHMENT_IMAGE_INFO_KHR = STRUCTURE_TYPE_FRAMEBUFFER_ATTACHMENT_IMAGE_INFO,
	STRUCTURE_TYPE_RENDER_PASS_ATTACHMENT_BEGIN_INFO_KHR = STRUCTURE_TYPE_RENDER_PASS_ATTACHMENT_BEGIN_INFO,
	STRUCTURE_TYPE_ATTACHMENT_DESCRIPTION_2_KHR = STRUCTURE_TYPE_ATTACHMENT_DESCRIPTION_2,
	STRUCTURE_TYPE_ATTACHMENT_REFERENCE_2_KHR = STRUCTURE_TYPE_ATTACHMENT_REFERENCE_2,
	STRUCTURE_TYPE_SUBPASS_DESCRIPTION_2_KHR = STRUCTURE_TYPE_SUBPASS_DESCRIPTION_2,
	STRUCTURE_TYPE_SUBPASS_DEPENDENCY_2_KHR = STRUCTURE_TYPE_SUBPASS_DEPENDENCY_2,
	STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO_2_KHR = STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO_2,
	STRUCTURE_TYPE_SUBPASS_BEGIN_INFO_KHR = STRUCTURE_TYPE_SUBPASS_BEGIN_INFO,
	STRUCTURE_TYPE_SUBPASS_END_INFO_KHR = STRUCTURE_TYPE_SUBPASS_END_INFO,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_FENCE_INFO_KHR = STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_FENCE_INFO,
	STRUCTURE_TYPE_EXTERNAL_FENCE_PROPERTIES_KHR = STRUCTURE_TYPE_EXTERNAL_FENCE_PROPERTIES,
	STRUCTURE_TYPE_EXPORT_FENCE_CREATE_INFO_KHR = STRUCTURE_TYPE_EXPORT_FENCE_CREATE_INFO,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_POINT_CLIPPING_PROPERTIES_KHR = STRUCTURE_TYPE_PHYSICAL_DEVICE_POINT_CLIPPING_PROPERTIES,
	STRUCTURE_TYPE_RENDER_PASS_INPUT_ATTACHMENT_ASPECT_CREATE_INFO_KHR = STRUCTURE_TYPE_RENDER_PASS_INPUT_ATTACHMENT_ASPECT_CREATE_INFO,
	STRUCTURE_TYPE_IMAGE_VIEW_USAGE_CREATE_INFO_KHR = STRUCTURE_TYPE_IMAGE_VIEW_USAGE_CREATE_INFO,
	STRUCTURE_TYPE_PIPELINE_TESSELLATION_DOMAIN_ORIGIN_STATE_CREATE_INFO_KHR = STRUCTURE_TYPE_PIPELINE_TESSELLATION_DOMAIN_ORIGIN_STATE_CREATE_INFO,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_VARIABLE_POINTERS_FEATURES_KHR = STRUCTURE_TYPE_PHYSICAL_DEVICE_VARIABLE_POINTERS_FEATURES,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_VARIABLE_POINTER_FEATURES_KHR = STRUCTURE_TYPE_PHYSICAL_DEVICE_VARIABLE_POINTERS_FEATURES_KHR,
	STRUCTURE_TYPE_MEMORY_DEDICATED_REQUIREMENTS_KHR = STRUCTURE_TYPE_MEMORY_DEDICATED_REQUIREMENTS,
	STRUCTURE_TYPE_MEMORY_DEDICATED_ALLOCATE_INFO_KHR = STRUCTURE_TYPE_MEMORY_DEDICATED_ALLOCATE_INFO,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_FILTER_MINMAX_PROPERTIES_EXT = STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_FILTER_MINMAX_PROPERTIES,
	STRUCTURE_TYPE_SAMPLER_REDUCTION_MODE_CREATE_INFO_EXT = STRUCTURE_TYPE_SAMPLER_REDUCTION_MODE_CREATE_INFO,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_FEATURES_EXT = STRUCTURE_TYPE_PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_FEATURES,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_PROPERTIES_EXT = STRUCTURE_TYPE_PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_PROPERTIES,
	STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET_INLINE_UNIFORM_BLOCK_EXT = STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET_INLINE_UNIFORM_BLOCK,
	STRUCTURE_TYPE_DESCRIPTOR_POOL_INLINE_UNIFORM_BLOCK_CREATE_INFO_EXT = STRUCTURE_TYPE_DESCRIPTOR_POOL_INLINE_UNIFORM_BLOCK_CREATE_INFO,
	STRUCTURE_TYPE_BUFFER_MEMORY_REQUIREMENTS_INFO_2_KHR = STRUCTURE_TYPE_BUFFER_MEMORY_REQUIREMENTS_INFO_2,
	STRUCTURE_TYPE_IMAGE_MEMORY_REQUIREMENTS_INFO_2_KHR = STRUCTURE_TYPE_IMAGE_MEMORY_REQUIREMENTS_INFO_2,
	STRUCTURE_TYPE_IMAGE_SPARSE_MEMORY_REQUIREMENTS_INFO_2_KHR = STRUCTURE_TYPE_IMAGE_SPARSE_MEMORY_REQUIREMENTS_INFO_2,
	STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2_KHR = STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2,
	STRUCTURE_TYPE_SPARSE_IMAGE_MEMORY_REQUIREMENTS_2_KHR = STRUCTURE_TYPE_SPARSE_IMAGE_MEMORY_REQUIREMENTS_2,
	STRUCTURE_TYPE_IMAGE_FORMAT_LIST_CREATE_INFO_KHR = STRUCTURE_TYPE_IMAGE_FORMAT_LIST_CREATE_INFO,
	STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_CREATE_INFO_KHR = STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_CREATE_INFO,
	STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_INFO_KHR = STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_INFO,
	STRUCTURE_TYPE_BIND_IMAGE_PLANE_MEMORY_INFO_KHR = STRUCTURE_TYPE_BIND_IMAGE_PLANE_MEMORY_INFO,
	STRUCTURE_TYPE_IMAGE_PLANE_MEMORY_REQUIREMENTS_INFO_KHR = STRUCTURE_TYPE_IMAGE_PLANE_MEMORY_REQUIREMENTS_INFO,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_YCBCR_CONVERSION_FEATURES_KHR = STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_YCBCR_CONVERSION_FEATURES,
	STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_IMAGE_FORMAT_PROPERTIES_KHR = STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_IMAGE_FORMAT_PROPERTIES,
	STRUCTURE_TYPE_BIND_BUFFER_MEMORY_INFO_KHR = STRUCTURE_TYPE_BIND_BUFFER_MEMORY_INFO,
	STRUCTURE_TYPE_BIND_IMAGE_MEMORY_INFO_KHR = STRUCTURE_TYPE_BIND_IMAGE_MEMORY_INFO,
	STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_BINDING_FLAGS_CREATE_INFO_EXT = STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_BINDING_FLAGS_CREATE_INFO,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_FEATURES_EXT = STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_FEATURES,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_PROPERTIES_EXT = STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_PROPERTIES,
	STRUCTURE_TYPE_DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_ALLOCATE_INFO_EXT = STRUCTURE_TYPE_DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_ALLOCATE_INFO,
	STRUCTURE_TYPE_DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_LAYOUT_SUPPORT_EXT = STRUCTURE_TYPE_DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_LAYOUT_SUPPORT,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_3_PROPERTIES_KHR = STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_3_PROPERTIES,
	STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_SUPPORT_KHR = STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_SUPPORT,
	STRUCTURE_TYPE_DEVICE_QUEUE_GLOBAL_PRIORITY_CREATE_INFO_EXT = STRUCTURE_TYPE_DEVICE_QUEUE_GLOBAL_PRIORITY_CREATE_INFO_KHR,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SUBGROUP_EXTENDED_TYPES_FEATURES_KHR = STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SUBGROUP_EXTENDED_TYPES_FEATURES,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_8BIT_STORAGE_FEATURES_KHR = STRUCTURE_TYPE_PHYSICAL_DEVICE_8BIT_STORAGE_FEATURES,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_ATOMIC_INT64_FEATURES_KHR = STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_ATOMIC_INT64_FEATURES,
	STRUCTURE_TYPE_CALIBRATED_TIMESTAMP_INFO_EXT = STRUCTURE_TYPE_CALIBRATED_TIMESTAMP_INFO_KHR,
	STRUCTURE_TYPE_PIPELINE_VERTEX_INPUT_DIVISOR_STATE_CREATE_INFO_EXT = STRUCTURE_TYPE_PIPELINE_VERTEX_INPUT_DIVISOR_STATE_CREATE_INFO_KHR,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_VERTEX_ATTRIBUTE_DIVISOR_FEATURES_EXT = STRUCTURE_TYPE_PHYSICAL_DEVICE_VERTEX_ATTRIBUTE_DIVISOR_FEATURES_KHR,
	STRUCTURE_TYPE_PIPELINE_CREATION_FEEDBACK_CREATE_INFO_EXT = STRUCTURE_TYPE_PIPELINE_CREATION_FEEDBACK_CREATE_INFO,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_DRIVER_PROPERTIES_KHR = STRUCTURE_TYPE_PHYSICAL_DEVICE_DRIVER_PROPERTIES,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_FLOAT_CONTROLS_PROPERTIES_KHR = STRUCTURE_TYPE_PHYSICAL_DEVICE_FLOAT_CONTROLS_PROPERTIES,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_STENCIL_RESOLVE_PROPERTIES_KHR = STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_STENCIL_RESOLVE_PROPERTIES,
	STRUCTURE_TYPE_SUBPASS_DESCRIPTION_DEPTH_STENCIL_RESOLVE_KHR = STRUCTURE_TYPE_SUBPASS_DESCRIPTION_DEPTH_STENCIL_RESOLVE,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADER_BARYCENTRIC_FEATURES_NV = STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADER_BARYCENTRIC_FEATURES_KHR,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_TIMELINE_SEMAPHORE_FEATURES_KHR = STRUCTURE_TYPE_PHYSICAL_DEVICE_TIMELINE_SEMAPHORE_FEATURES,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_TIMELINE_SEMAPHORE_PROPERTIES_KHR = STRUCTURE_TYPE_PHYSICAL_DEVICE_TIMELINE_SEMAPHORE_PROPERTIES,
	STRUCTURE_TYPE_SEMAPHORE_TYPE_CREATE_INFO_KHR = STRUCTURE_TYPE_SEMAPHORE_TYPE_CREATE_INFO,
	STRUCTURE_TYPE_TIMELINE_SEMAPHORE_SUBMIT_INFO_KHR = STRUCTURE_TYPE_TIMELINE_SEMAPHORE_SUBMIT_INFO,
	STRUCTURE_TYPE_SEMAPHORE_WAIT_INFO_KHR = STRUCTURE_TYPE_SEMAPHORE_WAIT_INFO,
	STRUCTURE_TYPE_SEMAPHORE_SIGNAL_INFO_KHR = STRUCTURE_TYPE_SEMAPHORE_SIGNAL_INFO,
	STRUCTURE_TYPE_QUERY_POOL_CREATE_INFO_INTEL = STRUCTURE_TYPE_QUERY_POOL_PERFORMANCE_QUERY_CREATE_INFO_INTEL,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_MEMORY_MODEL_FEATURES_KHR = STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_MEMORY_MODEL_FEATURES,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_TERMINATE_INVOCATION_FEATURES_KHR = STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_TERMINATE_INVOCATION_FEATURES,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_SCALAR_BLOCK_LAYOUT_FEATURES_EXT = STRUCTURE_TYPE_PHYSICAL_DEVICE_SCALAR_BLOCK_LAYOUT_FEATURES,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_SIZE_CONTROL_PROPERTIES_EXT = STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_SIZE_CONTROL_PROPERTIES,
	STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_REQUIRED_SUBGROUP_SIZE_CREATE_INFO_EXT = STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_REQUIRED_SUBGROUP_SIZE_CREATE_INFO,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_SIZE_CONTROL_FEATURES_EXT = STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_SIZE_CONTROL_FEATURES,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_SEPARATE_DEPTH_STENCIL_LAYOUTS_FEATURES_KHR = STRUCTURE_TYPE_PHYSICAL_DEVICE_SEPARATE_DEPTH_STENCIL_LAYOUTS_FEATURES,
	STRUCTURE_TYPE_ATTACHMENT_REFERENCE_STENCIL_LAYOUT_KHR = STRUCTURE_TYPE_ATTACHMENT_REFERENCE_STENCIL_LAYOUT,
	STRUCTURE_TYPE_ATTACHMENT_DESCRIPTION_STENCIL_LAYOUT_KHR = STRUCTURE_TYPE_ATTACHMENT_DESCRIPTION_STENCIL_LAYOUT,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_BUFFER_ADDRESS_FEATURES_EXT = STRUCTURE_TYPE_PHYSICAL_DEVICE_BUFFER_DEVICE_ADDRESS_FEATURES_EXT,
	STRUCTURE_TYPE_BUFFER_DEVICE_ADDRESS_INFO_EXT = STRUCTURE_TYPE_BUFFER_DEVICE_ADDRESS_INFO,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_TOOL_PROPERTIES_EXT = STRUCTURE_TYPE_PHYSICAL_DEVICE_TOOL_PROPERTIES,
	STRUCTURE_TYPE_IMAGE_STENCIL_USAGE_CREATE_INFO_EXT = STRUCTURE_TYPE_IMAGE_STENCIL_USAGE_CREATE_INFO,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_UNIFORM_BUFFER_STANDARD_LAYOUT_FEATURES_KHR = STRUCTURE_TYPE_PHYSICAL_DEVICE_UNIFORM_BUFFER_STANDARD_LAYOUT_FEATURES,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_BUFFER_DEVICE_ADDRESS_FEATURES_KHR = STRUCTURE_TYPE_PHYSICAL_DEVICE_BUFFER_DEVICE_ADDRESS_FEATURES,
	STRUCTURE_TYPE_BUFFER_DEVICE_ADDRESS_INFO_KHR = STRUCTURE_TYPE_BUFFER_DEVICE_ADDRESS_INFO,
	STRUCTURE_TYPE_BUFFER_OPAQUE_CAPTURE_ADDRESS_CREATE_INFO_KHR = STRUCTURE_TYPE_BUFFER_OPAQUE_CAPTURE_ADDRESS_CREATE_INFO,
	STRUCTURE_TYPE_MEMORY_OPAQUE_CAPTURE_ADDRESS_ALLOCATE_INFO_KHR = STRUCTURE_TYPE_MEMORY_OPAQUE_CAPTURE_ADDRESS_ALLOCATE_INFO,
	STRUCTURE_TYPE_DEVICE_MEMORY_OPAQUE_CAPTURE_ADDRESS_INFO_KHR = STRUCTURE_TYPE_DEVICE_MEMORY_OPAQUE_CAPTURE_ADDRESS_INFO,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_LINE_RASTERIZATION_FEATURES_EXT = STRUCTURE_TYPE_PHYSICAL_DEVICE_LINE_RASTERIZATION_FEATURES_KHR,
	STRUCTURE_TYPE_PIPELINE_RASTERIZATION_LINE_STATE_CREATE_INFO_EXT = STRUCTURE_TYPE_PIPELINE_RASTERIZATION_LINE_STATE_CREATE_INFO_KHR,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_LINE_RASTERIZATION_PROPERTIES_EXT = STRUCTURE_TYPE_PHYSICAL_DEVICE_LINE_RASTERIZATION_PROPERTIES_KHR,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_HOST_QUERY_RESET_FEATURES_EXT = STRUCTURE_TYPE_PHYSICAL_DEVICE_HOST_QUERY_RESET_FEATURES,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_INDEX_TYPE_UINT8_FEATURES_EXT = STRUCTURE_TYPE_PHYSICAL_DEVICE_INDEX_TYPE_UINT8_FEATURES_KHR,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_DEMOTE_TO_HELPER_INVOCATION_FEATURES_EXT = STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_DEMOTE_TO_HELPER_INVOCATION_FEATURES,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_INTEGER_DOT_PRODUCT_FEATURES_KHR = STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_INTEGER_DOT_PRODUCT_FEATURES,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_INTEGER_DOT_PRODUCT_PROPERTIES_KHR = STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_INTEGER_DOT_PRODUCT_PROPERTIES,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_TEXEL_BUFFER_ALIGNMENT_PROPERTIES_EXT = STRUCTURE_TYPE_PHYSICAL_DEVICE_TEXEL_BUFFER_ALIGNMENT_PROPERTIES,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_PRIVATE_DATA_FEATURES_EXT = STRUCTURE_TYPE_PHYSICAL_DEVICE_PRIVATE_DATA_FEATURES,
	STRUCTURE_TYPE_DEVICE_PRIVATE_DATA_CREATE_INFO_EXT = STRUCTURE_TYPE_DEVICE_PRIVATE_DATA_CREATE_INFO,
	STRUCTURE_TYPE_PRIVATE_DATA_SLOT_CREATE_INFO_EXT = STRUCTURE_TYPE_PRIVATE_DATA_SLOT_CREATE_INFO,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_CREATION_CACHE_CONTROL_FEATURES_EXT = STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_CREATION_CACHE_CONTROL_FEATURES,
	STRUCTURE_TYPE_MEMORY_BARRIER_2_KHR = STRUCTURE_TYPE_MEMORY_BARRIER_2,
	STRUCTURE_TYPE_BUFFER_MEMORY_BARRIER_2_KHR = STRUCTURE_TYPE_BUFFER_MEMORY_BARRIER_2,
	STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER_2_KHR = STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER_2,
	STRUCTURE_TYPE_DEPENDENCY_INFO_KHR = STRUCTURE_TYPE_DEPENDENCY_INFO,
	STRUCTURE_TYPE_SUBMIT_INFO_2_KHR = STRUCTURE_TYPE_SUBMIT_INFO_2,
	STRUCTURE_TYPE_SEMAPHORE_SUBMIT_INFO_KHR = STRUCTURE_TYPE_SEMAPHORE_SUBMIT_INFO,
	STRUCTURE_TYPE_COMMAND_BUFFER_SUBMIT_INFO_KHR = STRUCTURE_TYPE_COMMAND_BUFFER_SUBMIT_INFO,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_SYNCHRONIZATION_2_FEATURES_KHR = STRUCTURE_TYPE_PHYSICAL_DEVICE_SYNCHRONIZATION_2_FEATURES,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_ZERO_INITIALIZE_WORKGROUP_MEMORY_FEATURES_KHR = STRUCTURE_TYPE_PHYSICAL_DEVICE_ZERO_INITIALIZE_WORKGROUP_MEMORY_FEATURES,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_ROBUSTNESS_FEATURES_EXT = STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_ROBUSTNESS_FEATURES,
	STRUCTURE_TYPE_COPY_BUFFER_INFO_2_KHR = STRUCTURE_TYPE_COPY_BUFFER_INFO_2,
	STRUCTURE_TYPE_COPY_IMAGE_INFO_2_KHR = STRUCTURE_TYPE_COPY_IMAGE_INFO_2,
	STRUCTURE_TYPE_COPY_BUFFER_TO_IMAGE_INFO_2_KHR = STRUCTURE_TYPE_COPY_BUFFER_TO_IMAGE_INFO_2,
	STRUCTURE_TYPE_COPY_IMAGE_TO_BUFFER_INFO_2_KHR = STRUCTURE_TYPE_COPY_IMAGE_TO_BUFFER_INFO_2,
	STRUCTURE_TYPE_BLIT_IMAGE_INFO_2_KHR = STRUCTURE_TYPE_BLIT_IMAGE_INFO_2,
	STRUCTURE_TYPE_RESOLVE_IMAGE_INFO_2_KHR = STRUCTURE_TYPE_RESOLVE_IMAGE_INFO_2,
	STRUCTURE_TYPE_BUFFER_COPY_2_KHR = STRUCTURE_TYPE_BUFFER_COPY_2,
	STRUCTURE_TYPE_IMAGE_COPY_2_KHR = STRUCTURE_TYPE_IMAGE_COPY_2,
	STRUCTURE_TYPE_IMAGE_BLIT_2_KHR = STRUCTURE_TYPE_IMAGE_BLIT_2,
	STRUCTURE_TYPE_BUFFER_IMAGE_COPY_2_KHR = STRUCTURE_TYPE_BUFFER_IMAGE_COPY_2,
	STRUCTURE_TYPE_IMAGE_RESOLVE_2_KHR = STRUCTURE_TYPE_IMAGE_RESOLVE_2,
	STRUCTURE_TYPE_SUBRESOURCE_LAYOUT_2_EXT = STRUCTURE_TYPE_SUBRESOURCE_LAYOUT_2_KHR,
	STRUCTURE_TYPE_IMAGE_SUBRESOURCE_2_EXT = STRUCTURE_TYPE_IMAGE_SUBRESOURCE_2_KHR,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_RASTERIZATION_ORDER_ATTACHMENT_ACCESS_FEATURES_ARM = STRUCTURE_TYPE_PHYSICAL_DEVICE_RASTERIZATION_ORDER_ATTACHMENT_ACCESS_FEATURES_EXT,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_MUTABLE_DESCRIPTOR_TYPE_FEATURES_VALVE = STRUCTURE_TYPE_PHYSICAL_DEVICE_MUTABLE_DESCRIPTOR_TYPE_FEATURES_EXT,
	STRUCTURE_TYPE_MUTABLE_DESCRIPTOR_TYPE_CREATE_INFO_VALVE = STRUCTURE_TYPE_MUTABLE_DESCRIPTOR_TYPE_CREATE_INFO_EXT,
	STRUCTURE_TYPE_FORMAT_PROPERTIES_3_KHR = STRUCTURE_TYPE_FORMAT_PROPERTIES_3,
	STRUCTURE_TYPE_PIPELINE_INFO_EXT = STRUCTURE_TYPE_PIPELINE_INFO_KHR,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_GLOBAL_PRIORITY_QUERY_FEATURES_EXT = STRUCTURE_TYPE_PHYSICAL_DEVICE_GLOBAL_PRIORITY_QUERY_FEATURES_KHR,
	STRUCTURE_TYPE_QUEUE_FAMILY_GLOBAL_PRIORITY_PROPERTIES_EXT = STRUCTURE_TYPE_QUEUE_FAMILY_GLOBAL_PRIORITY_PROPERTIES_KHR,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_4_FEATURES_KHR = STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_4_FEATURES,
	STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_4_PROPERTIES_KHR = STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_4_PROPERTIES,
	STRUCTURE_TYPE_DEVICE_BUFFER_MEMORY_REQUIREMENTS_KHR = STRUCTURE_TYPE_DEVICE_BUFFER_MEMORY_REQUIREMENTS,
	STRUCTURE_TYPE_DEVICE_IMAGE_MEMORY_REQUIREMENTS_KHR = STRUCTURE_TYPE_DEVICE_IMAGE_MEMORY_REQUIREMENTS,
	STRUCTURE_TYPE_SHADER_REQUIRED_SUBGROUP_SIZE_CREATE_INFO_EXT = STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_REQUIRED_SUBGROUP_SIZE_CREATE_INFO,
	STRUCTURE_TYPE_MAX_ENUM = 0x7FFFFFFF
};

typedef enum SystemAllocationScope {
	SYSTEM_ALLOCATION_SCOPE_COMMAND = 0,
	SYSTEM_ALLOCATION_SCOPE_OBJECT = 1,
	SYSTEM_ALLOCATION_SCOPE_CACHE = 2,
	SYSTEM_ALLOCATION_SCOPE_DEVICE = 3,
	SYSTEM_ALLOCATION_SCOPE_INSTANCE = 4,
	SYSTEM_ALLOCATION_SCOPE_MAX_ENUM = 0x7FFFFFFF
} SystemAllocationScope;

typedef enum InternalAllocationType {
	INTERNAL_ALLOCATION_TYPE_EXECUTABLE = 0,
	INTERNAL_ALLOCATION_TYPE_MAX_ENUM = 0x7FFFFFFF
} InternalAllocationType;

enum class PhysicalDeviceType {
	eOther = 0,
	eIntegratedGpu = 1,
	eDiscreteGpu = 2,
	eVirtualGpu = 3,
	eCpu = 4,
};

enum class DriverId {
	VK_DRIVER_ID_AMD_PROPRIETARY = 1,
	VK_DRIVER_ID_AMD_OPEN_SOURCE = 2,
	VK_DRIVER_ID_MESA_RADV = 3,
	VK_DRIVER_ID_NVIDIA_PROPRIETARY = 4,
	VK_DRIVER_ID_INTEL_PROPRIETARY_WINDOWS = 5,
	VK_DRIVER_ID_INTEL_OPEN_SOURCE_MESA = 6,
	VK_DRIVER_ID_IMAGINATION_PROPRIETARY = 7,
	VK_DRIVER_ID_QUALCOMM_PROPRIETARY = 8,
	VK_DRIVER_ID_ARM_PROPRIETARY = 9,
	VK_DRIVER_ID_GOOGLE_SWIFTSHADER = 10,
	VK_DRIVER_ID_GGP_PROPRIETARY = 11,
	VK_DRIVER_ID_BROADCOM_PROPRIETARY = 12,
	VK_DRIVER_ID_MESA_LLVMPIPE = 13,
	VK_DRIVER_ID_MOLTENVK = 14,
	VK_DRIVER_ID_COREAVI_PROPRIETARY = 15,
	VK_DRIVER_ID_JUICE_PROPRIETARY = 16,
	VK_DRIVER_ID_VERISILICON_PROPRIETARY = 17,
	VK_DRIVER_ID_MESA_TURNIP = 18,
	VK_DRIVER_ID_MESA_V3DV = 19,
	VK_DRIVER_ID_MESA_PANVK = 20,
	VK_DRIVER_ID_SAMSUNG_PROPRIETARY = 21,
	VK_DRIVER_ID_MESA_VENUS = 22,
	VK_DRIVER_ID_MESA_DOZEN = 23,
	VK_DRIVER_ID_MESA_NVK = 24,
	VK_DRIVER_ID_IMAGINATION_OPEN_SOURCE_MESA = 25,
	VK_DRIVER_ID_MESA_HONEYKRISP = 26,
	VK_DRIVER_ID_RESERVED_27 = 27,
	VK_DRIVER_ID_AMD_PROPRIETARY_KHR = VK_DRIVER_ID_AMD_PROPRIETARY,
	VK_DRIVER_ID_AMD_OPEN_SOURCE_KHR = VK_DRIVER_ID_AMD_OPEN_SOURCE,
	VK_DRIVER_ID_MESA_RADV_KHR = VK_DRIVER_ID_MESA_RADV,
	VK_DRIVER_ID_NVIDIA_PROPRIETARY_KHR = VK_DRIVER_ID_NVIDIA_PROPRIETARY,
	VK_DRIVER_ID_INTEL_PROPRIETARY_WINDOWS_KHR = VK_DRIVER_ID_INTEL_PROPRIETARY_WINDOWS,
	VK_DRIVER_ID_INTEL_OPEN_SOURCE_MESA_KHR = VK_DRIVER_ID_INTEL_OPEN_SOURCE_MESA,
	VK_DRIVER_ID_IMAGINATION_PROPRIETARY_KHR = VK_DRIVER_ID_IMAGINATION_PROPRIETARY,
	VK_DRIVER_ID_QUALCOMM_PROPRIETARY_KHR = VK_DRIVER_ID_QUALCOMM_PROPRIETARY,
	VK_DRIVER_ID_ARM_PROPRIETARY_KHR = VK_DRIVER_ID_ARM_PROPRIETARY,
	VK_DRIVER_ID_GOOGLE_SWIFTSHADER_KHR = VK_DRIVER_ID_GOOGLE_SWIFTSHADER,
	VK_DRIVER_ID_GGP_PROPRIETARY_KHR = VK_DRIVER_ID_GGP_PROPRIETARY,
	VK_DRIVER_ID_BROADCOM_PROPRIETARY_KHR = VK_DRIVER_ID_BROADCOM_PROPRIETARY,
	VK_DRIVER_ID_MAX_ENUM = 0x7FFFFFFF
};

typedef enum PointClippingBehavior {
	VK_POINT_CLIPPING_BEHAVIOR_ALL_CLIP_PLANES = 0,
	VK_POINT_CLIPPING_BEHAVIOR_USER_CLIP_PLANES_ONLY = 1,
	VK_POINT_CLIPPING_BEHAVIOR_ALL_CLIP_PLANES_KHR = VK_POINT_CLIPPING_BEHAVIOR_ALL_CLIP_PLANES,
	VK_POINT_CLIPPING_BEHAVIOR_USER_CLIP_PLANES_ONLY_KHR = VK_POINT_CLIPPING_BEHAVIOR_USER_CLIP_PLANES_ONLY,
	VK_POINT_CLIPPING_BEHAVIOR_MAX_ENUM = 0x7FFFFFFF
} PointClippingBehavior;

typedef enum ShaderFloatControlsIndependence {
	VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_32_BIT_ONLY = 0,
	VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_ALL = 1,
	VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_NONE = 2,
	VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_32_BIT_ONLY_KHR = VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_32_BIT_ONLY,
	VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_ALL_KHR = VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_ALL,
	VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_NONE_KHR = VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_NONE,
	VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_MAX_ENUM = 0x7FFFFFFF
} ShaderFloatControlsIndependence;


// various stuff required by Vulkan structs
// copied from vulkan_core.h
constexpr const unsigned MaxExtensionNameSize = 256;
constexpr const unsigned MaxDescriptionSize = 256;
constexpr const unsigned MaxPhysicalDeviceNameSize = 256;
constexpr const unsigned UuidSize = 16;
constexpr const unsigned LuidSize = 8;
constexpr const unsigned MaxMemoryTypes = 32;
constexpr const unsigned MaxMemoryHeaps = 16;
constexpr const unsigned MaxDriverNameSize = 256;
constexpr const unsigned MaxDriverInfoSize = 256;
using Bool32 = uint32_t;
using DeviceSize = uint64_t;
using Flags = uint32_t;
using DeviceCreateFlags = Flags;
using DeviceQueueCreateFlags = Flags;
using FormatFeatureFlags = Flags;
using ImageCreateFlags = Flags;
using ImageUsageFlags = Flags;
using InstanceCreateFlags = Flags;
using MemoryHeapFlags = Flags;
using MemoryPropertyFlags = Flags;
using QueueFlags = Flags;
using ResolveModeFlags = Flags;
using SampleCountFlags = Flags;
using ShaderStageFlags = Flags;
using SubgroupFeatureFlags = Flags;
using VideoCodecOperationFlagsKHR = Flags;


namespace FormatFeatureFlagBits {
	constexpr const Flags eSampledImage = 0x00000001;
	constexpr const Flags eStorageImage = 0x00000002;
	constexpr const Flags eStorageImageAtomic = 0x00000004;
	constexpr const Flags eUniformTexelBuffer = 0x00000008;
	constexpr const Flags eStorageTexelBuffer = 0x00000010;
	constexpr const Flags eStorageTexelBufferAtomic = 0x00000020;
	constexpr const Flags eVertexBuffer = 0x00000040;
	constexpr const Flags eColorAttachment = 0x00000080;
	constexpr const Flags eColorAttachmentBlend = 0x00000100;
	constexpr const Flags eDepthStencilAttachment = 0x00000200;
	constexpr const Flags eAllFlags = 0x7fffffff;
	/* TODO: fill remaining constants here
	VK_FORMAT_FEATURE_BLIT_SRC_BIT = 0x00000400,
	VK_FORMAT_FEATURE_BLIT_DST_BIT = 0x00000800,
	VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT = 0x00001000,
	VK_FORMAT_FEATURE_TRANSFER_SRC_BIT = 0x00004000,
	VK_FORMAT_FEATURE_TRANSFER_DST_BIT = 0x00008000,
	VK_FORMAT_FEATURE_MIDPOINT_CHROMA_SAMPLES_BIT = 0x00020000,
	VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_LINEAR_FILTER_BIT = 0x00040000,
	VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_SEPARATE_RECONSTRUCTION_FILTER_BIT = 0x00080000,
	VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_BIT = 0x00100000,
	VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_FORCEABLE_BIT = 0x00200000,
	VK_FORMAT_FEATURE_DISJOINT_BIT = 0x00400000,
	VK_FORMAT_FEATURE_COSITED_CHROMA_SAMPLES_BIT = 0x00800000,
	VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_MINMAX_BIT = 0x00010000,
	VK_FORMAT_FEATURE_VIDEO_DECODE_OUTPUT_BIT_KHR = 0x02000000,
	VK_FORMAT_FEATURE_VIDEO_DECODE_DPB_BIT_KHR = 0x04000000,
	VK_FORMAT_FEATURE_ACCELERATION_STRUCTURE_VERTEX_BUFFER_BIT_KHR = 0x20000000,
	VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_CUBIC_BIT_EXT = 0x00002000,
	VK_FORMAT_FEATURE_FRAGMENT_DENSITY_MAP_BIT_EXT = 0x01000000,
	VK_FORMAT_FEATURE_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR = 0x40000000,
	VK_FORMAT_FEATURE_VIDEO_ENCODE_INPUT_BIT_KHR = 0x08000000,
	VK_FORMAT_FEATURE_VIDEO_ENCODE_DPB_BIT_KHR = 0x10000000,
	VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_CUBIC_BIT_IMG = VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_CUBIC_BIT_EXT,
	VK_FORMAT_FEATURE_TRANSFER_SRC_BIT_KHR = VK_FORMAT_FEATURE_TRANSFER_SRC_BIT,
	VK_FORMAT_FEATURE_TRANSFER_DST_BIT_KHR = VK_FORMAT_FEATURE_TRANSFER_DST_BIT,
	VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_MINMAX_BIT_EXT = VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_MINMAX_BIT,
	VK_FORMAT_FEATURE_MIDPOINT_CHROMA_SAMPLES_BIT_KHR = VK_FORMAT_FEATURE_MIDPOINT_CHROMA_SAMPLES_BIT,
	VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_LINEAR_FILTER_BIT_KHR = VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_LINEAR_FILTER_BIT,
	VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_SEPARATE_RECONSTRUCTION_FILTER_BIT_KHR = VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_SEPARATE_RECONSTRUCTION_FILTER_BIT,
	VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_BIT_KHR = VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_BIT,
	VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_FORCEABLE_BIT_KHR = VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_FORCEABLE_BIT,
	VK_FORMAT_FEATURE_DISJOINT_BIT_KHR = VK_FORMAT_FEATURE_DISJOINT_BIT,
	VK_FORMAT_FEATURE_COSITED_CHROMA_SAMPLES_BIT_KHR = VK_FORMAT_FEATURE_COSITED_CHROMA_SAMPLES_BIT,
	VK_FORMAT_FEATURE_FLAG_BITS_MAX_ENUM = 0x7FFFFFFF*/
}

namespace QueueFlagBits {
	constexpr const Flags eGraphics       = 0x00000001;
	constexpr const Flags eCompute        = 0x00000002;
	constexpr const Flags eTransfer       = 0x00000004;
	constexpr const Flags eSparseBinding  = 0x00000008;
	constexpr const Flags eProtected      = 0x00000010;
	constexpr const Flags eVideoDecodeKHR = 0x00000020;
	constexpr const Flags eVideoEncodeKHR = 0x00000040;
	constexpr const Flags eOpticalFlowNV  = 0x00000100;
}

namespace MemoryHeapFlagBits {
	constexpr const Flags eDeviceLocal   = 0x00000001;
	constexpr const Flags eMultiInstance = 0x00000002;
}

namespace VideoCodecOperationFlagBitsKHR {
	constexpr const Flags eNone = 0;
	constexpr const Flags eEncodeH264 = 0x00010000;
	constexpr const Flags eEncodeH265 = 0x00020000;
	constexpr const Flags eDecodeH264 = 0x00000001;
	constexpr const Flags eDecodeH265 = 0x00000002;
	constexpr const Flags eDecodeAV1 = 0x00000004;
}


// version macro replacements
// author: PCJohn (peciva at fit.vut.cz)
constexpr uint32_t makeApiVersion(uint32_t variant, uint32_t major, uint32_t minor, uint32_t patch)  { return (variant << 29) | (major << 22) | (minor << 12) | patch; }
constexpr uint32_t makeApiVersion(uint32_t major, uint32_t minor, uint32_t patch)  { return (major << 22) | (minor << 12) | patch; }
constexpr const uint32_t ApiVersion10 = makeApiVersion(0, 1, 0, 0);
constexpr const uint32_t ApiVersion11 = makeApiVersion(0, 1, 1, 0);
constexpr const uint32_t ApiVersion12 = makeApiVersion(0, 1, 2, 0);
constexpr const uint32_t ApiVersion13 = makeApiVersion(0, 1, 3, 0);
constexpr uint32_t apiVersionVariant(uint32_t version)  { return version >> 29; }
constexpr uint32_t apiVersionMajor(uint32_t version)  { return (version >> 22) & 0x7f; }
constexpr uint32_t apiVersionMinor(uint32_t version)  { return (version >> 12) & 0x3ff; }
constexpr uint32_t apiVersionPatch(uint32_t version)  { return version & 0xfff; }


// taken from vk_platform.h
/* Platform-specific calling convention macros.
 *
 * Platforms should define these so that Vulkan clients call Vulkan commands
 * with the same calling conventions that the Vulkan implementation expects.
 *
 * VKAPI_ATTR - Placed before the return type in function declarations.
 *              Useful for C++11 and GCC/Clang-style function attribute syntax.
 * VKAPI_CALL - Placed after the return type in function declarations.
 *              Useful for MSVC-style calling convention syntax.
 * VKAPI_PTR  - Placed between the '(' and '*' in function pointer types.
 *
 * Function declaration:  VKAPI_ATTR void VKAPI_CALL vkCommand(void);
 * Function pointer type: typedef void (VKAPI_PTR *PFN_vkCommand)(void);
 */
#if defined(_WIN32)
	// On Windows, Vulkan commands use the stdcall convention
	#define VKAPI_ATTR
	#define VKAPI_CALL __stdcall
	#define VKAPI_PTR  VKAPI_CALL
#elif defined(__ANDROID__) && defined(__ARM_ARCH) && __ARM_ARCH < 7
	#error "Vulkan is not supported for the 'armeabi' NDK ABI"
#elif defined(__ANDROID__) && defined(__ARM_ARCH) && __ARM_ARCH >= 7 && defined(__ARM_32BIT_STATE)
	// On Android 32-bit ARM targets, Vulkan functions use the "hardfloat"
	// calling convention, i.e. float parameters are passed in registers. This
	// is true even if the rest of the application passes floats on the stack,
	// as it does by default when compiling for the armeabi-v7a NDK ABI.
	#define VKAPI_ATTR __attribute__((pcs("aapcs-vfp")))
	#define VKAPI_CALL
	#define VKAPI_PTR  VKAPI_ATTR
#else
	// On other platforms, use the default calling convention
	#define VKAPI_ATTR
	#define VKAPI_CALL
	#define VKAPI_PTR
#endif


typedef struct Extent3D {
	uint32_t    width;
	uint32_t    height;
	uint32_t    depth;
} Extent3D;

using PFN_vkAllocationFunction = void* (VKAPI_PTR *)(
	void*                                       pUserData,
	size_t                                      size,
	size_t                                      alignment,
	SystemAllocationScope                       allocationScope);

using PFN_vkFreeFunction = void (VKAPI_PTR *)(
	void*                                       pUserData,
	void*                                       pMemory);

using PFN_vkInternalAllocationNotification = void (VKAPI_PTR *)(
	void*                                       pUserData,
	size_t                                      size,
	InternalAllocationType                      allocationType,
	SystemAllocationScope                       allocationScope);

using PFN_vkInternalFreeNotification = void (VKAPI_PTR *)(
	void*                                       pUserData,
	size_t                                      size,
	InternalAllocationType                      allocationType,
	SystemAllocationScope                       allocationScope);

using PFN_vkReallocationFunction = void* (VKAPI_PTR *)(
	void*                                       pUserData,
	void*                                       pOriginal,
	size_t                                      size,
	size_t                                      alignment,
	SystemAllocationScope                       allocationScope);


// structs copied from vulkan_core.h
typedef struct BaseInStructure {
	StructureType                    sType;
	const struct BaseInStructure*    pNext;
} BaseInStructure;

typedef struct BaseOutStructure {
	StructureType               sType;
	struct BaseOutStructure*    pNext;
} BaseOutStructure;

typedef struct AllocationCallbacks {
	void*                                   pUserData;
	PFN_vkAllocationFunction                pfnAllocation;
	PFN_vkReallocationFunction              pfnReallocation;
	PFN_vkFreeFunction                      pfnFree;
	PFN_vkInternalAllocationNotification    pfnInternalAllocation;
	PFN_vkInternalFreeNotification          pfnInternalFree;
} AllocationCallbacks;

typedef struct ExtensionProperties {
	char        extensionName[MaxExtensionNameSize];
	uint32_t    specVersion;
} ExtensionProperties;

typedef struct LayerProperties {
	char        layerName[MaxExtensionNameSize];
	uint32_t    specVersion;
	uint32_t    implementationVersion;
	char        description[MaxDescriptionSize];
} LayerProperties;

typedef struct ApplicationInfo {
	StructureType      sType = StructureType::eApplicationInfo;
	const void*        pNext = nullptr;
	const char*        pApplicationName;
	uint32_t           applicationVersion;
	const char*        pEngineName;
	uint32_t           engineVersion;
	uint32_t           apiVersion;
} ApplicationInfo;

typedef struct InstanceCreateInfo {
	StructureType               sType = StructureType::eInstanceCreateInfo;
	const void*                 pNext = nullptr;
	InstanceCreateFlags         flags;
	const ApplicationInfo*      pApplicationInfo;
	uint32_t                    enabledLayerCount;
	const char* const*          ppEnabledLayerNames;
	uint32_t                    enabledExtensionCount;
	const char* const*          ppEnabledExtensionNames;
} InstanceCreateInfo;

typedef struct PhysicalDeviceLimits {
	uint32_t              maxImageDimension1D;
	uint32_t              maxImageDimension2D;
	uint32_t              maxImageDimension3D;
	uint32_t              maxImageDimensionCube;
	uint32_t              maxImageArrayLayers;
	uint32_t              maxTexelBufferElements;
	uint32_t              maxUniformBufferRange;
	uint32_t              maxStorageBufferRange;
	uint32_t              maxPushConstantsSize;
	uint32_t              maxMemoryAllocationCount;
	uint32_t              maxSamplerAllocationCount;
	DeviceSize            bufferImageGranularity;
	DeviceSize            sparseAddressSpaceSize;
	uint32_t              maxBoundDescriptorSets;
	uint32_t              maxPerStageDescriptorSamplers;
	uint32_t              maxPerStageDescriptorUniformBuffers;
	uint32_t              maxPerStageDescriptorStorageBuffers;
	uint32_t              maxPerStageDescriptorSampledImages;
	uint32_t              maxPerStageDescriptorStorageImages;
	uint32_t              maxPerStageDescriptorInputAttachments;
	uint32_t              maxPerStageResources;
	uint32_t              maxDescriptorSetSamplers;
	uint32_t              maxDescriptorSetUniformBuffers;
	uint32_t              maxDescriptorSetUniformBuffersDynamic;
	uint32_t              maxDescriptorSetStorageBuffers;
	uint32_t              maxDescriptorSetStorageBuffersDynamic;
	uint32_t              maxDescriptorSetSampledImages;
	uint32_t              maxDescriptorSetStorageImages;
	uint32_t              maxDescriptorSetInputAttachments;
	uint32_t              maxVertexInputAttributes;
	uint32_t              maxVertexInputBindings;
	uint32_t              maxVertexInputAttributeOffset;
	uint32_t              maxVertexInputBindingStride;
	uint32_t              maxVertexOutputComponents;
	uint32_t              maxTessellationGenerationLevel;
	uint32_t              maxTessellationPatchSize;
	uint32_t              maxTessellationControlPerVertexInputComponents;
	uint32_t              maxTessellationControlPerVertexOutputComponents;
	uint32_t              maxTessellationControlPerPatchOutputComponents;
	uint32_t              maxTessellationControlTotalOutputComponents;
	uint32_t              maxTessellationEvaluationInputComponents;
	uint32_t              maxTessellationEvaluationOutputComponents;
	uint32_t              maxGeometryShaderInvocations;
	uint32_t              maxGeometryInputComponents;
	uint32_t              maxGeometryOutputComponents;
	uint32_t              maxGeometryOutputVertices;
	uint32_t              maxGeometryTotalOutputComponents;
	uint32_t              maxFragmentInputComponents;
	uint32_t              maxFragmentOutputAttachments;
	uint32_t              maxFragmentDualSrcAttachments;
	uint32_t              maxFragmentCombinedOutputResources;
	uint32_t              maxComputeSharedMemorySize;
	uint32_t              maxComputeWorkGroupCount[3];
	uint32_t              maxComputeWorkGroupInvocations;
	uint32_t              maxComputeWorkGroupSize[3];
	uint32_t              subPixelPrecisionBits;
	uint32_t              subTexelPrecisionBits;
	uint32_t              mipmapPrecisionBits;
	uint32_t              maxDrawIndexedIndexValue;
	uint32_t              maxDrawIndirectCount;
	float                 maxSamplerLodBias;
	float                 maxSamplerAnisotropy;
	uint32_t              maxViewports;
	uint32_t              maxViewportDimensions[2];
	float                 viewportBoundsRange[2];
	uint32_t              viewportSubPixelBits;
	size_t                minMemoryMapAlignment;
	DeviceSize            minTexelBufferOffsetAlignment;
	DeviceSize            minUniformBufferOffsetAlignment;
	DeviceSize            minStorageBufferOffsetAlignment;
	int32_t               minTexelOffset;
	uint32_t              maxTexelOffset;
	int32_t               minTexelGatherOffset;
	uint32_t              maxTexelGatherOffset;
	float                 minInterpolationOffset;
	float                 maxInterpolationOffset;
	uint32_t              subPixelInterpolationOffsetBits;
	uint32_t              maxFramebufferWidth;
	uint32_t              maxFramebufferHeight;
	uint32_t              maxFramebufferLayers;
	SampleCountFlags      framebufferColorSampleCounts;
	SampleCountFlags      framebufferDepthSampleCounts;
	SampleCountFlags      framebufferStencilSampleCounts;
	SampleCountFlags      framebufferNoAttachmentsSampleCounts;
	uint32_t              maxColorAttachments;
	SampleCountFlags      sampledImageColorSampleCounts;
	SampleCountFlags      sampledImageIntegerSampleCounts;
	SampleCountFlags      sampledImageDepthSampleCounts;
	SampleCountFlags      sampledImageStencilSampleCounts;
	SampleCountFlags      storageImageSampleCounts;
	uint32_t              maxSampleMaskWords;
	Bool32                timestampComputeAndGraphics;
	float                 timestampPeriod;
	uint32_t              maxClipDistances;
	uint32_t              maxCullDistances;
	uint32_t              maxCombinedClipAndCullDistances;
	uint32_t              discreteQueuePriorities;
	float                 pointSizeRange[2];
	float                 lineWidthRange[2];
	float                 pointSizeGranularity;
	float                 lineWidthGranularity;
	Bool32                strictLines;
	Bool32                standardSampleLocations;
	DeviceSize            optimalBufferCopyOffsetAlignment;
	DeviceSize            optimalBufferCopyRowPitchAlignment;
	DeviceSize            nonCoherentAtomSize;
} PhysicalDeviceLimits;

typedef struct PhysicalDeviceSparseProperties {
	Bool32    residencyStandard2DBlockShape;
	Bool32    residencyStandard2DMultisampleBlockShape;
	Bool32    residencyStandard3DBlockShape;
	Bool32    residencyAlignedMipSize;
	Bool32    residencyNonResidentStrict;
} PhysicalDeviceSparseProperties;

typedef struct PhysicalDeviceProperties {
	uint32_t                            apiVersion;
	uint32_t                            driverVersion;
	uint32_t                            vendorID;
	uint32_t                            deviceID;
	PhysicalDeviceType                  deviceType;
	char                                deviceName[MaxPhysicalDeviceNameSize];
	uint8_t                             pipelineCacheUUID[UuidSize];
	PhysicalDeviceLimits                limits;
	PhysicalDeviceSparseProperties      sparseProperties;
} PhysicalDeviceProperties;

typedef struct PhysicalDeviceProperties2 {
	StructureType               sType = StructureType::ePhysicalDeviceProperties2;
	void*                       pNext = nullptr;
	PhysicalDeviceProperties    properties;
} PhysicalDeviceProperties2;

typedef struct PhysicalDeviceVulkan11Properties {
	StructureType            sType = StructureType::ePhysicalDeviceVulkan11Properties;
	void*                    pNext = nullptr;
	uint8_t                  deviceUUID[UuidSize];
	uint8_t                  driverUUID[UuidSize];
	uint8_t                  deviceLUID[LuidSize];
	uint32_t                 deviceNodeMask;
	Bool32                   deviceLUIDValid;
	uint32_t                 subgroupSize;
	ShaderStageFlags         subgroupSupportedStages;
	SubgroupFeatureFlags     subgroupSupportedOperations;
	Bool32                   subgroupQuadOperationsInAllStages;
	PointClippingBehavior    pointClippingBehavior;
	uint32_t                 maxMultiviewViewCount;
	uint32_t                 maxMultiviewInstanceIndex;
	Bool32                   protectedNoFault;
	uint32_t                 maxPerSetDescriptors;
	DeviceSize               maxMemoryAllocationSize;
} PhysicalDeviceVulkan11Properties;

typedef struct ConformanceVersion {
	uint8_t    major;
	uint8_t    minor;
	uint8_t    subminor;
	uint8_t    patch;
} ConformanceVersion;

typedef struct PhysicalDeviceVulkan12Properties {
	StructureType                      sType = StructureType::ePhysicalDeviceVulkan12Properties;
	void*                              pNext = nullptr;
	DriverId                           driverID;
	char                               driverName[MaxDriverNameSize];
	char                               driverInfo[MaxDriverInfoSize];
	ConformanceVersion                 conformanceVersion;
	ShaderFloatControlsIndependence    denormBehaviorIndependence;
	ShaderFloatControlsIndependence    roundingModeIndependence;
	Bool32                             shaderSignedZeroInfNanPreserveFloat16;
	Bool32                             shaderSignedZeroInfNanPreserveFloat32;
	Bool32                             shaderSignedZeroInfNanPreserveFloat64;
	Bool32                             shaderDenormPreserveFloat16;
	Bool32                             shaderDenormPreserveFloat32;
	Bool32                             shaderDenormPreserveFloat64;
	Bool32                             shaderDenormFlushToZeroFloat16;
	Bool32                             shaderDenormFlushToZeroFloat32;
	Bool32                             shaderDenormFlushToZeroFloat64;
	Bool32                             shaderRoundingModeRTEFloat16;
	Bool32                             shaderRoundingModeRTEFloat32;
	Bool32                             shaderRoundingModeRTEFloat64;
	Bool32                             shaderRoundingModeRTZFloat16;
	Bool32                             shaderRoundingModeRTZFloat32;
	Bool32                             shaderRoundingModeRTZFloat64;
	uint32_t                           maxUpdateAfterBindDescriptorsInAllPools;
	Bool32                             shaderUniformBufferArrayNonUniformIndexingNative;
	Bool32                             shaderSampledImageArrayNonUniformIndexingNative;
	Bool32                             shaderStorageBufferArrayNonUniformIndexingNative;
	Bool32                             shaderStorageImageArrayNonUniformIndexingNative;
	Bool32                             shaderInputAttachmentArrayNonUniformIndexingNative;
	Bool32                             robustBufferAccessUpdateAfterBind;
	Bool32                             quadDivergentImplicitLod;
	uint32_t                           maxPerStageDescriptorUpdateAfterBindSamplers;
	uint32_t                           maxPerStageDescriptorUpdateAfterBindUniformBuffers;
	uint32_t                           maxPerStageDescriptorUpdateAfterBindStorageBuffers;
	uint32_t                           maxPerStageDescriptorUpdateAfterBindSampledImages;
	uint32_t                           maxPerStageDescriptorUpdateAfterBindStorageImages;
	uint32_t                           maxPerStageDescriptorUpdateAfterBindInputAttachments;
	uint32_t                           maxPerStageUpdateAfterBindResources;
	uint32_t                           maxDescriptorSetUpdateAfterBindSamplers;
	uint32_t                           maxDescriptorSetUpdateAfterBindUniformBuffers;
	uint32_t                           maxDescriptorSetUpdateAfterBindUniformBuffersDynamic;
	uint32_t                           maxDescriptorSetUpdateAfterBindStorageBuffers;
	uint32_t                           maxDescriptorSetUpdateAfterBindStorageBuffersDynamic;
	uint32_t                           maxDescriptorSetUpdateAfterBindSampledImages;
	uint32_t                           maxDescriptorSetUpdateAfterBindStorageImages;
	uint32_t                           maxDescriptorSetUpdateAfterBindInputAttachments;
	ResolveModeFlags                   supportedDepthResolveModes;
	ResolveModeFlags                   supportedStencilResolveModes;
	Bool32                             independentResolveNone;
	Bool32                             independentResolve;
	Bool32                             filterMinmaxSingleComponentFormats;
	Bool32                             filterMinmaxImageComponentMapping;
	uint64_t                           maxTimelineSemaphoreValueDifference;
	SampleCountFlags                   framebufferIntegerColorSampleCounts;
} PhysicalDeviceVulkan12Properties;

typedef struct PhysicalDeviceFeatures {
	Bool32    robustBufferAccess;
	Bool32    fullDrawIndexUint32;
	Bool32    imageCubeArray;
	Bool32    independentBlend;
	Bool32    geometryShader;
	Bool32    tessellationShader;
	Bool32    sampleRateShading;
	Bool32    dualSrcBlend;
	Bool32    logicOp;
	Bool32    multiDrawIndirect;
	Bool32    drawIndirectFirstInstance;
	Bool32    depthClamp;
	Bool32    depthBiasClamp;
	Bool32    fillModeNonSolid;
	Bool32    depthBounds;
	Bool32    wideLines;
	Bool32    largePoints;
	Bool32    alphaToOne;
	Bool32    multiViewport;
	Bool32    samplerAnisotropy;
	Bool32    textureCompressionETC2;
	Bool32    textureCompressionASTC_LDR;
	Bool32    textureCompressionBC;
	Bool32    occlusionQueryPrecise;
	Bool32    pipelineStatisticsQuery;
	Bool32    vertexPipelineStoresAndAtomics;
	Bool32    fragmentStoresAndAtomics;
	Bool32    shaderTessellationAndGeometryPointSize;
	Bool32    shaderImageGatherExtended;
	Bool32    shaderStorageImageExtendedFormats;
	Bool32    shaderStorageImageMultisample;
	Bool32    shaderStorageImageReadWithoutFormat;
	Bool32    shaderStorageImageWriteWithoutFormat;
	Bool32    shaderUniformBufferArrayDynamicIndexing;
	Bool32    shaderSampledImageArrayDynamicIndexing;
	Bool32    shaderStorageBufferArrayDynamicIndexing;
	Bool32    shaderStorageImageArrayDynamicIndexing;
	Bool32    shaderClipDistance;
	Bool32    shaderCullDistance;
	Bool32    shaderFloat64;
	Bool32    shaderInt64;
	Bool32    shaderInt16;
	Bool32    shaderResourceResidency;
	Bool32    shaderResourceMinLod;
	Bool32    sparseBinding;
	Bool32    sparseResidencyBuffer;
	Bool32    sparseResidencyImage2D;
	Bool32    sparseResidencyImage3D;
	Bool32    sparseResidency2Samples;
	Bool32    sparseResidency4Samples;
	Bool32    sparseResidency8Samples;
	Bool32    sparseResidency16Samples;
	Bool32    sparseResidencyAliased;
	Bool32    variableMultisampleRate;
	Bool32    inheritedQueries;
} PhysicalDeviceFeatures;

typedef struct PhysicalDeviceFeatures2 {
	StructureType             sType = StructureType::ePhysicalDeviceFeatures2;
	void*                     pNext = nullptr;
	PhysicalDeviceFeatures    features;
} PhysicalDeviceFeatures2;

typedef struct PhysicalDeviceVulkan12Features {
	StructureType    sType = StructureType::ePhysicalDeviceVulkan12Features;
	void*            pNext = nullptr;
	Bool32           samplerMirrorClampToEdge;
	Bool32           drawIndirectCount;
	Bool32           storageBuffer8BitAccess;
	Bool32           uniformAndStorageBuffer8BitAccess;
	Bool32           storagePushConstant8;
	Bool32           shaderBufferInt64Atomics;
	Bool32           shaderSharedInt64Atomics;
	Bool32           shaderFloat16;
	Bool32           shaderInt8;
	Bool32           descriptorIndexing;
	Bool32           shaderInputAttachmentArrayDynamicIndexing;
	Bool32           shaderUniformTexelBufferArrayDynamicIndexing;
	Bool32           shaderStorageTexelBufferArrayDynamicIndexing;
	Bool32           shaderUniformBufferArrayNonUniformIndexing;
	Bool32           shaderSampledImageArrayNonUniformIndexing;
	Bool32           shaderStorageBufferArrayNonUniformIndexing;
	Bool32           shaderStorageImageArrayNonUniformIndexing;
	Bool32           shaderInputAttachmentArrayNonUniformIndexing;
	Bool32           shaderUniformTexelBufferArrayNonUniformIndexing;
	Bool32           shaderStorageTexelBufferArrayNonUniformIndexing;
	Bool32           descriptorBindingUniformBufferUpdateAfterBind;
	Bool32           descriptorBindingSampledImageUpdateAfterBind;
	Bool32           descriptorBindingStorageImageUpdateAfterBind;
	Bool32           descriptorBindingStorageBufferUpdateAfterBind;
	Bool32           descriptorBindingUniformTexelBufferUpdateAfterBind;
	Bool32           descriptorBindingStorageTexelBufferUpdateAfterBind;
	Bool32           descriptorBindingUpdateUnusedWhilePending;
	Bool32           descriptorBindingPartiallyBound;
	Bool32           descriptorBindingVariableDescriptorCount;
	Bool32           runtimeDescriptorArray;
	Bool32           samplerFilterMinmax;
	Bool32           scalarBlockLayout;
	Bool32           imagelessFramebuffer;
	Bool32           uniformBufferStandardLayout;
	Bool32           shaderSubgroupExtendedTypes;
	Bool32           separateDepthStencilLayouts;
	Bool32           hostQueryReset;
	Bool32           timelineSemaphore;
	Bool32           bufferDeviceAddress;
	Bool32           bufferDeviceAddressCaptureReplay;
	Bool32           bufferDeviceAddressMultiDevice;
	Bool32           vulkanMemoryModel;
	Bool32           vulkanMemoryModelDeviceScope;
	Bool32           vulkanMemoryModelAvailabilityVisibilityChains;
	Bool32           shaderOutputViewportIndex;
	Bool32           shaderOutputLayer;
	Bool32           subgroupBroadcastDynamicId;
} PhysicalDeviceVulkan12Features;

typedef struct QueueFamilyProperties {
	QueueFlags    queueFlags;
	uint32_t      queueCount;
	uint32_t      timestampValidBits;
	Extent3D      minImageTransferGranularity;
} QueueFamilyProperties;

typedef struct QueueFamilyProperties2 {
	StructureType            sType = StructureType::eQueueFamilyProperties2;
	void*                    pNext = nullptr;
	QueueFamilyProperties    queueFamilyProperties;
} QueueFamilyProperties2;

typedef struct QueueFamilyVideoPropertiesKHR {
	StructureType                  sType = StructureType::eQueueFamilyVideoPropertiesKHR;
	void*                          pNext = nullptr;
	VideoCodecOperationFlagsKHR    videoCodecOperations;
} QueueFamilyVideoPropertiesKHR;

typedef struct FormatProperties {
	FormatFeatureFlags    linearTilingFeatures;
	FormatFeatureFlags    optimalTilingFeatures;
	FormatFeatureFlags    bufferFeatures;
} FormatProperties;

typedef struct ImageFormatProperties {
	Extent3D            maxExtent;
	uint32_t            maxMipLevels;
	uint32_t            maxArrayLayers;
	SampleCountFlags    sampleCounts;
	DeviceSize          maxResourceSize;
} ImageFormatProperties;

typedef struct MemoryHeap {
	DeviceSize         size;
	MemoryHeapFlags    flags;
} MemoryHeap;

typedef struct MemoryType {
	MemoryPropertyFlags    propertyFlags;
	uint32_t               heapIndex;
} MemoryType;

typedef struct PhysicalDeviceMemoryProperties {
	uint32_t      memoryTypeCount;
	MemoryType    memoryTypes[MaxMemoryTypes];
	uint32_t      memoryHeapCount;
	MemoryHeap    memoryHeaps[MaxMemoryHeaps];
} PhysicalDeviceMemoryProperties;

typedef struct PhysicalDeviceMemoryProperties2 {
	StructureType                     sType = StructureType::ePhysicalDeviceMemoryProperties2;
	void*                             pNext = nullptr;
	PhysicalDeviceMemoryProperties    memoryProperties;
} PhysicalDeviceMemoryProperties2;

typedef struct DeviceQueueCreateInfo {
	StructureType               sType = StructureType::eDeviceQueueCreateInfo;
	const void*                 pNext = nullptr;
	DeviceQueueCreateFlags      flags;
	uint32_t                    queueFamilyIndex;
	uint32_t                    queueCount;
	const float*                pQueuePriorities;
} DeviceQueueCreateInfo;

typedef struct DeviceCreateInfo {
	StructureType                      sType = StructureType::eDeviceCreateInfo;
	const void*                        pNext = nullptr;
	DeviceCreateFlags                  flags;
	uint32_t                           queueCreateInfoCount;
	const DeviceQueueCreateInfo*       pQueueCreateInfos;
	uint32_t                           enabledLayerCount;
	const char* const*                 ppEnabledLayerNames;
	uint32_t                           enabledExtensionCount;
	const char* const*                 ppEnabledExtensionNames;
	const PhysicalDeviceFeatures*      pEnabledFeatures;
} DeviceCreateInfo;


// function pointer types
using PFN_vkVoidFunction = void (VKAPI_PTR *)(void);
using PFN_vkGetInstanceProcAddr = PFN_vkVoidFunction (VKAPI_PTR *)(Instance instance, const char* pName);
using PFN_vkEnumerateInstanceVersion = Result (VKAPI_PTR *)(uint32_t* pApiVersion);
using PFN_vkEnumerateInstanceExtensionProperties = Result (VKAPI_PTR *)(const char* pLayerName, uint32_t* pPropertyCount, ExtensionProperties* pProperties);
using PFN_vkEnumerateInstanceLayerProperties = Result (VKAPI_PTR *)(uint32_t* pPropertyCount, LayerProperties* pProperties);
using PFN_vkCreateInstance = Result (VKAPI_PTR *)(const InstanceCreateInfo* pCreateInfo, const AllocationCallbacks* pAllocator, Instance* pInstance);
using PFN_vkDestroyInstance = void (VKAPI_PTR *)(Instance instance, const AllocationCallbacks* pAllocator);
using PFN_vkEnumeratePhysicalDevices = Result (VKAPI_PTR *)(Instance instance, uint32_t* pPhysicalDeviceCount, PhysicalDevice* pPhysicalDevices);
using PFN_vkEnumerateDeviceExtensionProperties = Result (VKAPI_PTR *)(PhysicalDevice physicalDevice, const char* pLayerName, uint32_t* pPropertyCount, ExtensionProperties* pProperties);
using PFN_vkGetPhysicalDeviceProperties = void (VKAPI_PTR *)(PhysicalDevice physicalDevice, PhysicalDeviceProperties* pProperties);
using PFN_vkGetPhysicalDeviceProperties2 = void (VKAPI_PTR *)(PhysicalDevice physicalDevice, PhysicalDeviceProperties2* pProperties);
using PFN_vkGetPhysicalDeviceFeatures = void (VKAPI_PTR *)(PhysicalDevice physicalDevice, PhysicalDeviceFeatures* pFeatures);
using PFN_vkGetPhysicalDeviceFeatures2 = void (VKAPI_PTR *)(PhysicalDevice physicalDevice, PhysicalDeviceFeatures2* pFeatures);
using PFN_vkGetPhysicalDeviceFormatProperties = void (VKAPI_PTR *)(PhysicalDevice physicalDevice, Format format, FormatProperties* pFormatProperties);
using PFN_vkGetPhysicalDeviceImageFormatProperties = Result (VKAPI_PTR *)(PhysicalDevice physicalDevice, Format format, ImageType type, ImageTiling tiling, ImageUsageFlags usage, ImageCreateFlags flags, ImageFormatProperties* pImageFormatProperties);
using PFN_vkGetPhysicalDeviceMemoryProperties = void (VKAPI_PTR *)(PhysicalDevice physicalDevice, PhysicalDeviceMemoryProperties* pMemoryProperties);
using PFN_vkGetPhysicalDeviceMemoryProperties2 = void (VKAPI_PTR *)(PhysicalDevice physicalDevice, PhysicalDeviceMemoryProperties2* pMemoryProperties);
using PFN_vkGetPhysicalDeviceQueueFamilyProperties = void (VKAPI_PTR *)(PhysicalDevice physicalDevice, uint32_t* pQueueFamilyPropertyCount, QueueFamilyProperties* pQueueFamilyProperties);
using PFN_vkGetPhysicalDeviceQueueFamilyProperties2 = void (VKAPI_PTR *)(PhysicalDevice physicalDevice, uint32_t* pQueueFamilyPropertyCount, QueueFamilyProperties2* pQueueFamilyProperties);
using PFN_vkCreateDevice = Result (VKAPI_PTR *)(PhysicalDevice physicalDevice, const DeviceCreateInfo* pCreateInfo, const AllocationCallbacks* pAllocator, Device* pDevice);
using PFN_vkDestroyDevice = void (VKAPI_PTR *)(Device device, const AllocationCallbacks* pAllocator);
using PFN_vkGetDeviceProcAddr = PFN_vkVoidFunction (VKAPI_PTR *)(Device device, const char* pName);

struct Funcs {
	PFN_vkGetInstanceProcAddr       vkGetInstanceProcAddr = nullptr;
	PFN_vkEnumerateInstanceExtensionProperties    vkEnumerateInstanceExtensionProperties = nullptr;
	PFN_vkEnumerateInstanceLayerProperties        vkEnumerateInstanceLayerProperties = nullptr;
	PFN_vkCreateInstance            vkCreateInstance = nullptr;
	PFN_vkDestroyInstance           vkDestroyInstance = nullptr;
	PFN_vkEnumeratePhysicalDevices  vkEnumeratePhysicalDevices = nullptr;
	PFN_vkEnumerateDeviceExtensionProperties      vkEnumerateDeviceExtensionProperties = nullptr;
	PFN_vkGetPhysicalDeviceProperties             vkGetPhysicalDeviceProperties = nullptr;
	PFN_vkGetPhysicalDeviceFeatures               vkGetPhysicalDeviceFeatures = nullptr;
	PFN_vkGetPhysicalDeviceFormatProperties       vkGetPhysicalDeviceFormatProperties = nullptr;
	PFN_vkGetPhysicalDeviceImageFormatProperties  vkGetPhysicalDeviceImageFormatProperties = nullptr;
	PFN_vkGetPhysicalDeviceMemoryProperties       vkGetPhysicalDeviceMemoryProperties = nullptr;
	PFN_vkGetPhysicalDeviceQueueFamilyProperties  vkGetPhysicalDeviceQueueFamilyProperties = nullptr;
	PFN_vkGetPhysicalDeviceProperties2            vkGetPhysicalDeviceProperties2 = nullptr;
	PFN_vkGetPhysicalDeviceFeatures2              vkGetPhysicalDeviceFeatures2 = nullptr;
	PFN_vkGetPhysicalDeviceMemoryProperties2      vkGetPhysicalDeviceMemoryProperties2 = nullptr;
	PFN_vkGetPhysicalDeviceQueueFamilyProperties2 vkGetPhysicalDeviceQueueFamilyProperties2 = nullptr;
	PFN_vkCreateDevice              vkCreateDevice = nullptr;
	PFN_vkDestroyDevice             vkDestroyDevice = nullptr;
	PFN_vkGetDeviceProcAddr         vkGetDeviceProcAddr = nullptr;
};
extern Funcs funcs;

// unique handles
// author: PCJohn (peciva at fit.vut.cz)
template<typename Type> struct UniqueHandleTraits;
template<typename Type>
class UniqueHandle {
protected:
	Type _value;
public:
	UniqueHandle() : _value(nullptr)  {}
	explicit UniqueHandle(Type value) noexcept : _value(value)  {}
	UniqueHandle(const UniqueHandle&) = delete;
	UniqueHandle(UniqueHandle&& other) noexcept : _value(other._value)  { other._value = nullptr; }
	~UniqueHandle()  { UniqueHandleTraits<Type>::destroy(_value); }
	UniqueHandle& operator=(const UniqueHandle&) = delete;
	UniqueHandle& operator=(UniqueHandle&& other) noexcept  { reset(other._value); other._value = nullptr; }
	explicit operator bool() const noexcept  { return _value != nullptr; }
	explicit operator Type() const noexcept  { return _value; }
	Type get() const noexcept  { return _value; }
	void reset(Type value = nullptr) noexcept  { if(value==_value) return; destroy(_value); _value=value; }
	Type release() noexcept  { Type r=_value; _value=nullptr; return r; }
	void swap(UniqueHandle& other)  { Type tmp=_value; _value=other._value; other._value=tmp; }
};


template<> struct UniqueHandleTraits<Instance> {
	static void destroy(Instance value)  { if(value) funcs.vkDestroyInstance(value, nullptr); }
};


using UniqueInstance = UniqueHandle<Instance>;


template<typename Type>
class Span {
protected:
	Type* _data;
	size_t _size;
public:
	Span() : _data(nullptr), _size(0)  {}
	Span(Type* data, size_t size) : _data(data), _size(size)  {}
	
	Span(const Span& other) : _data(other._data), _size(other._size)  {}
	Span(Span&& other) : _data(other._data), _size(other.size)  {}
	Span& operator=(const Span& rhs)  { _data = rhs._data; _size = rhs._size; }
	Span& operator=(Span&& rhs)  { _data = rhs._data; _size = rhs._size; }

	const Type* data() const  { return _data; }
	Type* data()  { return _data; }
	size_t size() const  { return _size; }

	void set(Type* data, size_t size)  { _data = data; _size = size; }
	void clear()  { _data = nullptr; _size = 0; }

};


template<typename Type>
class Vector {
protected:
	Type* _data;
	size_t _size;
public:
	Vector() noexcept : _data(nullptr), _size(0)  {}
	Vector(size_t size) : _data(new Type[size]), _size(size)  {}
	Vector(Type* data, size_t size) noexcept : _data(data), _size(size)  {}
	~Vector() noexcept  { delete[] _data; }

	Vector(const Vector& other);
	Vector(Vector&& other) noexcept : _data(other._data), _size(other._size)  { other._data = nullptr; other._size = 0; }
	Vector& operator=(const Vector& rhs);
	Vector& operator=(Vector&& rhs) noexcept  { delete[] _data; _data = rhs._data; _size = rhs._size; rhs._data = nullptr; rhs._size = 0; return *this; }

	Type& operator[](size_t index)  { return _data[index]; }
	const Type& operator[](size_t index) const  { return _data[index]; }
	Type* data()  { return _data; }
	const Type* data() const  { return _data; }
	size_t size() const  { return _size; }
	bool empty() const  { return _size == 0; }

	void clear() noexcept  { if(_data == nullptr) return; delete[] _data; _data = nullptr; _size = 0; }
	void alloc(size_t size)  { delete[] _data; _data = nullptr; _size = 0; if(size) { _data = new Type[size]; _size = size; } }
	bool alloc_noThrow(size_t size) noexcept  { delete[] _data; if(size == 0) { _data = nullptr; _size = 0; return true; } _data = new(std::nothrow) Type[size]; if(!_data) { _size = 0; return false; } _size = size; return true; }
	void resize(size_t newSize);
	bool resize_noThrow(size_t newSize) noexcept;
};


template<typename Type>
Vector<Type>::Vector(const Vector& other)
	: _data(reinterpret_cast<Type*>(::operator new[](sizeof(Type) * other._size)))
	, _size(other._size)
{
	size_t i=0;
	try {
		for(size_t c=other._size; i<c; i++)
			new(&_data[i]) Type(other._data[i]);
	} catch(...) {
		while(i > 0) {
			i--;
			_data[i].~Type();
		}
		::operator delete[](_data);
		_data = nullptr;
		_size = 0;
		throw;
	}
}


template<typename Type>
Vector<Type>& Vector<Type>::operator=(const Vector& rhs)
{
	if(_size == rhs._size)
		for(size_t i=0,c=_size; i<c; i++)
			_data[i] = rhs._data[i];
	else {
		delete[] _data;
		_data = nullptr;
		_size = 0;
		_data = ::operator new(sizeof(Type) * _size);
		size_t i=0;
		try {
			for(; i<rhs._size; i++)
				new(&_data[i]) Type(rhs._data[i]);
		} catch(...) {
			while(i > 0) {
				i--;
				_data[i].~Type();
			}
			::operator delete[](_data);
			_data = nullptr;
			throw;
		}
		_size = rhs._size;
	}
	return *this;
}


template<typename Type>
void Vector<Type>::resize(size_t newSize)
{
	if(newSize > size()) {
		Type* m = reinterpret_cast<Type*>(::operator new(sizeof(Type) * newSize));
		size_t i = 0;
		size_t s = size();
		size_t j = s;
		try {
			for(; i<s; i++)
				new(&m[i]) Type(std::move(_data[i]));
			for(; j<newSize; j++)
				new(&m[j]) Type();
		} catch(...) {
			while(j != s) {
				j--;
				m[j].~Type();
			}
			while(i != 0) {
				i--;
				m[i].~Type();
			}
			::operator delete[](m);
			throw;
		}
		Type* tmp = _data;
		_data = m;
		_size = newSize;
		delete[] tmp;
	}
	else if(newSize < size())
	{
		if(newSize == 0)
			clear();
		else {
			Type* m = reinterpret_cast<Type*>(::operator new(sizeof(Type) * newSize));
			size_t i = 0;
			try {
				for(size_t c=newSize; i<c; i++)
					new(&m[i]) Type(std::move(_data[i]));
			} catch(...) {
				while(i != 0) {
					i--;
					m[i].~Type();
				}
				::operator delete[](m);
				throw;
			}
			Type* tmp = _data;
			_data = m;
			_size = newSize;
			delete[] tmp;
		}
	}
}


template<typename Type>
bool Vector<Type>::resize_noThrow(size_t newSize) noexcept
{
	if(newSize > size()) {
		Type* m = reinterpret_cast<Type*>(::operator new(sizeof(Type) * newSize, std::nothrow));
		if(!m)  return false;
		size_t i = 0;
		size_t s = size();
		size_t j = s;
		try {
			for(; i<s; i++)
				new(&m[i]) Type(std::move(_data[i]));
			for(; j<newSize; j++)
				new(&m[j]) Type();
		} catch(...) {
			while(j != s) {
				j--;
				m[j].~Type();
			}
			while(i != 0) {
				i--;
				m[i].~Type();
			}
			::operator delete[](m);
			clear();
			return false;
		}
		Type* tmp = _data;
		_data = m;
		_size = newSize;
		delete[] tmp;
	}
	else if(newSize < size())
	{
		if(newSize == 0)
			clear();
		else {
			Type* m = reinterpret_cast<Type*>(::operator new(sizeof(Type) * newSize, std::nothrow));
			if(!m)  return false;
			size_t i = 0;
			try {
				for(size_t c=newSize; i<c; i++)
					new(&m[i]) Type(std::move(_data[i]));
			} catch(...) {
				while(i != 0) {
					i--;
					m[i].~Type();
				}
				::operator delete[](m);
				clear();
				return false;
			}
			Type* tmp = _data;
			_data = m;
			_size = newSize;
			delete[] tmp;
		}
	}
	return true;
}


// conversions
// resultToString() returns Span that contains pointer to const char array
// and size of the string excluding terminating zero character
Span<const char> resultToString(Result result);
// int32ToString converts int32_t to text that is stored in the buffer pointed by bufferAtLeast12BytesLong;
// the buffer of 12 bytes is long enough to store all digits of int32, sign mark and terminating zero character;
// the buffer can be smaller if the user is sure that the value can be stored there;
// returned value is the length of the string stored in bufferAtLeast12BytesLong excluding terminating zero character
size_t int32ToString(int32_t value, char* bufferAtLeast12BytesLong);


// exceptions
// author: PCJohn (peciva at fit.vut.cz)
void throwResultExceptionWithMessage(Result result, const char* message);
void throwResultException(const char* funcName, Result result);
inline void checkForSuccessValue(Result result, const char* funcName)  { if(result != vk::Result::eSuccess) throwResultException(funcName, result); }
inline void checkSuccess(Result result, const char* funcName)  { if(int32_t(result) < 0) throwResultException(funcName, result); }

class Error {
protected:
	char* _msg = nullptr;
public:
	Error() noexcept = default;
	Error(const char* message) noexcept  { if(message==nullptr) { _msg=nullptr; return; }  size_t n=strlen(message)+1; _msg = reinterpret_cast<char*>(malloc(n)); if(_msg) strncpy(_msg, message, n); }
	Error(const char* msgHeader, const char* msgBody) noexcept;
	Error(const char* funcName, Result result) noexcept;
	Error(const Error& other) noexcept  { delete[] _msg; if(other._msg==nullptr) { _msg=nullptr; return; } size_t n=strlen(other._msg)+1; _msg = reinterpret_cast<char*>(malloc(n)); if(_msg) strncpy(_msg, other._msg, n); }
	Error& operator=(const Error& rhs) noexcept  { if(rhs._msg==nullptr) { _msg=nullptr; return *this; } size_t n=strlen(rhs._msg)+1; _msg = reinterpret_cast<char*>(malloc(n)); if(_msg) strncpy(_msg, rhs._msg, n); return *this; }
	virtual ~Error() noexcept  { delete[] _msg; }
	virtual const char* what() const noexcept  { return _msg ? _msg : "Unknown exception"; }
};

class SuccessResult : public Error { public: using Error::Error; };
class NotReadyResult : public Error { public: using Error::Error; };
class TimeoutResult : public Error { public: using Error::Error; };
class EventSetResult : public Error { public: using Error::Error; };
class EventResetResult : public Error { public: using Error::Error; };
class IncompleteResult : public Error { public: using Error::Error; };
class OutOfHostMemoryError : public Error { public: using Error::Error; };
class OutOfDeviceMemoryError : public Error { public: using Error::Error; };
class InitializationFailedError : public Error { public: using Error::Error; };
class DeviceLostError : public Error { public: using Error::Error; };
class MemoryMapFailedError : public Error { public: using Error::Error; };
class LayerNotPresentError : public Error { public: using Error::Error; };
class ExtensionNotPresentError : public Error { public: using Error::Error; };
class FeatureNotPresentError : public Error { public: using Error::Error; };
class IncompatibleDriverError : public Error { public: using Error::Error; };
class TooManyObjectsError : public Error { public: using Error::Error; };
class FormatNotSupportedError : public Error { public: using Error::Error; };
class FragmentedPoolError : public Error { public: using Error::Error; };
class UnknownError : public Error { public: using Error::Error; };

// version 1.1
class OutOfPoolMemoryError : public Error { public: using Error::Error; };

// version 1.1
class InvalidExternalHandleError : public Error { public: using Error::Error; };

// version 1.2
class FragmentationError : public Error { public: using Error::Error; };

// version 1.2
class InvalidOpaqueCaptureAddressError : public Error { public: using Error::Error; };


// vkg errors
class VkgError : public Error { public: using Error::Error; };


template<typename T> inline T getInstanceProcAddr(const char* name) noexcept  { return reinterpret_cast<T>(funcs.vkGetInstanceProcAddr(instance(), name)); }
template<typename T> inline T getDeviceProcAddr(const char* name) noexcept  { return reinterpret_cast<T>(funcs.vkGetDeviceProcAddr(device(), name)); }
inline bool isExtensionSupported(const Vector<ExtensionProperties>& extensionList, const char* extensionName) noexcept
{
	for(size_t i=0,c=extensionList.size(); i<c; i++)
		if(strcmp(extensionList[i].extensionName, extensionName) == 0)
			return true;
	return false;
}

Vector<ExtensionProperties> enumerateInstanceExtensionProperties_throw(const char* pLayerName);
Result enumerateInstanceExtensionProperties_noThrow(const char* pLayerName, Vector<ExtensionProperties>& extensionList) noexcept;
inline Vector<ExtensionProperties> enumerateInstanceExtensionProperties(const char* pLayerName)  { return enumerateInstanceExtensionProperties_throw(pLayerName); }
Vector<LayerProperties> enumerateInstanceLayerProperties_throw();
Result enumerateInstanceLayerProperties_noThrow(Vector<LayerProperties>& properties) noexcept;
inline Vector<LayerProperties> enumerateInstanceLayerProperties()  { return enumerateInstanceLayerProperties_throw(); }
Vector<PhysicalDevice> enumeratePhysicalDevices_throw();
Result enumeratePhysicalDevices_noThrow(Vector<PhysicalDevice>& physicalDevices) noexcept;
inline Vector<PhysicalDevice> enumeratePhysicalDevices()  { return enumeratePhysicalDevices_throw(); }
Vector<ExtensionProperties> enumerateDeviceExtensionProperties_throw(PhysicalDevice pd, const char* pLayerName);
Result enumerateDeviceExtensionProperties_noThrow(PhysicalDevice pd, const char* pLayerName, Vector<ExtensionProperties>& physicalDevices) noexcept;
inline Vector<ExtensionProperties> enumerateDeviceExtensionProperties(PhysicalDevice pd, const char* pLayerName)  { return enumerateDeviceExtensionProperties_throw(pd, pLayerName); }
inline PhysicalDeviceProperties getPhysicalDeviceProperties(PhysicalDevice pd) noexcept  { PhysicalDeviceProperties p; funcs.vkGetPhysicalDeviceProperties(pd, &p); return p; }
inline void getPhysicalDeviceProperties2(PhysicalDevice pd, PhysicalDeviceProperties2& pProperties) noexcept  { funcs.vkGetPhysicalDeviceProperties2(pd, &pProperties); }
inline PhysicalDeviceFeatures getPhysicalDeviceFeatures(PhysicalDevice pd) noexcept  { PhysicalDeviceFeatures f; funcs.vkGetPhysicalDeviceFeatures(pd, &f); return f; }
inline void getPhysicalDeviceFeatures2(PhysicalDevice pd, PhysicalDeviceFeatures2& pFeatures) noexcept  { funcs.vkGetPhysicalDeviceFeatures2(pd, &pFeatures); }
inline FormatProperties getPhysicalDeviceFormatProperties(PhysicalDevice pd, Format f) noexcept  { FormatProperties p; funcs.vkGetPhysicalDeviceFormatProperties(pd, f, &p); return p; }
inline ImageFormatProperties getPhysicalDeviceImageFormatProperties_throw(PhysicalDevice pd, Format f, ImageType type, ImageTiling tiling, ImageUsageFlags usage, ImageCreateFlags flags)  { ImageFormatProperties p; Result r = funcs.vkGetPhysicalDeviceImageFormatProperties(pd, f, type, tiling, usage, flags, &p); checkForSuccessValue(r, "vkGetPhysicalDeviceImageFormatProperties"); return p; }
inline Result getPhysicalDeviceImageFormatProperties_noThrow(PhysicalDevice pd, Format f, ImageType type, ImageTiling tiling, ImageUsageFlags usage, ImageCreateFlags flags, ImageFormatProperties& imageFormatProperties) noexcept  { return funcs.vkGetPhysicalDeviceImageFormatProperties(pd, f, type, tiling, usage, flags, &imageFormatProperties); }
inline ImageFormatProperties getPhysicalDeviceImageFormatProperties(PhysicalDevice pd, Format f, ImageType type, ImageTiling tiling, ImageUsageFlags usage, ImageCreateFlags flags)  { return getPhysicalDeviceImageFormatProperties_throw(pd, f, type, tiling, usage, flags); }
inline PhysicalDeviceMemoryProperties getPhysicalDeviceMemoryProperties(PhysicalDevice pd) noexcept  { PhysicalDeviceMemoryProperties p; funcs.vkGetPhysicalDeviceMemoryProperties(pd, &p); return p; }
inline void getPhysicalDeviceMemoryProperties2(PhysicalDevice pd, PhysicalDeviceMemoryProperties2& pMemoryProperties) noexcept  { funcs.vkGetPhysicalDeviceMemoryProperties2(pd, &pMemoryProperties); }
Vector<QueueFamilyProperties> getPhysicalDeviceQueueFamilyProperties_throw(PhysicalDevice pd);
Result getPhysicalDeviceQueueFamilyProperties_noThrow(PhysicalDevice pd, Vector<QueueFamilyProperties>& queueFamilyList) noexcept;
inline Vector<QueueFamilyProperties> getPhysicalDeviceQueueFamilyProperties(PhysicalDevice pd)  { return getPhysicalDeviceQueueFamilyProperties_throw(pd); }
Vector<QueueFamilyProperties2> getPhysicalDeviceQueueFamilyProperties2_throw(PhysicalDevice pd);
Result getPhysicalDeviceQueueFamilyProperties2_noThrow(PhysicalDevice pd, Vector<QueueFamilyProperties2>& queueFamilyProperties) noexcept;
inline Vector<QueueFamilyProperties2> getPhysicalDeviceQueueFamilyProperties2(PhysicalDevice pd)  { return getPhysicalDeviceQueueFamilyProperties2_throw(pd); }

namespace detail {
	struct GetPhysicalDeviceQueueFamilyProperties2_struct {
		uint8_t* pStruct;
		size_t structSize;
	};
	template<typename T>
	GetPhysicalDeviceQueueFamilyProperties2_struct
	getPhysicalDeviceQueueFamilyProperties2_throw_helper(uint32_t n, Vector<T>& v, bool useV)
	{
		if(useV) {
			v.alloc(n);
			return GetPhysicalDeviceQueueFamilyProperties2_struct{
				.pStruct = reinterpret_cast<uint8_t*>(v.data()),
				.structSize = sizeof(T),
			};
		}
		else
			return {nullptr, 0};
	}
	template<typename T>
	GetPhysicalDeviceQueueFamilyProperties2_struct
	getPhysicalDeviceQueueFamilyProperties2_noThrow_helper(uint32_t n, Vector<T>& v, bool useV) noexcept
	{
		if(useV) {
			if(!v.alloc_noThrow(n))
				return GetPhysicalDeviceQueueFamilyProperties2_struct{
					.pStruct = reinterpret_cast<uint8_t*>(~uint64_t(0)),
				};
			return GetPhysicalDeviceQueueFamilyProperties2_struct{
				.pStruct = reinterpret_cast<uint8_t*>(v.data()),
				.structSize = sizeof(T),
			};
		}
		else
			return {nullptr, 0};
	}
	template<typename T, typename... ArgPack>
	GetPhysicalDeviceQueueFamilyProperties2_struct
	getPhysicalDeviceQueueFamilyProperties2_throw_helper(uint32_t n, Vector<T>& v, bool useV, ArgPack&&... argPack)
	{
		GetPhysicalDeviceQueueFamilyProperties2_struct s =
			getPhysicalDeviceQueueFamilyProperties2_helper(n, argPack...);
		if(useV) {
			v.alloc(n);
			if(s.pStruct) {
				uint8_t* p = s.pStruct;
				for(size_t i=0; i<n; i++) {
					v[i].pNext = p;
					p += s.structSize;
				}
			}
			return {reinterpret_cast<uint8_t*>(v.data()), sizeof(T)};
		}
		else
			return s;
	}
	template<typename T, typename... ArgPack>
	GetPhysicalDeviceQueueFamilyProperties2_struct
	getPhysicalDeviceQueueFamilyProperties2_noThrow_helper(uint32_t n, Vector<T>& v, bool useV, ArgPack&&... argPack) noexcept
	{
		GetPhysicalDeviceQueueFamilyProperties2_struct s =
			getPhysicalDeviceQueueFamilyProperties2_helper(n, argPack...);
		if(s.pStruct == reinterpret_cast<uint8_t*>(~uint64_t(0)))
			return s;
		if(useV) {
			if(!v.alloc_noThrow(n))
				return GetPhysicalDeviceQueueFamilyProperties2_struct{
					.pStruct = reinterpret_cast<uint8_t*>(~uint64_t(0)),
				};
			if(s.pStruct) {
				uint8_t* p = s.pStruct;
				for(size_t i=0; i<n; i++) {
					v[i].pNext = p;
					p += s.structSize;
				}
			}
			return {reinterpret_cast<uint8_t*>(v.data()), sizeof(T)};
		}
		else
			return s;
	}
}
template<typename... ArgPack>
Vector<QueueFamilyProperties2> getPhysicalDeviceQueueFamilyProperties2_throw(PhysicalDevice pd, ArgPack&&... argPack)
{
	// get num queue families
	uint32_t n;
	funcs.vkGetPhysicalDeviceQueueFamilyProperties2(pd, &n, nullptr);
	if(n == 0)
		return {};

	// alloc and link pNext structures
	detail::GetPhysicalDeviceQueueFamilyProperties2_struct s =
		detail::getPhysicalDeviceQueueFamilyProperties2_throw_helper(n, argPack...);

	// QueueFamilyProperties2 list
	Vector<QueueFamilyProperties2> queueFamilyProperties;
	queueFamilyProperties.alloc(n);  // this might throw
	if(s.pStruct) {
		uint8_t* p = s.pStruct;
		for(size_t i=0; i<n; i++) {
			queueFamilyProperties[i].pNext = p;
			p += s.structSize;
		}
	}

	// enumerate physical devices
	funcs.vkGetPhysicalDeviceQueueFamilyProperties2(pd, &n, queueFamilyProperties.data());
	return queueFamilyProperties;
}
template<typename... ArgPack>
Result getPhysicalDeviceQueueFamilyProperties2_noThrow(PhysicalDevice pd, Vector<QueueFamilyProperties2>& queueFamilyProperties, ArgPack&&... argPack) noexcept
{
	// get num queue families
	uint32_t n;
	funcs.vkGetPhysicalDeviceQueueFamilyProperties2(pd, &n, nullptr);

	// alloc and link pNext structures
	detail::GetPhysicalDeviceQueueFamilyProperties2_struct s =
		detail::getPhysicalDeviceQueueFamilyProperties2_noThrow_helper(n, argPack...);
	if(s.pStruct == reinterpret_cast<uint8_t*>(~uint64_t(0)))
		return Result::eErrorOutOfHostMemory;

	// QueueFamilyProperties2 list
	if(!queueFamilyProperties.alloc_noThrow(n))
		return Result::eErrorOutOfHostMemory;
	if(s.pStruct) {
		uint8_t* p = s.pStruct;
		for(size_t i=0; i<n; i++) {
			queueFamilyProperties[i].pNext = p;
			p += s.structSize;
		}
	}

	// enumerate physical devices
	funcs.vkGetPhysicalDeviceQueueFamilyProperties2(pd, &n, queueFamilyProperties.data());
	return Result::eSuccess;
}
template<typename... ArgPack>
Vector<QueueFamilyProperties2> getPhysicalDeviceQueueFamilyProperties2(PhysicalDevice pd, ArgPack&&... argPack)  { return getPhysicalDeviceQueueFamilyProperties2_throw(pd, argPack...); }
template<typename T>
Vector<QueueFamilyProperties2> getPhysicalDeviceQueueFamilyProperties2_throw(PhysicalDevice pd, Vector<T>& t)  { return getPhysicalDeviceQueueFamilyProperties2(pd, t, true); }
template<typename T>
Result getPhysicalDeviceQueueFamilyProperties2_noThrow(PhysicalDevice pd, Vector<QueueFamilyProperties2>& queueFamilyProperties, Vector<T>& t) noexcept  { return getPhysicalDeviceQueueFamilyProperties2_noThrow(pd, queueFamilyProperties, t, true); }


}
